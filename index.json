[{"body":"","link":"https://cuile.github.io/","section":"","tags":null,"title":""},{"body":"","link":"https://cuile.github.io/tags/nuitka/","section":"tags","tags":null,"title":"nuitka"},{"body":"Usage: python.exe -m nuitka [--mode=compilation_mode] [--run] [options] main_module.py\nNote: For general plugin help (they often have their own command line options too), consider the output of '--help-plugins'.      Options: 选项：     --help show this help message and exit    --version Show version information and important details for bug reports, then exit. Defaults to off.    --module Create an importable binary extension module executable instead of a program. Defaults to off. 创建可导入的二进制扩展模块可执行文件，而不是程序。默认为关闭。   --mode=COMPILATION_MODE Mode in which to compile. Accelerated runs in your Python installation and epends on it. Standalone creates a folder with an executable contained to run it. Onefile creates a single executable to deploy. App is onefile except on macOS where it's not to be used. Module makes a module, and package includes also all sub-modules and sub-packages. Default is 'accelerated'. 编译模式。Accelerated 在 Python 安装中运行并依附于它。Standalone 会创建一个包含可执行文件的文件夹，以便运行。Onefile 创建单个可执行文件以进行部署。App 就是 onefile，在 macOS 上不使用。Module 制作一个模块，软件包也包括所有子模块和子软件包。默认为 “accelerated”。   --standalone Enable standalone mode for output. This allows you to transfer the created binary to other machines without it using an existing Python installation. This also means it will become big. It implies these option: \u0026quot;--follow-imports\u0026quot; and \u0026quot;--python-flag=no_site\u0026quot;. Defaults to off. 启用独立输出模式。这样就可以将创建的二进制文件传输到其他机器上，而无需使用现有的 Python 安装。这也意味着它将变得很大。这意味着需要这些选项： “follow-imports“ 和 ”--python-flag=no_site\u0026quot;。默认为关闭。   --onefile On top of standalone mode, enable onefile mode. This means not a folder, but a compressed executable is created and used. Defaults to off. 在独立模式的基础上，启用单文件模式。这意味着创建和使用的不是文件夹，而是压缩后的可执行文件。默认为关闭。   --python-flag=FLAG Python flags to use. Default is what you are using to run Nuitka, this enforces a specific mode. These are options that also exist to standard Python executable. Currently supported: \u0026quot;-S\u0026quot; (alias \u0026quot;no_site\u0026quot;), \u0026quot;static_hashes\u0026quot; (do not use hash randomization), \u0026quot;no_warnings\u0026quot; (do not give Python run time warnings), \u0026quot;-O\u0026quot; (alias \u0026quot;no_asserts\u0026quot;), \u0026quot;no_docstrings\u0026quot; (do not use doc strings), \u0026quot;-u\u0026quot; (alias \u0026quot;unbuffered\u0026quot;), \u0026quot;isolated\u0026quot; (do not load outside code) and \u0026quot;-m\u0026quot; (package mode, compile as \u0026quot;package.main\u0026quot;). Default empty. 要使用的 Python 标志。默认值是运行 Nuitka 时使用的值，它强制执行特定的模式。这些选项也存在于标准 Python 可执行文件中。目前支持 “-S“（别名 ”no_site“）、”static_hashes“（不使用哈希随机化）、”no_warnings“（不给出 Python 运行时警告）、”-O“（别名 ”no_asserts“）、”no_docstrings“（不使用文档字符串）、”-u“（别名 ”unbuffered“）、”isol isolated“（不加载外部代码）和”-m“（包模式，编译为 ”package.main\u0026quot;）。默认为空。   --python-debug Use debug version or not. Default uses what you are using to run Nuitka, most likely a non-debug version. Only for debugging and testing purposes. 是否使用调试版本。默认使用运行 Nuitka 的版本，很可能是非调试版本。仅用于调试和测试目的。   --python-for-scons=PATH When compiling with Python 3.4 provide the path of a Python binary to use for Scons. Otherwise Nuitka can use what you run Nuitka with, or find Python installation, e.g. from Windows registry. On Windows, a Python 3.5 or higher is needed. On non-Windows, a Python 2.6 or 2.7 will do as well. 使用 Python 3.4 编译时，请提供 Scons 使用的 Python 二进制文件的路径。否则，Nuitka 可以使用您运行 Nuitka 时所使用的路径，或者从 Windows 注册表中查找 Python 的安装路径。在 Windows 上，需要 Python 3.5 或更高版本。在非 Windows 下，Python 2.6 或 2.7 也可以。   --main=PATH If specified once, this takes the place of the positional argument, i.e. the filename to compile. When given multiple times, it enables \u0026quot;multidist\u0026quot; (see User Manual) it allows you to create binaries that depending on file name or invocation name. 如果只指定一次，它将取代位置参数，即要编译的文件名。如果多次指定，则会启用 “multidist”（参见《用户手册》），允许根据文件名或调用名创建二进制文件。        Backend C compiler choice: 后端 C 编译器选择：     --clang Enforce the use of clang. On Windows this requires a working Visual Studio version to piggy back on. Defaults to off. 强制使用 clang。在 Windows 环境下，这需要一个正常运行的 Visual Studio 版本作为辅助。默认为关闭。   --mingw64 Enforce the use of MinGW64 on Windows. Defaults to off unless MSYS2 with MinGW Python is used. 强制在 Windows 上使用 MinGW64。默认为关闭，除非使用带有 MinGW Python 的 MSYS2。   --msvc=MSVC_VERSION Enforce the use of specific MSVC version on Windows. Allowed values are e.g. \u0026quot;14.3\u0026quot; (MSVC 2022) and other MSVC version numbers, specify \u0026quot;list\u0026quot; for a list of installed compilers, or use \u0026quot;latest\u0026quot;. Defaults to latest MSVC being used if installed, otherwise MinGW64 is used. 强制在 Windows 上使用特定的 MSVC 版本。允许的值包括 “14.3”（MSVC 2022）和其他 MSVC 版本号，指定 “list ”表示已安装的编译器列表，或使用 “latest”。 如果已安装，默认使用最新的 MSVC，否则使用 MinGW64。   --jobs=N Specify the allowed number of parallel C compiler jobs. Negative values are system CPU minus the given value. Defaults to the full system CPU count unless low memory mode is activated, then it defaults to 1. 指定允许的 C 编译器并行作业数。负值为系统 CPU 减去给定值。默认为整个系统 CPU 数量，除非激活了低内存模式，否则默认为 1。   --lto=choice Use link time optimizations (MSVC, gcc, clang). Allowed values are \u0026quot;yes\u0026quot;, \u0026quot;no\u0026quot;, and \u0026quot;auto\u0026quot; (when it's known to work). Defaults to \u0026quot;auto\u0026quot;. 使用链接时间优化（MSVC、gcc、clang）。允许的值有 “是”、“否 ”和 “自动”（已知有效时）。默认为 “自动”。   --static-libpython=choice Use static link library of Python. Allowed values are \u0026quot;yes\u0026quot;, \u0026quot;no\u0026quot;, and \u0026quot;auto\u0026quot; (when it's known to work). Defaults to \u0026quot;auto\u0026quot;. 使用 Python 的静态链接库。允许的值有 “yes”、“no ”和 “auto”（已知有效时）。默认为 “auto”。   --cf-protection=PROTECTION_MODE This option is gcc specific. For the gcc compiler, select the \u0026quot;cf-protection\u0026quot; mode. Default \u0026quot;auto\u0026quot; is to use the gcc default value, but you can override it, e.g. to disable it with \u0026quot;none\u0026quot; value. Refer to gcc documentation for \u0026quot;-fcf-protection\u0026quot; for the details. 该选项针对 gcc。对于 gcc 编译器，请选择 “cf-protection ”模式。默认值为 “auto”，即使用 gcc 的默认值，但也可以覆盖它，例如使用 “none ”值禁用它。详情请参阅 gcc 文档中的“-fcf-protection”。        Onefile options: Onefile 选项：     --onefile-tempdir-spec=ONEFILE_TEMPDIR_SPEC Use this as a folder to unpack to in onefile mode. Defaults to '{TEMP}/onefile_{PID}_{TIME}', i.e. user temporary directory and being non-static it's removed. Use e.g. a string like '{CACHE_DIR}/{COMPANY}/{PRODUCT}/{VERSION}' which is a good static cache path, this will then not be removed. 在单文件模式下，将其作为解压到的文件夹。默认为“{TEMP}/onefile_{PID}_{TIME}”，即用户临时目录，非静态时会被移除。例如，使用类似“{CACHE_DIR}/{COMPANY}/{PRODUCT}/{VERSION}”的字符串，这是一个很好的静态缓存路径，因此不会被移除。   --onefile-child-grace-time=GRACE_TIME_MS When stopping the child, e.g. due to CTRL-C or shutdown, etc. the Python code gets a \u0026quot;KeyboardInterrupt\u0026quot;, that it may handle e.g. to flush data. This is the amount of time in ms, before the child it killed in the hard way. Unit is ms, and default 5000. 当停止子进程时，例如，由于 CTRL-C 或关机等原因，Python 代码会收到一个 “KeyboardInterrupt”（键盘中断），它可以处理这个中断，例如，刷新数据。这是以毫秒为单位的时间量，在子进程被强制杀死之前。单位为 ms，默认为 5000。   --onefile-no-compression When creating the onefile, disable compression of the payload. This is mostly for debug purposes, or to save time. Default is off. 创建 onefile 时，禁用对有效载荷的压缩。这主要是为了调试或节省时间。默认为关闭。   --onefile-as-archive When creating the onefile, use an archive format, that can be unpacked with nuitka-onefile-unpack\u0026quot; rather than a stream that only the onefile program itself unpacks. Default is off. 创建 onefile 时，使用可以用 nuitka-onefile-unpack 解压的压缩包格式，而不是只能由 onefile 程序自己解压的流格式。默认为关闭。        Data files: 数据文件：     --include-package-data=PACKAGE Include data files for the given package name. DLLs and extension modules are not data files and never included like this. Can use patterns the filenames as indicated below. Data files of packages are not included by default, but package configuration can do it. This will only include non-DLL, non-extension modules, i.e. actual data files. After a \u0026quot;:\u0026quot; optionally a filename pattern can be given as well, selecting only matching files. Examples: \u0026quot;--include-package-data=package_name\u0026quot; (all files) \u0026quot;--include-package-data=package_name:*.txt\u0026quot; (only certain type) \u0026quot;--include-package-data=package_name:some_filename.dat\u0026quot; (concrete file) Default empty. 包括指定软件包名称的数据文件。动态链接库和扩展模块不是数据文件，因此不会像这样被包含。可以使用如下所示的文件名模式。默认情况下不包含软件包的数据文件，但软件包配置可以这样做。这只会包含非 DLL、非扩展模块，即实际的数据文件。在“: ”后还可选择给出文件名模式，只选择匹配的文件。例如 “--include-package-data=package_name“（所有文件） ”--include-package-data=package_name:*.txt“（仅特定类型） ”--include-package-data=package_name:some_filename.dat\u0026quot;（具体文件） 默认为空。   --include-data-files=DESC Include data files by filenames in the distribution. There are many allowed forms. With '--include-data-files=/path/to/file/.txt=folder_name/some.txt' it will copy a single file and complain if it's multiple. With '--include-data-files=/path/to/files/.txt=folder_name/' it will put all matching files into that folder. For recursive copy there is a form with 3 values that '--include-data-files=/path/to/scan=folder_name/=**/*.txt' that will preserve directory structure. Default empty. 按文件名将数据文件包含在分发文件中。允许的形式有很多种。如果使用“--include-data-files=/path/to/file/.txt=folder_name/some.txt”，它将复制单个文件，如果是多个文件则会抱怨。如果使用“--include-data-files=/path/to/files/.txt=folder_name/”，则会将所有匹配文件放入该文件夹。对于递归复制，“--include-data-files=/path/to/scan=folder_name/=**/*.txt ”表格包含 3 个值，将保留目录结构。默认为空。   --include-data-dir=DIRECTORY Include data files from complete directory in the distribution. This is recursive. Check '--include-data-files' with patterns if you want non-recursive inclusion. An example would be '--include-data-dir=/path/some_dir=data/some_dir' for plain copy, of the whole directory. All non-code files are copied, if you want to use '--noinclude-data-files' option to remove them. Default empty. 包含发行版中完整目录下的数据文件。这是递归的。如果想要非递归包含，请勾选带有模式的“--include-data-files”。例如，“--include-data-dir=/path/some_dir=data/some_dir ”是对整个目录的纯复制。如果想使用“--noinclude-data-files ”选项删除非代码文件，则会复制所有非代码文件。默认为空。   --noinclude-data-files=PATTERN Do not include data files matching the filename pattern given. This is against the target filename, not source paths. So to ignore a file pattern from package data for 'package_name' should be matched as 'package_name/*.txt'. Or for the whole directory simply use 'package_name'. Default empty. 不包含与给定文件名模式匹配的数据文件。这针对的是目标文件名，而不是源路径。因此，要忽略 “package_name ”的软件包数据中的文件模式，应匹配为 “package_name/*.txt”。或者，对于整个目录，只需使用 “package_name ”即可。默认为空。   --include-onefile-external-data=PATTERN Include the specified data file patterns outside of the onefile binary, rather than on the inside. Makes only sense in case of '--onefile' compilation. First files have to be specified as included with other --include-*data* options, and then this refers to target paths inside the distribution. Default empty. 将指定的数据文件模式包含在 onefile 二进制文件的外部，而不是内部。只有在“--onefile ”编译时才有意义。首先，必须使用其他 --include-*data*选项指定包含的文件，然后才会引用发行版内部的目标路径。默认为空。   --list-package-data=LIST_PACKAGE_DATA Output the data files found for a given package name.Default not done. 输出为给定软件包名称找到的数据文件，默认为未完成。   --include-raw-dir=DIRECTORY Include raw directories completely in the distribution. This is recursive. Check '--include-data-dir' to use the sane option. Default empty. 将原始目录完全包含在发行版中。这是递归的。选中“--include-data-dir ”以使用正常选项。默认为空。        Compilation choices: 编译选择：     --user-package-configuration-file=YAML_FILENAME User provided Yaml file with package configuration. You can include DLLs, remove bloat, add hidden dependencies. Check the Nuitka Package Configuration Manual for a complete description of the format to use. Can be given multiple times. Defaults to empty. 用户提供的 Yaml 文件包含软件包配置。您可以包含 DLL、删除臃肿、添加隐藏的依赖关系。有关使用格式的完整说明，请查阅《Nuitka 软件包配置手册》。可多次给出。默认为空。   --full-compat Enforce absolute compatibility with CPython. Do not even allow minor deviations from CPython behavior, e.g. not having better tracebacks or exception messages which are not really incompatible, but only different or worse. This is intended for tests only and should not be used. 确保与 CPython 绝对兼容。甚至不允许与 CPython 行为有细微的偏差，例如，不允许有更好的跟踪回溯或异常消息，这些并不是真正的不兼容，而只是不同或更糟而已。这仅用于测试，不应使用。   --file-reference-choice=FILE_MODE Select what value \u0026quot;file\u0026quot; is going to be. With \u0026quot;runtime\u0026quot; (default for standalone binary mode and module mode), the created binaries and modules, use the location of themselves to deduct the value of \u0026quot;file\u0026quot;. Included packages pretend to be in directories below that location. This allows you to include data files in deployments. If you merely seek acceleration, it's better for you to use the \u0026quot;original\u0026quot; value, where the source files location will be used. With \u0026quot;frozen\u0026quot; a notation \u0026quot;\u0026quot; is used. For compatibility reasons, the \u0026quot;file\u0026quot; value will always have \u0026quot;.py\u0026quot; suffix independent of what it really is. 选择“file”的值。如果使用 “runtime”（独立二进制文件模式和模块模式的默认值），创建的二进制文件和模块将使用自己的位置来扣除“file”的值。包含的软件包会假装位于该位置下方的目录中。这样就可以在部署中包含数据文件。如果只是为了加速，最好使用\u0026quot;original\u0026quot;值，即使用源文件的位置。在使用 “frozen ”时，会使用“”符号。出于兼容性考虑，“file”值的后缀始终是“.py”，与实际内容无关。   --module-name-choice=MODULE_NAME_MODE Select what value \u0026quot;name\u0026quot; and \u0026quot;package\u0026quot; are going to be. With \u0026quot;runtime\u0026quot; (default for module mode), the created module uses the parent package to deduce the value of \u0026quot;package\u0026quot;, to be fully compatible. The value \u0026quot;original\u0026quot; (default for other modes) allows for more static optimization to happen, but is incompatible for modules that normally can be loaded into any package. 选择“name”和“package”的值。如果使用 “runtime”（模块模式的默认值），创建的模块会使用父软件包来推断“package”的值，以实现完全兼容。\u0026quot;original\u0026quot;值（其他模式的默认值）允许进行更多的静态优化，但对于通常可以加载到任何软件包的模块来说是不兼容的。        General OS controls: 一般操作系统控制：     --force-stdout-spec=FORCE_STDOUT_SPEC Force standard output of the program to go to this location. Useful for programs with disabled console and programs using the Windows Services Plugin of Nuitka commercial. Defaults to not active, use e.g. '{PROGRAM_BASE}.out.txt', i.e. file near your program, check User Manual for full list of available values. 强制程序的标准输出到此位置。对于禁用控制台的程序和使用 Nuitka 商业版 Windows 服务插件的程序非常有用。默认情况下不激活，例如使用“{PROGRAM_BASE}.out.txt”，即程序附近的文件，查看《用户手册》以获取可用值的完整列表。   --force-stderr-spec=FORCE_STDERR_SPEC Force standard error of the program to go to this location. Useful for programs with disabled console and programs using the Windows Services Plugin of Nuitka commercial. Defaults to not active, use e.g. '{PROGRAM_BASE}.err.txt', i.e. file near your program, check User Manual for full list of available values. 强制程序的标准错误转到此位置。对于禁用控制台的程序和使用 Nuitka commercial 的 Windows 服务插件的程序非常有用。默认值为 “未激活”，例如使用“{PROGRAM_BASE}.err.txt”，即程序附近的文件，查看《用户手册》以获取可用值的完整列表。        Deployment control: 发布控制：     --deployment Disable code aimed at making finding compatibility issues easier. This will e.g. prevent execution with \u0026quot;-c\u0026quot; argument, which is often used by code that attempts run a module, and causes a program to start itself over and over potentially. Disable once you deploy to end users, for finding typical issues, this is very helpful during development. Default off. 禁用旨在更容易发现兼容性问题的代码。例如，这将阻止“-c ”参数的执行，“-c ”参数通常被试图运行模块的代码所使用，并可能导致程序一次又一次地自动启动。一旦部署给最终用户，则禁用该功能，以查找典型问题，这在开发过程中非常有用。默认关闭。   --no-deployment-flag=FLAG Keep deployment mode, but disable selectively parts of it. Errors from deployment mode will output these identifiers. Default empty. 保留部署模式，但有选择地禁用部分功能。部署模式下的错误将输出这些标识符。默认为空。        Environment control: 环境控制：     --force-runtime-environment-variable=VARIABLE_SPEC Force an environment variables to a given value. Default empty. 强制环境变量为给定值。默认为空。        Windows specific controls: Windows 专用控制：     --windows-console-mode=CONSOLE_MODE Select console mode to use. Default mode is 'force' and creates a console window unless the program was started from one. With 'disable' it doesn't create or use a console at all. With 'attach' an existing console will be used for outputs. With 'hide' a newly spawned console will be hidden and an already existing console will behave like 'force'. Default is 'force'. 选择要使用的控制台模式。默认模式为 “force”，会创建一个控制台窗口，除非程序是从控制台窗口启动的。如果使用 “disable”模式，则根本不会创建或使用控制台。使用 “attach”时，将使用现有的控制台进行输出。如果使用 “hide”，新生成的控制台将被隐藏，而已经存在的控制台的行为与 “force ”类似。默认为 “force”。   --windows-icon-from-ico=ICON_PATH Add executable icon. Can be given multiple times for different resolutions or files with multiple icons inside. In the later case, you may also suffix with # where n is an integer index starting from 1, specifying a specific icon to be included, and all others to be ignored. 添加可执行图标。对于不同分辨率或包含多个图标的文件，可以多次添加。在后一种情况下，还可以使用 # 作为后缀，其中 n 是一个从 1 开始的整数索引，用于指定要包含的特定图标，而忽略其他所有图标。   --windows-icon-from-exe=ICON_EXE_PATH Copy executable icons from this existing executable (Windows only). 从现有可执行文件中复制可执行文件图标（仅限 Windows）。   --onefile-windows-splash-screen-image=SPLASH_SCREEN_IMAGE When compiling for Windows and onefile, show this while loading the application. Defaults to off. 为 Windows 和 onefile 编译时，在加载应用程序时显示此选项。默认为关闭。   --windows-uac-admin Request Windows User Control, to grant admin rights on execution. (Windows only). Defaults to off. 请求 Windows 用户控制，授予执行管理权限。（仅限 Windows）。默认为关闭。   --windows-uac-uiaccess Request Windows User Control, to enforce running from a few folders only, remote desktop access. (Windows only). Defaults to off. 请求 Windows 用户控制，以强制执行仅从少数文件夹运行的远程桌面访问。        Control the following into imported modules: 以下内容控制模块导入：     --follow-imports Descend into all imported modules. Defaults to on in standalone mode, otherwise off. 深入所有导入的模块。独立模式下默认开启，否则关闭。   --follow-import-to=MODULE/PACKAGE Follow to that module if used, or if a package, to the whole package. Can be given multiple times. Default empty. 如果使用模块，则指向该模块；如果使用软件包，则指向整个软件包。可多次给出。默认为空。   --nofollow-import-to=MODULE/PACKAGE Do not follow to that module name even if used, or if a package name, to the whole package in any case, overrides all other options. This can also contain patterns, e.g. \u0026quot;*.tests\u0026quot;. Can be given multiple times. Default empty. 即使使用了该模块名，也不要跟随；如果使用了软件包名，则无论如何都要跟随整个软件包，并优先于所有其他选项。也可以包含模式，如 “*.tests”。可多次输入。默认为空。   --nofollow-imports Do not descend into any imported modules at all, overrides all other inclusion options and not usable for standalone mode. Defaults to off. 完全不深入任何导入模块，优先于所有其他包含选项，不能用于独立模式。默认为关闭。   --follow-stdlib Also descend into imported modules from standard library. This will increase the compilation time by a lot and is also not well tested at this time and sometimes won't work. Defaults to off. 还可以从标准库中导入模块。这将大大增加编译时间，而且目前尚未经过充分测试，有时可能无法正常工作。默认为关闭。    Control the inclusion of modules and packages in result: --include-package=PACKAGE Include a whole package. Give as a Python namespace, e.g. \u0026quot;some_package.sub_package\u0026quot; and Nuitka will then find it and include it and all the modules found below that disk location in the binary or extension module it creates, and make it available for import by the code. To avoid unwanted sub packages, e.g. tests you can e.g. do this \u0026quot;--nofollow-import-to=*.tests\u0026quot;. Default empty. --include-module=MODULE Include a single module. Give as a Python namespace, e.g. \u0026quot;some_package.some_module\u0026quot; and Nuitka will then find it and include it in the binary or extension module it creates, and make it available for import by the code. Default empty. --include-plugin-directory=MODULE/PACKAGE Include also the code found in that directory, considering as if they are each given as a main file. Overrides all other inclusion options. You ought to prefer other inclusion options, that go by names, rather than filenames, those find things through being in \u0026quot;sys.path\u0026quot;. This option is for very special use cases only. Can be given multiple times. Default empty. --include-plugin-files=PATTERN Include into files matching the PATTERN. Overrides all other follow options. Can be given multiple times. Default empty. --prefer-source-code For already compiled extension modules, where there is both a source file and an extension module, normally the extension module is used, but it should be better to compile the module from available source code for best performance. If not desired, there is --no- prefer-source-code to disable warnings about it. Default off.\nMetadata support: --include-distribution-metadata=DISTRIBUTION Include metadata information for the given distribution name. Some packages check metadata for presence, version, entry points, etc. and without this option given, it only works when it's recognized at compile time which is not always happening. This of course only makes sense for packages that are included in the compilation. Default empty.\nDLL files: --noinclude-dlls=PATTERN Do not include DLL files matching the filename pattern given. This is against the target filename, not source paths. So ignore a DLL 'someDLL' contained in the package 'package_name' it should be matched as 'package_name/someDLL.*'. Default empty. --list-package-dlls=LIST_PACKAGE_DLLS Output the DLLs found for a given package name. Default not done. --list-package-exe=LIST_PACKAGE_EXE Output the EXEs found for a given package name. Default not done.\nControl the warnings to be given by Nuitka: --warn-implicit-exceptions Enable warnings for implicit exceptions detected at compile time. --warn-unusual-code Enable warnings for unusual code detected at compile time. --assume-yes-for-downloads Allow Nuitka to download external code if necessary, e.g. dependency walker, ccache, and even gcc on Windows. To disable, redirect input from nul device, e.g. \u0026quot;\u0026lt;/dev/null\u0026quot; or \u0026quot;\u0026lt;NUL:\u0026quot;. Default is to prompt. --nowarn-mnemonic=MNEMONIC Disable warning for a given mnemonic. These are given to make sure you are aware of certain topics, and typically point to the Nuitka website. The mnemonic is the part of the URL at the end, without the HTML suffix. Can be given multiple times and accepts shell pattern. Default empty.\nImmediate execution after compilation: --run Execute immediately the created binary (or import the compiled module). Defaults to off. --debugger Execute inside a debugger, e.g. \u0026quot;gdb\u0026quot; or \u0026quot;lldb\u0026quot; to automatically get a stack trace. The debugger is automatically chosen unless specified by name with the NUITKA_DEBUGGER_CHOICE environment variable. Defaults to off.\nOutput choices: --output-filename=FILENAME Specify how the executable should be named. For extension modules there is no choice, also not for standalone mode and using it will be an error. This may include path information that needs to exist though. Defaults to '\u0026lt;program_name\u0026gt;.exe' on this platform. --output-dir=DIRECTORY Specify where intermediate and final output files should be put. The DIRECTORY will be populated with build folder, dist folder, binaries, etc. Defaults to current directory. --remove-output Removes the build directory after producing the module or exe file. Defaults to off. --no-pyi-file Do not create a '.pyi' file for extension modules created by Nuitka. This is used to detect implicit imports. Defaults to off. --no-pyi-stubs Do not use stubgen when creating a '.pyi' file for extension modules created by Nuitka. They expose your API, but stubgen may cause issues. Defaults to off.\nDebug features: --debug Executing all self checks possible to find errors in Nuitka, do not use for production. Defaults to off. --no-debug-immortal-assumptions Disable check normally done with \u0026quot;--debug\u0026quot;. With Python3.12+ do not check known immortal object assumptions. Some C libraries corrupt them. Defaults to check being made if \u0026quot;--debug\u0026quot; is on. --unstripped Keep debug info in the resulting object file for better debugger interaction. Defaults to off. --profile Enable vmprof based profiling of time spent. Not working currently. Defaults to off. --trace-execution Traced execution output, output the line of code before executing it. Defaults to off. --xml=XML_FILENAME Write the internal program structure, result of optimization in XML form to given filename. --experimental=FLAG Use features declared as 'experimental'. May have no effect if no experimental features are present in the code. Uses secret tags (check source) per experimented feature. --low-memory Attempt to use less memory, by forking less C compilation jobs and using options that use less memory. For use on embedded machines. Use this in case of out of memory problems. Defaults to off. --create-environment-from-report=CREATE_ENVIRONMENT_FROM_REPORT Create a new virtualenv in that non-existing path from the report file given with e.g. '--report=compilation- report.xml'. Default not done. --generate-c-only Generate only C source code, and do not compile it to binary or module. This is for debugging and code coverage analysis that doesn't waste CPU. Defaults to off. Do not think you can use this directly.\nNuitka Development features: --devel-missing-code-helpers Report warnings for code helpers for types that were attempted, but don't exist. This helps to identify opportunities for improving optimization of generated code from type knowledge not used. Default False. --devel-missing-trust Report warnings for imports that could be trusted, but currently are not. This is to identify opportunities for improving handling of hard modules, where this sometimes could allow more static optimization. Default False. --devel-recompile-c-only This is not incremental compilation, but for Nuitka development only. Takes existing files and simply compiles them as C again after doing the Python steps. Allows compiling edited C files for manual debugging changes to the generated source. Allows us to add printing, check and print values, but it is now what users would want. Depends on compiling Python source to determine which files it should look at. --devel-internal-graph Create graph of optimization process internals, do not use for whole programs, but only for small test cases. Defaults to off.\nCache Control: --disable-cache=DISABLED_CACHES Disable selected caches, specify \u0026quot;all\u0026quot; for all cached. Currently allowed values are: \u0026quot;all\u0026quot;,\u0026quot;ccache\u0026quot;,\u0026quot;bytecode\u0026quot;,\u0026quot;compression\u0026quot;,\u0026quot;dll- dependencies\u0026quot;. can be given multiple times or with comma separated values. Default none. --clean-cache=CLEAN_CACHES Clean the given caches before executing, specify \u0026quot;all\u0026quot; for all cached. Currently allowed values are: \u0026quot;all\u0026quot;,\u0026quot;ccache\u0026quot;,\u0026quot;bytecode\u0026quot;,\u0026quot;compression\u0026quot;,\u0026quot;dll- dependencies\u0026quot;. can be given multiple times or with comma separated values. Default none. --force-dll-dependency-cache-update For an update of the dependency walker cache. Will result in much longer times to create the distribution folder, but might be used in case the cache is suspect to cause errors or known to need an update.\nPGO compilation choices: --pgo-c Enables C level profile guided optimization (PGO), by executing a dedicated build first for a profiling run, and then using the result to feedback into the C compilation. Note: This is experimental and not working with standalone modes of Nuitka yet. Defaults to off. --pgo-args=PGO_ARGS Arguments to be passed in case of profile guided optimization. These are passed to the special built executable during the PGO profiling run. Default empty. --pgo-executable=PGO_EXECUTABLE Command to execute when collecting profile information. Use this only, if you need to launch it through a script that prepares it to run. Default use created program.\nTracing features: --report=REPORT_FILENAME Report module, data files, compilation, plugin, etc. details in an XML output file. This is also super useful for issue reporting. These reports can e.g. be used to re-create the environment easily using it with '--create-environment-from-report', but contain a lot of information. Default is off. --report-diffable Report data in diffable form, i.e. no timing or memory usage values that vary from run to run. Default is off. --report-user-provided=KEY_VALUE Report data from you. This can be given multiple times and be anything in 'key=value' form, where key should be an identifier, e.g. use '--report-user- provided=pipenv-lock-hash=64a5e4' to track some input values. Default is empty. --report-template=REPORT_DESC Report via template. Provide template and output filename 'template.rst.j2:output.rst'. For built-in templates, check the User Manual for what these are. Can be given multiple times. Default is empty. --quiet Disable all information outputs, but show warnings. Defaults to off. --show-scons Run the C building backend Scons with verbose information, showing the executed commands, detected compilers. Defaults to off. --no-progressbar Disable progress bars. Defaults to off. --show-progress Obsolete: Provide progress information and statistics. Disables normal progress bar. Defaults to off. --show-memory Provide memory information and statistics. Defaults to off. --show-modules Provide information for included modules and DLLs Obsolete: You should use '--report' file instead. Defaults to off. --show-modules-output=PATH Where to output '--show-modules', should be a filename. Default is standard output. --verbose Output details of actions taken, esp. in optimizations. Can become a lot. Defaults to off. --verbose-output=PATH Where to output from '--verbose', should be a filename. Default is standard output.\nmacOS specific controls: --macos-create-app-bundle When compiling for macOS, create a bundle rather than a plain binary application. This is the only way to unlock the disabling of console, get high DPI graphics, etc. and implies standalone mode. Defaults to off. --macos-target-arch=MACOS_TARGET_ARCH What architectures is this to supposed to run on. Default and limit is what the running Python allows for. Default is \u0026quot;native\u0026quot; which is the architecture the Python is run with. --macos-app-icon=ICON_PATH Add icon for the application bundle to use. Can be given only one time. Defaults to Python icon if available. --macos-signed-app-name=MACOS_SIGNED_APP_NAME Name of the application to use for macOS signing. Follow \u0026quot;com.YourCompany.AppName\u0026quot; naming results for best results, as these have to be globally unique, and will potentially grant protected API accesses. --macos-app-name=MACOS_APP_NAME Name of the product to use in macOS bundle information. Defaults to base filename of the binary. --macos-app-mode=APP_MODE Mode of application for the application bundle. When launching a Window, and appearing in Docker is desired, default value \u0026quot;gui\u0026quot; is a good fit. Without a Window ever, the application is a \u0026quot;background\u0026quot; application. For UI elements that get to display later, \u0026quot;ui-element\u0026quot; is in-between. The application will not appear in dock, but get full access to desktop when it does open a Window later. --macos-sign-identity=MACOS_APP_VERSION When signing on macOS, by default an ad-hoc identify will be used, but with this option your get to specify another identity to use. The signing of code is now mandatory on macOS and cannot be disabled. Use \u0026quot;auto\u0026quot; to detect your only identity installed. Default \u0026quot;ad- hoc\u0026quot; if not given. --macos-sign-notarization When signing for notarization, using a proper TeamID identity from Apple, use the required runtime signing option, such that it can be accepted. --macos-app-version=MACOS_APP_VERSION Product version to use in macOS bundle information. Defaults to \u0026quot;1.0\u0026quot; if not given. --macos-app-protected-resource=RESOURCE_DESC Request an entitlement for access to a macOS protected resources, e.g. \u0026quot;NSMicrophoneUsageDescription:Microphone access for recording audio.\u0026quot; requests access to the microphone and provides an informative text for the user, why that is needed. Before the colon, is an OS identifier for an access right, then the informative text. Legal values can be found on https://developer.apple.com/doc umentation/bundleresources/information_property_list/p rotected_resources and the option can be specified multiple times. Default empty.\nLinux specific controls: --linux-icon=ICON_PATH Add executable icon for onefile binary to use. Can be given only one time. Defaults to Python icon if available.\nBinary Version Information: --company-name=COMPANY_NAME Name of the company to use in version information. Defaults to unused. --product-name=PRODUCT_NAME Name of the product to use in version information. Defaults to base filename of the binary. --file-version=FILE_VERSION File version to use in version information. Must be a sequence of up to 4 numbers, e.g. 1.0 or 1.0.0.0, no more digits are allowed, no strings are allowed. Defaults to unused. --product-version=PRODUCT_VERSION Product version to use in version information. Same rules as for file version. Defaults to unused. --file-description=FILE_DESCRIPTION Description of the file used in version information. Windows only at this time. Defaults to binary filename. --copyright=COPYRIGHT_TEXT Copyright used in version information. Windows/macOS only at this time. Defaults to not present. --trademarks=TRADEMARK_TEXT Trademark used in version information. Windows/macOS only at this time. Defaults to not present.\nPlugin control: --enable-plugins=PLUGIN_NAME Enabled plugins. Must be plug-in names. Use '--plugin- list' to query the full list and exit. Default empty. --disable-plugins=PLUGIN_NAME Disabled plugins. Must be plug-in names. Use '-- plugin-list' to query the full list and exit. Most standard plugins are not a good idea to disable. Default empty. --user-plugin=PATH The file name of user plugin. Can be given multiple times. Default empty. --plugin-list Show list of all available plugins and exit. Defaults to off. --plugin-no-detection Plugins can detect if they might be used, and the you can disable the warning via \u0026quot;--disable-plugin=plugin- that-warned\u0026quot;, or you can use this option to disable the mechanism entirely, which also speeds up compilation slightly of course as this detection code is run in vain once you are certain of which plugins to use. Defaults to off. --module-parameter=MODULE_PARAMETERS Provide a module parameter. You are asked by some packages to provide extra decisions. Format is currently --module-parameter=module.name-option- name=value Default empty. --show-source-changes=SHOW_SOURCE_CHANGES Show source changes to original Python file content before compilation. Mostly intended for developing plugins and Nuitka package configuration. Use e.g. '-- show-source-changes=numpy.**' to see all changes below a given namespace or use '*' to see everything which can get a lot. Default empty.\nCross compilation: --target=TARGET_DESC Cross compilation target. Highly experimental and in development, not supposed to work yet. We are working on '--target=wasi' and nothing else yet.\nPlugin options of 'anti-bloat' (categories: core): --show-anti-bloat-changes Annotate what changes are done by the plugin. --noinclude-setuptools-mode=NOINCLUDE_SETUPTOOLS_MODE What to do if a 'setuptools' or import is encountered. This package can be big with dependencies, and should definitely be avoided. Also handles 'setuptools_scm'. --noinclude-pytest-mode=NOINCLUDE_PYTEST_MODE What to do if a 'pytest' import is encountered. This package can be big with dependencies, and should definitely be avoided. Also handles 'nose' imports. --noinclude-unittest-mode=NOINCLUDE_UNITTEST_MODE What to do if a unittest import is encountered. This package can be big with dependencies, and should definitely be avoided. --noinclude-pydoc-mode=NOINCLUDE_PYDOC_MODE What to do if a pydoc import is encountered. This package use is mark of useless code for deployments and should be avoided. --noinclude-IPython-mode=NOINCLUDE_IPYTHON_MODE What to do if a IPython import is encountered. This package can be big with dependencies, and should definitely be avoided. --noinclude-dask-mode=NOINCLUDE_DASK_MODE What to do if a 'dask' import is encountered. This package can be big with dependencies, and should definitely be avoided. --noinclude-numba-mode=NOINCLUDE_NUMBA_MODE What to do if a 'numba' import is encountered. This package can be big with dependencies, and is currently not working for standalone. This package is big with dependencies, and should definitely be avoided. --noinclude-default-mode=NOINCLUDE_DEFAULT_MODE This actually provides the default \u0026quot;warning\u0026quot; value for above options, and can be used to turn all of these on. --noinclude-custom-mode=CUSTOM_CHOICES What to do if a specific import is encountered. Format is module name, which can and should be a top level package and then one choice, \u0026quot;error\u0026quot;, \u0026quot;warning\u0026quot;, \u0026quot;nofollow\u0026quot;, e.g. PyQt5:error.\nPlugin options of 'playwright' (categories: package-support): --playwright-include-browser=INCLUDE_BROWSERS Playwright browser to include by name. Can be specified multiple times. Use \u0026quot;all\u0026quot; to include all installed browsers or use \u0026quot;none\u0026quot; to exclude all browsers.\nPlugin options of 'spacy' (categories: package-support): --spacy-language-model=INCLUDE_LANGUAGE_MODELS Spacy language models to use. Can be specified multiple times. Use 'all' to include all downloaded models.\n","link":"https://cuile.github.io/posts/python/nuitka/","section":"posts","tags":["nuitka","python"],"title":"Nuitka 参数列表"},{"body":"","link":"https://cuile.github.io/posts/","section":"posts","tags":null,"title":"Posts"},{"body":"","link":"https://cuile.github.io/tags/python/","section":"tags","tags":null,"title":"python"},{"body":"","link":"https://cuile.github.io/tags/","section":"tags","tags":null,"title":"Tags"},{"body":"","link":"https://cuile.github.io/tags/dhcp/","section":"tags","tags":null,"title":"DHCP"},{"body":"","link":"https://cuile.github.io/tags/ipv6/","section":"tags","tags":null,"title":"ipv6"},{"body":"","link":"https://cuile.github.io/tags/proxmoxve/","section":"tags","tags":null,"title":"proxmoxve"},{"body":"PVE 节点的网络配置，在 WebUI 里只能设置为静态地址，想设置DHCP的话需要使用以下方法。\n方法一 1$ cp /etc/network/interfaces /etc/network/interfaces.new 1# /etc/network/interfaces.new 2... 3# IPv4 4iface vmbr0 inet dhcp 5 # address 192.168.1.66/24 6 # gateway 192.168.1.1 7 bridge-ports enp1s0 8 bridge-stp off 9 bridge-fd 0 10# IPv6 11iface vmbr0 inet6 dhcp 12 request_prefix 1 在 PVE 的 WebUI 里 “系统 \u0026gt; 网络” 处，刷新后点击“应用配置”即可生效，等待几分钟后即可获取到IPv6地址。\n方法二 直接修改 /etc/network/interfaces 文件也可以，修改完获取新地址。\n1$ systemctl restart networking 查看新地址 1$ ip addr show vmbr0  PVE设置动态获取ip地址 Proxmox VE 使用IPv6  ","link":"https://cuile.github.io/posts/proxmox/dhcp/","section":"posts","tags":["ipv6","proxmoxve","DHCP"],"title":"ProxmoxVE 配置 DHCP 网络"},{"body":"","link":"https://cuile.github.io/tags/firewall/","section":"tags","tags":null,"title":"Firewall"},{"body":"","link":"https://cuile.github.io/tags/windows/","section":"tags","tags":null,"title":"windows"},{"body":"参考  Windows通过netsh控制安全中心防火墙和网络保护策略 使用命令行管理 Windows 防火墙  ","link":"https://cuile.github.io/posts/windows/windows_firewall/","section":"posts","tags":["windows","firewall"],"title":"Windows防火墙配置"},{"body":"","link":"https://cuile.github.io/tags/centos/","section":"tags","tags":null,"title":"centos"},{"body":"","link":"https://cuile.github.io/tags/linux/","section":"tags","tags":null,"title":"linux"},{"body":"","link":"https://cuile.github.io/tags/netbios/","section":"tags","tags":null,"title":"netbios"},{"body":"","link":"https://cuile.github.io/tags/wins/","section":"tags","tags":null,"title":"wins"},{"body":"基于 CentOS 7\n让Linux系统与Windows系统之间，支持机器名访问，需要Linux安装NetBIOS。 而安装NetBIOS，不一定必须安装Samba，安装过程如下:\n安装库 1# 注意 这里并不会安装完整的samba 2$ yum install samba-winbind 修改配置文件 1; Nano /etc/nsswitch.conf 2; add wins 3hosts: files \u0026lt;wins\u0026gt; dns myhostname 验证安装 1$ ll /etc/\u0026lt;lib|lib64\u0026gt;/libnss_winbind.so 配置生效 1$ ldconfig 配置服务 1$ systemctl start winbind 2$ systemctl status winbind 参考  How to Resolve NetBIOS Names From Linux | Baeldung on Linux  ","link":"https://cuile.github.io/posts/linux/wins_netbios/","section":"posts","tags":["wins","netbios","centos","linux"],"title":"在 CentOS 上部署 NetBIOS"},{"body":"","link":"https://cuile.github.io/tags/cli/","section":"tags","tags":null,"title":"cli"},{"body":"","link":"https://cuile.github.io/tags/tmux/","section":"tags","tags":null,"title":"tmux"},{"body":"使用命令 1# 开启新session 2$ tmux 3# 开启新session并命名 4$ tmux new -s my_session 5# 重命名会话 6$ tmux rename-session -t 0 \u0026lt;new-name\u0026gt; 7 8# 显示所有session 9$ tmux ls 10 11# 使用session编号接入 12$ tmux attach -t 0 13# 使用session名称接入 14$ tmux attach -t \u0026lt;session-name\u0026gt; 15$ tmux a -t name #简写 16 17# 使用session编号切换 18$ tmux switch -t 0 19# 使用session名称切换 20$ tmux switch -t \u0026lt;session-name\u0026gt; 21 22# 使用session编号kill 23$ tmux kill-session -t 0 24# 使用session名称kill 25$ tmux kill-session -t \u0026lt;session-name\u0026gt; session快捷键 需要提醒大家的是，所有的快捷键都是ctrl + b，按完松开，再去按下一个功能键！，不是一下子全按上。\n选择需要跳转的session\n Ctrl + b s\n 重命名当前session\n Ctrl + b $\n 断开当前session\n Ctrl + b d\n 进入tmux翻屏模式\n Ctrl + b [\n进入翻屏模式后PgUp PgDn 实现上下翻页（mac可以用fn + ↑ ↓实现上下翻页）\nq 退出翻屏模式\n window快捷键 在当前session中多加一个window\n Ctrl + b c\n 在一个session中的多个window中作出选择\n Ctrl + b w\n 关闭当前session中的当前window\n Ctrl + b x\n 关闭一个session中所有window\n Ctrl + b !\n 将当前window分成左右两分\n Ctrl + b %\n 将当前window分成上下两分\n Ctrl + b \u0026quot;\n 让光标在不同的window中跳转\n Ctrl + b 方向键\n 调节光标所在窗口的大小\n 按住 Ctrl + b 不放，同时按住方向键\n  $ tmux使用指南：比screen好用n倍！ - 知乎  ","link":"https://cuile.github.io/posts/linux/tmux/","section":"posts","tags":["linux","cli","tmux"],"title":"Tmux 命令"},{"body":"","link":"https://cuile.github.io/tags/centos-7/","section":"tags","tags":null,"title":"centos 7"},{"body":"","link":"https://cuile.github.io/tags/ct-container/","section":"tags","tags":null,"title":"CT Container"},{"body":"","link":"https://cuile.github.io/tags/lxc/","section":"tags","tags":null,"title":"lxc"},{"body":"Proxmox VE 官方提供的 Centos 7 模板是有问题的无法正常使用，现在给出解决方案。\n安装 安装完成后，容器可以启动，但无法关闭、网络无法使用、控制台无法使用，这些都是我们要解决的问题。\n解决方法  ssh登录进入PVE主机  1# 查看 CT 容器列表 2$ pct list 3# 进入 CT 容器 4$ pct enter \u0026lt;VMID\u0026gt; 打开网络  1# 启动网络，从DHCP拿IP地址 2$ ifup eth0 更新 yum 库  1$ curl -o /etc/yum.repos.d/jsynacek-systemd-backports-for-centos-7-epel-7.repo https://copr.fedorainfracloud.org/coprs/jsynacek/systemd-backports-for-centos-7/repo/epel-7/jsynacek-systemd-backports-for-centos-7-epel-7.repo 2$ yum update 3# 安装 sshd 4$ yum install -y openssh-server 5$ systemctl start sshd.service 6$ systemctl enable sshd.service 退出 CT 容器  1$ exit 2$ pct stop \u0026lt;VMID\u0026gt; 重新启动 CT 容器，一切正常    [SOLVED] - PVE 7 won't start CentOS 7 container | Proxmox Support Forum  ","link":"https://cuile.github.io/posts/proxmox/setup_ct_centos-7/","section":"posts","tags":["proxmoxve","CT Container","lxc","centos 7","linux"],"title":"配置 CentOS 7 的 CT 容器"},{"body":"","link":"https://cuile.github.io/tags/ftp/","section":"tags","tags":null,"title":"ftp"},{"body":"","link":"https://cuile.github.io/tags/ncftp/","section":"tags","tags":null,"title":"ncftp"},{"body":"NcFTP 是 Linux 上常用的 FTP客户端工具，非常好用，这里记录它的常见用法。\nncftp FTP浏览工具\n1$ ncftp 2# 一定注意参数顺序 3ncftp \u0026gt; open -u \u0026lt;username\u0026gt; -p \u0026lt;password\u0026gt; \u0026lt;remote-host\u0026gt; 4# 使用被动模式传输 5ncftp \u0026gt; set passive yes 6ncftp \u0026gt; put \u0026lt;local-files\u0026gt; ncftpput FTP上传命令行工具\n1# 一定注意参数顺序 2# 使用被动模式传输 3$ ncftpput -u \u0026lt;username\u0026gt; -p \u0026lt;password\u0026gt; -F \u0026lt;remote-host\u0026gt; \u0026lt;remote-path\u0026gt; \u0026lt;local-files\u0026gt; 4# or 5$ ncftpput -f ftp.cfg -F \u0026lt;remote-path\u0026gt; \u0026lt;local-files\u0026gt; 1; ftp.cfg 2host ftp.server.com 3user myusername 4pass mypasswd  NcFTP Client  ","link":"https://cuile.github.io/posts/linux/ncftp/","section":"posts","tags":["linux","ftp","ncftp"],"title":"Ncftp 使用手册"},{"body":"安装 1$ yum install https://download.postgresql.org/pub/repos/yum/10/redhat/rhel-7-x86_64/pgdg-centos10-10-2.noarch.rpm 2 3# 安装服务端包 4$ yum install postgresql10-server postgresql10 配置 1# 初始化数据库，设置自启动 2$ /usr/pgsql-10/bin/postgresql-10-setup initdb 3$ systemctl enable postgresql-10 4$ systemctl start postgresql-10 5 6# 设置防火墙规则 7$ iptables -A INPUT -p tcp -m tcp --dport 5432 -j ACCEPT #开放Postgresql 5432端口 8 9$ service iptables save # 保存防火墙规则 配置远程访问 1# 切换至用户 2$ su - postgres 1; ./10/data/postgres.conf 2- #listen_address 3+ listen_address 4 5; ./10/data/pg_hba.conf 6; 允许所有IPv4地址 7+ host all all 0.0.0.0/0 scram-sha-256 登录数据库 1$ psql -U postgres 1-- 设置数据运行参数 2ALTERSYSTEMSETlisten_addresses=\u0026#39;*\u0026#39;;3ALTERSYSTEMSETport=5432;4ALTERSYSTEMSETpassword_encryption=\u0026#39;scram-sha-256\u0026#39;;56-- 修改默认用户密码 7ALTERUSERpostgreswithencryptedpassword\u0026#39;你的密码\u0026#39;;89-- 退出数据库 10\\q1112-- 退出用户 13exit重启服务 1systemctl restart postgresql-10 ","link":"https://cuile.github.io/posts/database/postgresql_for_centos/","section":"posts","tags":["postgresql","centos"],"title":"Centos7 安装 Postgresql"},{"body":"","link":"https://cuile.github.io/tags/postgresql/","section":"tags","tags":null,"title":"postgresql"},{"body":"","link":"https://cuile.github.io/tags/docker/","section":"tags","tags":null,"title":"docker"},{"body":"","link":"https://cuile.github.io/tags/laravel/","section":"tags","tags":null,"title":"laravel"},{"body":"","link":"https://cuile.github.io/tags/php/","section":"tags","tags":null,"title":"php"},{"body":"1、安装Composer镜像 1$ docker pull composer:1.9.0 2、安装laravel 1# 启动Composer镜像 2$ docker run --rm \\ 3 -it \\ 4 -v ${PWD}:/app \\ 5 composer:1.9.0 /bin/bash 6 7# 创建composer.json文件 8$ composer init -n 9 10# 使用国内 Packagist镜像 11$ composer config repo.packagist composer https://mirrors.aliyun.com/composer/ 12 13# 添加laravel包 14$ composer require -vvv \\ 15 --prefer-dist \\ 16 --prefer-stable \\ 17 laravel/installer 18 19# 看到以下输出，说明添加成功。 20Writing lock file 21Generating autoload files 22 23# 在当前目录覆盖安装laravel 24$ ./vendor/bin/laravel new 25 26# 看到以下输出，说明安装成功。 27Package manifest generated successfully. 28Application ready! Build something amazing. 29 30# 退出Composer镜像 31$ exit 将当前目录下的storage目录权限，设为757\n1$ chmod -R 757 storage/ 3、安装laravel-admin扩展包 1# 进入laravel安装目录 2 3# 启动Composer镜像 4$ docker run --rm \\ 5 -it \\ 6 -v ${PWD}:/app \\ 7 composer:1.9.0 /bin/bash 8 9# 使用国内 Packagist镜像 10$ composer config repo.packagist composer https://mirrors.aliyun.com/composer/ 11 12# 添加扩展包 13$ composer require -vvv \\ 14 --prefer-dist \\ 15 --prefer-stable \\ 16 --sort-packages \\ 17 encore/laravel-admin 18 19# 看到以下输出，说明安装成功。 20Package manifest generated successfully. 21 22# 退出Composer镜像 23$ exit ","link":"https://cuile.github.io/posts/laravel/install_for_centos/","section":"posts","tags":["php","laravel","docker","centos"],"title":"在CentOS中安装 Laravel 框架"},{"body":"因为阿里的弹性WEB托管，使用php 5.5.30版本，所以只能安装Laravel 5.2版本。\n本教程使用WSL + docker环境安装，除完整的laravel环境外，不会在本地留下任何痕迹。\n1、本地安装Composer镜像 1$ docker pull composer:1.9.0 2、配置Composer镜像 1# 启动Composer镜像 2$ docker run --rm \\ 3 -it \\ 4 -v ${PWD}:/app \\ 5 composer:1.9.0 /bin/bash 6 7# 使用国内 Packagist镜像 8$ composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/ 9 10$ composer create-project -vvv \\ 11 --prefer-dist \\ 12 --no-scripts \\ 13 --keep-vcs \\ 14 laravel/laravel:5.2.31 \\ 15 YSME 16 17# 看到以下输出，说明安装完成。 18 19Writing lock file 20Generating autoload files 21 22# 退出Composer镜像 23$ exit 24 4、安装到虚拟主机 copy YSME目录下的全部内容，到虚拟主机的目录下即可。\n5、测试 访问 http://你的域名/YSME/public/ 如果显示 Laravel 5 字样，说明安装成功！\n","link":"https://cuile.github.io/posts/laravel/install_for_virtualhost/","section":"posts","tags":["php","laravel","docker"],"title":"虚拟主机安装 Laravel 框架"},{"body":"","link":"https://cuile.github.io/tags/proxy/","section":"tags","tags":null,"title":"proxy"},{"body":"","link":"https://cuile.github.io/tags/snap/","section":"tags","tags":null,"title":"Snap"},{"body":"使用snap 的过程中经常遇到无法链接的情况。\n1$ sudo snap install code --classic 2error: unable to contact snap store 这是因为SnapCraft将软件包放在自己的海外服务器上，因为众所周知的原因，访问速度异常缓慢，不加代理的情况下，基本无法使用。\nLinux上的一些应用程序会通过读取环境变量 http_proxy 和 https_proxy 来应用代理服务器设置，典型的有Chrome。\n然而，Snap比较特别，它不会从环境变量中上述环境变量中读取代理服务器设置，因此直接使用\n1export http_proxy=[代理服务器地址] 2export https_proxy=[代理服务器地址] 是不起作用的。\n网上有一些修改配置文件的方法，个人觉得很麻烦，也容易出错，所以选了最简单可靠的命令行模式。\n1. 设置命令 1$ sudo snap set system proxy.https=\u0026#34;http://代理服务器地址:代理端口\u0026#34; 2$ sudo snap set system proxy.http=\u0026#34;http://代理服务器地址:代理端口\u0026#34; 参考文档  ubuntu snap install 代理设置 为Snapd设置代理  ","link":"https://cuile.github.io/posts/snap/snap_proxy/","section":"posts","tags":["snap","proxy"],"title":"snap 设置代理"},{"body":"","link":"https://cuile.github.io/tags/rime/","section":"tags","tags":null,"title":"Rime"},{"body":"1.安装五笔  输入法设定-获取更多输入方案-在打开的命令行窗口 输入 \u0026quot;wubi\u0026quot; 回车  2.配置P站风格配色主题  用户文件夹-weasel.custom.yaml 在 \u0026quot;patch:\u0026quot; 项目下加入：  1# P站风格配色主题2\u0026#34;style/color_scheme\u0026#34;: \u0026#34;Pornhub\u0026#34;3\u0026#34;preset_color_schemes/Pornhub\u0026#34;:4author:\u0026#34;周庸生\u0026#34;5back_color:0x0000006border_color:0x0000007candidate_text_color:0xffffff8comment_text_color:0xffffff9hilited_back_color:0x009bff10hilited_candidate_back_color:0x009bff11hilited_candidate_text_color:0x00000012hilited_comment_text_color:0x00000013hilited_lable_color:0x00000014hilited_text_color:0x00000015label_color:0xffffff16name:Pornhub17text_color:0xffffff 注意格式缩进  参考文档  Rime输入法安装与配置 Rime默认英文状态 致第一次安装RIME的你  ","link":"https://cuile.github.io/posts/rime_setup/","section":"posts","tags":["Rime"],"title":"Rime输入法设置"},{"body":"Windows 10 自带输入法，没有候选字栏 1\u0026gt; DISM /Online /Add-Capability /CapabilityName:Windows.Client.ShellComponents~~~~0.0.1.0  我用的win10自带输入法，最近不知道为什么没有候选字栏，只能用空格选定输入，怎么解决？  ","link":"https://cuile.github.io/posts/windows/windows_setup/","section":"posts","tags":["windows","系统配置"],"title":"Windows系统配置"},{"body":"","link":"https://cuile.github.io/tags/%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE/","section":"tags","tags":null,"title":"系统配置"},{"body":"","link":"https://cuile.github.io/tags/%E5%8A%A8%E6%BC%AB/","section":"tags","tags":null,"title":"动漫"},{"body":"","link":"https://cuile.github.io/tags/%E6%95%85%E4%BA%8B/","section":"tags","tags":null,"title":"故事"},{"body":"","link":"https://cuile.github.io/tags/%E7%81%8C%E7%AF%AE%E9%AB%98%E6%89%8B/","section":"tags","tags":null,"title":"灌篮高手"},{"body":"亚青赛 (一)选拔队 神宗一郎轻轻的拍着清田，而清田已经流下了伤心的泪水。\n是的，海南在其全国大赛的决赛上，输给了从未输过的湘北，并且还是输的如此之惨。\n不过海南的队员们已经很努力，清田更是其中几近拼命的人，但是作为海南的队长，作为一个得分手，神却因为半决赛的伤几乎没有上场，在场下目睹自己球队的溃败，这样的事情简直是一种折磨。一切都已经过去，海南只能眼睁睁的看着湘北成为全国的霸主。\n获得冠军的湘北，并没有表现出那种击败山王时的兴奋。似乎他们已经习惯了胜利，或者他们已经有了傲视群雄的霸气。而这种霸气在湘北的五名主力队员中体现出来了。\n流川面对清田的反击依然保持着王牌的本色，藤真的三分成了湘北的独门武器，宫城的组织也变得应对自如，回归的木石则成为全场得分最多的球员，樱木的防守固若金汤。\n就这样全国大赛以湘北的胜利结束了，但故事还在继续...\n本次大赛还有一个重要的任务，那就是由日本70年代的篮球传奇人物，北川光烈在本次大赛的八强队伍中，为3个月后在日本进行的亚洲青年锦标赛挑选队员。而北川光烈则是日本青年队的教练。\n北川也在一个20人的名单中经过一个星期的试训挑选出来了11名队员。\n他们是：\n中锋：5号森重宽(204cm，名朋工业) 4号木石瞳(199cm，湘北) 6号神宗一郎(191cm，海南)\n大前锋：8号土屋淳(192cm，大荣) 10号樱木花道(190.5cm，湘北) 15号坂野已(192cm，爱和)\n小前锋：11号流川枫(189cm，湘北) 18号泽北荣治(188.5cm，山王) 9号清田信长(181cm，海南)\n后卫：14号深津一成(183cm，山王) 13号大久保龙人(185cm，名朋工业)\n泽北对北川教练：\u0026quot;教练，我有问题。\u0026quot;\n\u0026quot;恩？说。\u0026quot;\n泽北：\u0026quot;我打球以来除了在山王的第一年穿过10以上的号码之外，我从来都只穿单数号码。\u0026quot;\n北川：\u0026quot;噢。不过单数号码已经没有了。\u0026quot;\n泽北：\u0026quot;不是还有吗？还有一个7号。\u0026quot;\n北川：\u0026quot;呵呵，对不起那个号码已经被预留了。\u0026quot;\n泽北(生气)：\u0026quot;什么！！\u0026quot;\n北川：\u0026quot;全体注意！下面我给大家介绍一下我们的队长，来自神奈川的仙道章！\u0026quot;\n门突然打开，仙道走了进来。\u0026quot;大家好，我是神奈川陵南的仙道章。请多关照。\u0026quot;\n流川\u0026amp;樱木\u0026amp;木石\u0026amp;神(惊讶！)\n泽北：\u0026quot;哼，我就猜的是这个家伙！\u0026quot;\n流川：\u0026quot;哼，这次总算没有迟到。\u0026quot;\n7号仙道章(192cm，陵南) 小前锋 日本青年队队长，唯一没有参加过全国大赛的队员。\n而海南的神宗一郎则成为了副队长。 (注：湘北的宫城，藤真，山王的一本道海斗，等成为了候补补充队员。)\n(二)集训开始 由北川带领下的日本青年队转到琦玉县开始了集训。\n北川把队员分组进行针对性训练。\n森重宽，木石瞳，樱木花道，坂野己，土屋淳着重进行内线的攻防训练。\n大久保和深津作为控球后卫进行组织和传接训练。\n流川，泽北，仙道，清田主要进行进攻训练。\n另外仙道，大久保和神宗一郎加练远投。\n北川考虑到今后对手的不同，而有意塑造森重宽和木石瞳的不同风格。让森重宽再内线更加充满冲击力，而木石瞳利用他柔韧的身体以及中投好的特点则成为另一种风格的中锋。这样日本队在对阵对手的时候下就会有不同的选择。神虽然是作为中锋注册，但神的得分还是着重在外线，这样阿神扮演了日本队的杀手的角色。\n樱木的爆发力和不错的体力再次为北川看重，加上和仙道的特训以及这次的集训，使樱木在篮球方面的意识得到了很大的提高，除去经验上的不足之外，樱木已经成为日本队极其重要的队员。北川正在努力把樱木培养成日本一流的防守队员。\n但是问题出现在小前锋和后卫的选择上。\n无论是泽北还是流川和仙道都具有首发的资格和实力，但是北川在训练中一直把仙道放入替补阵容中。\n流川和泽北的竞争日趋激烈，双方实力接近。但是由于山王在全国大赛的失利使得泽北心态上发生了改变，一直想在日本队中重新确立自己是第一人的想法，使得泽北得分虽多，但是过分的单打。这样就违背了北川把日本队变成一个团结合作的球队的思想。而流川自从和樱木合作战胜山王之后，同样心态有了变化，反而是增加了和他人的配合，并且在球场上越发的自如。虽然泽北依旧是第一前锋但是渐渐的北川已经有了让流川取代他的想法。\n后卫的选择也出现了问题。深津的控球是最好的，同时防守也不错。但是大久保虽然不是一个真正意义上的控球后卫，但是他的意识和突破还有比深津更强的得分能力和传球的感觉。让北川很难在两人中选择谁是主力控球后卫。\n为此北川决定把队伍分成2组进行一场真正的比赛，从而考察队员，并确立自己的主力阵容。\nA队： 5号森重，6号神，8号土屋，9号清田，14号深津，18号泽北。\nB队： 4号木石，7号仙道，10号樱木，11号流川，13号大久保，15号坂野。\n(三)北川的决定 \u0026quot;唰\u0026quot;是神的三分，球虽然进了，但是已经无法挽回A队落败的结果。\n在30分钟的内部比赛中，由队长仙道带领的B队65：52击败了副队长神带领的A队。\n北川对助手说：\u0026quot;把2队的技术统计拿来。\u0026quot;\n   A队 姓名 得分 三分球 篮板 助攻 抢断      泽北 20 1/3 4 1 2    森重 13 0 8 1 0    神 11 3/4 2 4 0    土屋 4 0/2 5 3 1    深津 2 0/2 5 3 0    清田 2 0 0 1 0       B队 姓名 得分 三分球 篮板 助攻 抢断      流川 16 1/1 4 4 1    木石 15 0/6 3 0 5    仙道 13 1/2 4 8 2    樱木 8 0 8 2 1    大久保 10 1/1 3 8 0    坂野 3 0 3 1 0    助手：\u0026quot;看来A队除了在三分球上占有优势外，别的似乎是B队占优。不过泽北依然拿了全场最高得分，看来他还是日本队中最具有进攻力的球员。\u0026quot;\n北川：\u0026quot;泽北真是一个危险的棋子。\u0026quot;\n助手：\u0026quot;什么？教练的意思....\u0026quot;\n北川：\u0026quot;这场比赛其实我是认为A队将获得胜利的。深津和泽北同属山王，所以他很可能习惯性的把球交给泽北，泽北拿球的机会明显多于A队其他队员，这样就导致了一个结果，泽北的得分机会增加，其他队员的机会明显下降。其实不论输赢A队的得分应该不仅仅只有52分，泽北的过多的单打让许多更好的机会丧失了。\u0026quot;\n助手：\u0026quot;是啊，在助攻方面B队具有绝对优势，而且仙道和大久保竟然都拿到了8次助攻。\u0026quot;\n北川：\u0026quot;这就是我要的，一个富于变化，整体合作的球队，而不是一两个人的球队。\u0026quot;\n助手：\u0026quot;流川拿了16分，是B队中得分最高的球员，他还有4次助攻。看来流川的进步还是很快的。\u0026quot;\n北川：\u0026quot;我们的练习赛对手都找好了吗？\u0026quot;\n助手：\u0026quot;都已经找好了，8支大学球队已经联系好了，其中还有4支是今年大学联赛的8强球队。他们是琦玉县的-----日本工业大学，骏河台大学。东京都的----东京大学，东京都立大学。千叶县的----帝京平成大学，神奈川县的---湘南工科大学，以及爱知县的---爱知工业大学。\u0026quot;\n北川：\u0026quot;我们的第一个对手是谁？\u0026quot;\n助手：\u0026quot;是去年大学联赛8强的湘南工科大学，实力很强。\u0026quot;\n北川：\u0026quot;哦？是来自神奈川的吗？我要通过这8场比赛来确定谁将成为日本队的5名主力球员。\u0026quot;\n(四)神奈川的对决----挑战三井寿 北川：\u0026quot;大家听好了，明天开始我们将开始集训的最后阶段，也就是检验你们的时候来到了，我们将和大学球队进行8场练习赛。这八场比赛的发挥将决定你们在队中的位置，大家努力发挥吧。\u0026quot;\n助手：\u0026quot;我们第一个对手是今年大学联赛的8强球队----湘南工科大学\u0026quot;\n神：\u0026quot;...\u0026quot;\n仙道：\u0026quot;是来自神奈川县的。\u0026quot;\n樱木：\u0026quot;咦，仙道你知道？\u0026quot; 。\n流川：\u0026quot;湘南工科大学，神奈川县赛区的冠军球队，连续8年打进大学联赛8强。\u0026quot;\n土屋：\u0026quot;？？？第一场就打这么强的球队。\u0026quot;\n泽北：\u0026quot;哼，没什么对方只是年龄大一些而已，我高二的时候就和许多有名的大学篮球高手较量过了我基本全赢了。\u0026quot;\n众人：\u0026quot;...\u0026quot;\n流川：\u0026quot;明天也许会遇到那个人...\u0026quot;\n......\n神：\u0026quot;流川。\u0026quot;\n流川：\u0026quot;神...？\u0026quot;\n神：\u0026quot;湘北的射手---三井寿，是不是在湘南工科。\u0026quot;\n流川：\u0026quot;...怎么想和他在进行一次较量吗？\u0026quot;\n神(回忆)\n在全国大赛的最后决赛后。\n\u0026quot;不要灰心，神你做的很好。\u0026quot;\n\u0026quot;阿牧！高砂！\u0026quot;\n\u0026quot;阿牧，我没有想到海南会输的这么惨，算是完败吧。\u0026quot;\n\u0026quot;我知道你的心情，上不了场的心情比输球的心情更难受。只能看到对手得分，自己却无能为力！\u0026quot;\n\u0026quot;牧...，对了阿牧你们大学联赛不是也在进行着吗，怎么有时间过来呢。\u0026quot;\n\u0026quot;其实原来海南和湘北的球员都来了。我们的大学联赛的比赛已经结束了。我的，赤木的都结束了？只有一个人的还没有结束。\u0026quot;\n\u0026quot;？\u0026quot;\n\u0026quot;神，我也是受伤连上场的机会都没有，眼看着自己的球队输球。赤木在县大赛中就输了，只有三井所在的湘南工科现在已经进入了全国大赛的8强。这一年，三井这小子比我和赤木都风光啊。\u0026quot;\n\u0026quot;湘南工科？三井寿？\u0026quot;\n\u0026quot;怎么，神？\u0026quot;\n\u0026quot;没什么，我接到了湘南工科的邀请希望我高中毕业后能到他们学校打球！\u0026quot;\n第二天...\n北川：\u0026quot;结果并不重要，重要的是把我们训练的成果体现出来。\u0026quot;\n助手：\u0026quot;对方队中有今年神奈川县大赛的MVP---靖远优作，以及最佳新人三井寿。综合实力是神奈川最强的！\u0026quot;\n樱木\u0026amp;清田：\u0026quot;什么！三井寿！\u0026quot;\n神：\u0026quot;三井...\u0026quot;\n流川：\u0026quot;他，果然来了。那个熟悉的身影...\u0026quot;\n(五)挫折 比赛开始了，日本青年队的五名首发：\n 18号泽北 5号森重宽 8号土屋淳 13号大久保 14号深津  而湘南工科的最佳新人三井寿和队长铃木保都没有作为首发。但是在靖远优作的带领下，依靠身体上的优势，湘南工科一直压制着日本青年队。\n泽北由于个人能力突出被湘南工科重点盯防，好在大久保和森重的名朋组合让青年队的比分没有被拉开。\n由于对方的强力攻击，让森重和土屋耗费了过多的体力。在上半场比赛还有不少时间的时候，木石瞳和樱木被替换上场。有了樱木的防守，湘南工科的内线进攻变得不如原来那么顺利。\n青年队得到了比分缩小的机会，但是泽北为了显示王牌的实力，大都选择个人强攻。\n湘南工科换上了以防守见长的队长铃木保，泽北在严密的防守下依然我行我素，终于北川作出了让流川上场换下泽北的决定。这激怒了已经得了不少分的泽北。\n半场比赛结束。53：36，湘南工科领先17分。\n下半场，湘南工科把主力队员换下，以替补阵容比赛。\n樱木，流川被激怒，在场下的仙道主动请求上场，这样由仙道，流川，樱木，木石四人组成的神奈川县高中球员加上大久保，向神奈川最强的大学球队湘南工科发起挑战。\n仙道的加入极大的带动了场上的队员的情绪，而这5人的配合完全打败了湘南工科的替补阵容，仅仅不到10分钟双方的比分差距就不到7分。这时的青年队让湘南工科再次重新重视起来，连忙换上了靖远和铃木和其他主力，并且派上了最佳新人三井寿。这样三井在离开高中后，第一次以对手的身份面对流川和樱木等人。\n这样双方进行了一场得分大战，大久保和仙道的组合让青年队的其他队员发挥出了最大的潜力和能量，尤其仙道作为队长体现出了一种和原先截然不同的霸气。\n后来木石瞳被森重宽替下，神替换流川。三井和神宗一郎的神奈川最佳射手争夺一直延续到这场比赛。\n由于三井在大学锻炼了自己的体能，这样唯一一个薄弱环节也被三井克服，当年初中的MVP的风采再次凸现，而阿神不仅从牧哪里学到了强行突破并且获得了高中的MVP。2个MVP之间的争斗成为场上最精彩的镜头。而湘南工科的教练对于这个神奈川的MVP---神宗一郎欣赏有佳。\n他认为在拥有了神和三井的湘南工科一定会在今后的全国大赛中取得更好的成绩。最后樱木的灌篮结束了这场比赛，虽然青年队在下半场发挥出色，但是由于上半场的差距太大，最终导致105：111落败。\n赛后，三井和曾经的队友们和对手们告别，而湘南工科正式向神宗一郎发出了邀请，神将在高中毕业后顺利进入日本篮球名校---湘南工科大学，并和曾经的对手三井并肩作战。\n北川光烈认为这场比赛虽然输了，只是一个应该有的挫折而已，但是他却从这场比赛中得到了许多宝贵的东西。\n而泽北和北川的矛盾也从这一刻开始明朗化了。\n(六)三连败 在输给湘南工科的三天后，日本青年队由琦玉转战到东京。在那里他们将迎战东京大学和东京都立大学。\n泽北由于在上一场比赛中途被换下，并且在此后一直没有上场，从而泽北对于北川教练开始极为不满。泽北带有抵触情绪，而北川也最终决定让流川代替泽北的先发位置。\n到达东京后，北川重点考察了流川，大久保。他决定让这两个人代替泽北和深津首发。大前锋依然是土屋，中锋看对手的情况决定木石瞳或者森重宽，而仙道的能力勿庸置疑，但北川考虑到假如仙道不在场上的时候，日本队将是一个什么样的情况，所以决定继续将仙道放入替补席。而让神或者樱木上场。\n在对东京大学的比赛中，北川的先发阵容引起了日本国内很大的怀疑声和不满声，尤其是启用流川代替泽北。北川面对的是所有日本球迷的反对。随后在与东大的比赛中青年队以85：98告负，日本青年队表现的很顽强，但流川并没有得到较高的分数，这让日本国内再次激起了对北川让流川代替泽北的决定的不满。\n面对国内的压力北川不为所动依旧鼓励流川，并坚持在第三场对东京都立大学的比赛中继续让流川首发。\n在与东京都立大学的比赛中，大久保的组织极为出色，流川也恢复了状态重新有了自信，特别是樱木表现出色他的防守让大学生都难以逾越，这也让日本媒体重新认识到了北川独特的用人。但是青年队还是以一分之差惜败。\n虽然对于日本青年队的表现日本国内还算满意，尤其是湘南工科和东京大学都是大学联赛中的8强队伍实力很强。但对于作为东道主的日本，这次亚青赛必须有一个满意的结果。而三连败也使北川面临着巨大的压力。\n与此同时，日本篮协也定下了日本青年队至少打入决赛的目标。\n北川光烈曾经为日本在70十年代赢得了最后一个亚洲冠军，而之后不论是什么年龄段的亚洲冠军就再不曾为日本夺得。由于中国队的强大实力，已经连续蝉联了7届亚青赛冠军，而韩国的迅速崛起也超越了日本，成为亚洲唯一一个能够挑战中国的球队。\n日本希望这次在有获得过亚洲冠军经验的北川光烈的带领下，在日本本土举行的亚青赛上有所突破。而北川的目标就是要和亚洲最强的中国交战，不论输赢他也要找出两国之间的差距。争取在今后能够使日本篮球有一个新的起点。\n(七)主力确定 85：80，日本青年队战胜了从千叶赶到琦玉的帝京平成大学,取得了第一场胜利。\n樱木的潜力正一点一点的浮出水面，不仅得到了北川的信赖，包括其他队员也发现樱木的实力越来越强，良好的体力和爆发力让他成为日本青年队一颗重要的棋子。随后日本青年队取得了5连胜。\n日本队的配合日趋完善，尤其是大久保和仙道的组合已经成为日本进攻时的发动机。而森重和木石在中锋位置上各具风格他们将根据场上的情况上场，流川枫得到了北川的肯定挤掉了泽北成为主力，樱木，土屋，神也成为主力选手。这样日本队的基本阵容就确定了。而亚青赛也开幕在即。\n日本，韩国，中国，菲律宾分别作为ABCD4个组的种子队。\n日本队和新加坡，科威特，泰国同分到一组。\n以仙道为首的日本队，正式开始了亚青赛之旅。\n第一场 日本vs泰国\n流川、森重、仙道、大久保、神 首发出场。\n由于经过了2个月的集训，以及和比同年龄大的日本大学联赛队的对抗，加上身体上的优势。\n在上半场日本队就已55：30领先，北川并没有派上樱木上场，而是让坂野替补土屋，同时流川被清田换下。\n最后日本以120：77大比分战胜泰国，森重和木石瞳2个中锋的得分为全队最高。\n随后日本青年队又以104：80战胜新加坡队，流川超过木石瞳得分为全队最高，而大久保则成为赛会开始以来助攻最多的球员，仙道并没有发挥出真正的实力而是有所保留。樱木依然没有被北川派上场。北川认为面对弱队时樱木的能力并不能体现出来，反而会将樱木的特点提前暴露出来，这样在碰上中国或者韩国的时候樱木就会被对手了解。\n第三场日本将面对同样已经取得2胜的科威特队。\n(八)残缺之翅 A组的比赛进入尾声，由于日本和科威特均是2胜，所以这两支队伍已经出现，但是由于A组第二名的球队，很可能在四分之一决赛中遭遇C组强大的中国队。为了让自己能取得更好的成绩，日本必须尽可能避开中国队，而战胜科威特队就成为唯一可以做的。\n北川对科威特队的录像进行分析，认为科威特球员的技术一般，但身体素质很好，并且逼抢凶狠。而对付这样的球队，最关键的就是中锋和射手的表现。不管对方犯不犯规，森重一定都要到内线强打，而外线在对方的干扰下一定要保持比较高的命中率。而北川告诉樱木很有可能这场比赛会将他派上场。\n科威特的教练从日本队前2场比赛的录像看出，日本队的大久保是组织的核心。他给队员下达了对大久保的必杀令，不论采取什么样的手段都要压制主大久保的发挥。\n比赛开始了，在整体技术占优的情况下，日本队在比赛初期比分领先。\n森重和对方中锋的较量中有一定的优势。土屋，流川，仙道的技术优势明显。但是大久保被对方从一开始就变成全场紧逼，传球受到影响。当比赛进入上半场中段的时候日本领先10分，科威特调整战术开始采用非常规手段。\n第一个受到影响的是森重宽，对方开始不停的使用低劣的小动作和犯规，在一次进攻中对方的中锋再次用小动作犯规而瞒过了裁判的眼睛，这样一直很少说话的森重宽被激怒，他愤怒的向裁判大吼，而裁判竟判了森重一次技术犯规。不得已森重被木石瞳替换下场。\n由于强壮的森重被换下场，木石瞳又由于肺病有些发作，再加上对方不停的用身体冲撞木石，并且不惜频频犯规，以此来阻止日本队员的进攻，并且用以激怒日本球员。\n上半场比赛结束日本队领先5分。但是森重宽领到技术犯规不能轻易上场，木石被对方用肘部击中胸部加重了肺病，也不能再次上场。大久保被对方全场紧逼体力上的消耗很大。流川和仙道成为日本队中主要的得分手。土屋和对方的挣强中也有4次犯规。\n下半场，樱木代替木石瞳，神代替土屋上场。深津代替上半场体力透支的大久保。泽北也很着急，但是他的自尊心使他不向北川教练道歉并且很消极，所以依然没有上场的机会。\n对方的中锋故伎重施，再次以隐蔽的小动作来对樱木犯规，樱木几次想爆发，均被仙道拦住。\n仙道：\u0026quot;樱木不能上他们的当，一定要稳住。\u0026quot;\n好在有神，神上来的2个三分远投再次把比分拉开到了7分，虽然日本队的内线并没有像上半场那样得分，但是樱木一个人扛住了对方多人的围攻，抢到多次篮板并交给其他队员。\n而科威特的队员身上都背着很多次的犯规，他们利用替补上来对日本队有威胁的球员进行杀伤试的犯规。阿神就成为第三个目标，在阿神接球准备射篮的瞬间，科威特的球员故意在防守的时候摔在神的身上。这次犯规撞到了日本队的最佳射手神的右手的旧伤。\n神不得已被扶下场。森重宽重新上场。神的受伤使全场观众愤怒。刚刚好转的形势由于这次神的受伤再次发生了巨变。\n日本队受到了影响，而科威特队则把比分逐渐拉近。并且反超5分。\n仙道也有些急了叫队员们稳住，不要慌。\n深津内心的慌乱，传球总是被对方看穿。没办法大久保再次上场。憋着一股气的大久保开始发威，一向以传球厉害的大久保，面对对方的围抢竟然频频选择个人突破得分。\n大久保的进攻力让科威特队员有些恐慌，而接下来发生的事，竟成为全场比赛的转折。\n(九)王者无用 日本vs科威特的下半场。\n由于科威特的恶意犯规，木石瞳，神宗一郎先后受伤下场。\n大久保再次上场成为日本队进攻的主要攻击点。\n有些愤怒的他上场之后突破三次并三次加罚成功，一下子得到9分。\n科威特队叫了暂停。\n仙道(思)：\u0026quot;没想到他的得分能力有如此之强。为什么以前没有展现出来呢？\u0026quot;\n流川枫(思)：\u0026quot;那次单挑他真的尽全力了？？\u0026quot;\n好的 现在日本队反超科威特了。全场观众开始高涨起来了。\n大久保：\u0026quot;喂。把这些乌合之众干掉，我们的目标可不是他们。\u0026quot;\n樱木：\u0026quot;我早就想做一些什么了。\u0026quot;\n科威特这边...\n教练：\u0026quot;对方的13号是我们赛前重点研究的对象，但是他现在一下子得到这么多分，这样会使日本队的斗志激发，必须遏制他们这种趋势。\u0026quot;\n\u0026quot;教练，交给我们吧，虽然已经出现了，但是我们也绝对不想输球，况且输的话我们将很有可能会遇到强大的中国队。\u0026quot;\n\u0026quot;是啊，所有的队的教练都在传言，甚至包括韩国队，若想让球队走的远一些，那就离中国队远一些。\u0026quot;\n......\n\u0026quot;嘭，嘭\u0026quot;大久保带着球，寻找着机会。\n现在日本队已经领先8分，大久保(思)：\u0026quot;再进一个球他们就会被完全击垮的\u0026quot;\n突破了，大久保变向突破了，急停跳投。\n\u0026quot;不能让他进！\u0026quot;科威特的球员已经跳起封堵了。球并没有往篮筐的方向射去，是传球，流川！\n在大久保跳起后落下的瞬间，樱木看到了科威特刚才防守大久保的球员，将自己的脚挪到了大久保落下的地方。\n嘭~~~\n流川接到大久保的传球，并将球射进，但这一声并不是球进篮筐的声音，而是大久保倒地的声音。\n\u0026quot;啊~~~~啊！！\u0026quot;大久保痛苦的倒在地上。\n怒火在樱木的心中燃烧。别人还没有弄清楚发生了什么。\n但是一切都被樱木、还有一个人看到了。\n科威特的球员示意大久保是自己不小心踩到了他的脚。\n樱木(愤怒)：\u0026quot;混蛋。刚才明明是你故意的。你个混蛋。\u0026quot;\n裁判也有些犹豫，但是森重宽没有任何犹豫，他和樱木一样看到了刚才所发生的一切。沉默少言的森重宽，没有多说一句话径直走到科威特队员那，推倒了科威特的那个队员。在所有人目瞪口呆的时候，裁判向森重宽出示了第二次技术犯规，这样日本队的主力中锋被罚下场。\n大久保也被担架抬出。\n仙道对大久保：\u0026quot;放心，你的还有森重的那份就交给我们吧。\u0026quot;\n大久保：\u0026quot;队长...\u0026quot;\n樱木：\u0026quot;若不是森重出手快，本来应该是我干掉他的！\u0026quot;\n流川：\u0026quot;记得，我还要再和你进行一次单挑。\u0026quot;\n大久保：\u0026quot;大家...\u0026quot;\n北川：\u0026quot;清田，坂野你们上场。\u0026quot;\n泽北回忆\n\u0026quot;爱和县最好的球员，原来是一个只会传球的家伙。\u0026quot;\n\u0026quot;不知天高地厚的人，篮球本来就是一个团体运动。\u0026quot;\n\u0026quot;哦，这样把这里的几个人随便分成2队，我们各自带领一队，看看是谁赢。\u0026quot;\n......\n\u0026quot;呼呼\u0026quot;\n\u0026quot;传球高手，你的合作篮球好像输了啊。\u0026quot;\n\u0026quot;这个家伙是谁？怎么这么厉害，他根本就是一个人在和我们三个人打。\u0026quot;\n\u0026quot;再好的传球手若是队友不能把你的传球转换成得分的话，你就算是场上的王者也根本没有任何的作用！\u0026quot;\n\u0026quot;你到底是谁？\u0026quot;\n\u0026quot;泽北荣治\u0026quot;\n\u0026quot;好，我会记住这个名字的，还有你听好我的名字。\u0026quot;\n\u0026quot;？？？\u0026quot;\n\u0026quot;我叫大久保龙人，记住这个名字，将来在日本篮球顶峰你会找到这个名字的！\u0026quot;\n(十)中国八龙 木石瞳成为日本队第一个被科威特队员侵犯下场的，随后神宗一郎也被科威特队员在防守中碰到旧伤，第三个是日本的主力控球大久保龙人遭到暗算，而愤怒的森重宽又被裁判出示了2次技术犯规被罚下场，土屋满5次犯规。\n5名主力不能上场，但是这已经不能阻止日本队的爆发了，樱木愤怒了，流川愤怒了，仙道也变得从没有过的冷酷。清田和坂野代替大久保和森重上场。而仙道则改打控球。\n樱木在日本队最困难的时候发挥出自己的潜力，在中锋的位置上得分，而樱木竟然学会了木石瞳的勾手射篮，这让所有的人都感到不可思议。\n86：79日本艰难战胜科威特，闯进8强。\n而C组的最后2场比赛，随后进行。\n北川还有打完比赛的日本队员除了大久保和神还有木石之外，都留下来观看中国vs马来西亚的比赛。\n北川：\u0026quot;....\u0026quot;\n助理：\u0026quot;教练，从场上的形式来看中国队将肯定获胜。\u0026quot;\n流川：\u0026quot;教练我很累，想回去休息。\u0026quot;\n北川：\u0026quot;...去吧。\u0026quot;\n土屋：\u0026quot;教练，我也想回去。\u0026quot;\n北川：\u0026quot;...恩 去吧\u0026quot;\n一会除去仙道，樱木，泽北之外别的队员都离开了比赛现场。\n助教：\u0026quot;教练，他们这是...？？\u0026quot;\n樱木(思)：\u0026quot;很压抑，竟然流了这么多的汗，不知道流川他们为什么离开，但我也有一种想逃离这里的感觉。\u0026quot;\n北川(思)：\u0026quot;是被中国队的实力所畏惧了吗？不过依照现在的情况，日本若是今天输给科威特，那么在淘汰赛的第一场碰上中国的话......\u0026quot;\n仙道(思)：\u0026quot;还是离开不看的好，虽然不想承认，但是我不得不承认我确实有些----害怕。\u0026quot;\n泽北(思)：\u0026quot;...这支球队是日本根本不可能战胜的。\u0026quot;\n......\n流川(自言)：\u0026quot;呼，差点被压抑的不能呼气。\u0026quot;\n清田：\u0026quot;流川，你也对中国队的实力震惊吧。逃出来不要看了好，留给自己一些信心。\u0026quot;\n流川：\u0026quot;哼，我不会惧怕任何人。\u0026quot;说完转身离开。\n清田：\u0026quot;...还是那么的...不过也好\u0026quot;\n土屋走过来：\u0026quot;不过也好，若不给自己打打气，也许连和对手同在一个球场比赛的勇气都没有了。\u0026quot;\n......\n北川：\u0026quot;记录都做好了？\u0026quot;\n助理：\u0026quot;全做好了，我们还找到中国队前2场的比赛录像带。\u0026quot;\n\u0026quot;好的，比赛结束了，我们走吧，队员们你们今天打的不错，也很累了，明天我们在进行总结吧，仙道你们回去休息吧。\u0026quot;\n\u0026quot;是，教练！\u0026quot;\n北川临走时看了一下比赛的记分牌：中国117：56马来西亚\n而仙道再和樱木还有泽北一同回去的时候，看到了中国队的队员。一个长发略有一些卷，一个看起来和木石身形差不多的高个子。还有一个身高2米多的巨型。那个长发看到仙道穿的日本队的队服，突然举起右手向着他们的方向伸出了手枪的样子。\n长发：\u0026quot;嘭！\u0026quot;(做出射击的动作)，嘴角露出一丝轻蔑的微笑\n高个子：\u0026quot;喂，刘速你在做什么。\u0026quot;\n长发：\u0026quot;呵呵没事，看到几只刺探军情的蚊子而已。\u0026quot;\n高个子：\u0026quot;不要胡闹。\u0026quot;\n高个子竟向着仙道他们走了过去。\n樱木\u0026amp;仙道\u0026amp;泽北：\u0026quot;怎么他竟然会说日语！！！'\n仙道：\u0026quot;你好，我是日本的仙道彰他们是樱木花道和泽北荣治。\u0026quot;\n于星：\u0026quot;不好意思，刘速就是喜欢开玩笑。你们不要介意。\u0026quot;\n仙道：\u0026quot;没有的。以后还要多多关照。\u0026quot;\n于星：\u0026quot;噢，会的希望能和你们在以后的比赛中一决高下。\u0026quot;\n泽北(思)：\u0026quot;这个人为什么觉得那么面熟？啊！！他难道就是....\u0026quot;\n......\n助教：\u0026quot;教练，看来今天流川他们离开，也是对中国队的实力有所畏惧啊\u0026quot;\n北川：\u0026quot;所以我才同意他们离开，让他们有一个缓冲的时间。\u0026quot;\n助教：\u0026quot;来自中国那面的消息，中国队中最厉害的就是传言中的八龙。\u0026quot;\n北川：\u0026quot;八龙？？\u0026quot;\n助教：\u0026quot;就是号称八龙的八个人，现在具体的是哪8个人还没有调查清楚，但可以肯定的有3个事情。\n北川：\u0026quot;什么事？\u0026quot;\n第一，中国队这次并没有派出最强的阵容参赛，也就是八龙并没有全部来到日本。\n第二，八龙之首，也就是龙首是8人里面最强的，但我们还没有确定是谁，但可以确定他随队来到了日本。\n第三，从目前的情况来看，能成为龙首的人中国队有三个人具有这样的实力。他们是4号身高200cm的于星，打前锋和中锋，中国队队长。9号刘速，184cm控球后卫，是中国队的一个另类球员，205cm的中锋安勇。\n北川：\u0026quot;确实这3个人的实力可以说是在本届大赛中高出其他人一筹的。不论谁是龙首对于我们后面的比赛都将是最大的阻力！\u0026quot;\n(十一)史上最强之敌手 在战胜科威特队的第二天。\n助教：\u0026quot;教练，检查的结果出来了，大久保没有什么大碍，只是扭伤，但是最快也要一个星期才能恢复。\u0026quot;\n北川：\u0026quot;这就是说即使日本队打入决赛，大久保也没有可能上场了。\u0026quot;\n\u0026quot;仙道！\u0026quot;\n\u0026quot;恩，教练您叫我。\u0026quot;\n\u0026quot;大久保不能再上场了，听说你高中曾打过控球后卫？\u0026quot;\n\u0026quot;哦？是的。\u0026quot;\n\u0026quot;那好，从今天开始你要适应一下这个位置了。\u0026quot;\n北川：\u0026quot;木石瞳还有神宗一郎怎么样？\u0026quot;\n助理：\u0026quot;木石瞳的肺病是周期性的，修养一下就行，神的手伤是在全国大赛半决赛的时候受的旧伤，情况不是很好。\u0026quot;\n北川：\u0026quot;那就是说我们在四分之一决赛中有3名重要的队员不能上场了。\u0026quot;\n助理：\u0026quot;看起来是这样的。\u0026quot;\n北川：\u0026quot;我相信我们的小伙子们能禁受住考验，若是连中国台北队都战胜不了，就不用面对韩国和中国了。\u0026quot;\n正如北川所言在2天后进行的比赛中，日本队以二十多分的优势轻松战胜C组第二的中国台北。而中国队没有给科威特任何机会，以近50分的优势取胜。\n而四强的对阵形式也以明朗。\n          日本(A1)  韩国(B1)   vs Final vs   中国(C1)  菲律宾(D1)    \u0026quot;大家仔细看着，这是中国队4场比赛的剪辑。特别注意一下你们各自位置的对手。\u0026quot;\n2个小时后\n北川：\u0026quot;仙道，你来说一下你的看法。\u0026quot;\n仙道：\u0026quot;从录像来看中国队攻守很强没有明显的弱点。还有他们的4号是队内第一得分手，不论是身高还是身体素质，以及强打还是外线的三分总之最后的总结就是---没有弱点。\u0026quot;\n木石瞳：\u0026quot;的确，按道理来说4号应该是一个标准的中锋，但他给我的感觉似乎更趋向于前锋。而中国队那个14号中锋，虽然身高比森重高1cm但是体形没有森重那样大，介于我和森重之间，给我的感觉就是他融合了我和宽2个人的特点。\u0026quot;\n深津：\u0026quot;还有整个中国队中最显眼的就是那个控球后卫了。根本就是玩篮球而不是打篮球。\u0026quot;\n樱木：\u0026quot;哼！我看他就会一些花花东西，让我说的话那个9号最是讨厌了，那天竟然有那么挑衅的举动。真是气死我了！\u0026quot;\n流川：\u0026quot;...\u0026quot;\n泽北：\u0026quot;我想问一句，北川教练。\u0026quot;\n北川：\u0026quot;哦？说吧泽北。\u0026quot;\n泽北：\u0026quot;教练你是不是对我们隐瞒了什么，关于中国队那个4号的情况。\u0026quot;\n北川：\u0026quot;......\u0026quot;\n众人：\u0026quot;？？？\u0026quot;\n泽北：\u0026quot;既然已经到了这个地步，该来的终究会来，希望教练能够明白我们是不会害怕输球的，就算输我们也一定要输的明白。\u0026quot;\n北川：\u0026quot;恩...我知道了，是这样的中国队的4号于星，刚刚代表筑波大学赢得了今年的大学联赛的冠军。\u0026quot;\n众人：\u0026quot;什么？？！！\u0026quot;\n樱木：\u0026quot;他是大学生？\u0026quot;\n北川：\u0026quot;是的，但是他只有18岁。他在去年的时候以篮球特长被筑波大学看中，并从此留学日本。众所周知筑波大学是日本顶级高校，它的体育实力也是日本数一数二的。其实于星代表筑波大学只打了两场全国大赛。其中就有号称颠峰对决筑波vs东大的半决赛，正是这个中国留学生的出色发挥才使得筑波大学击败东大并最终取得了全国冠军。\u0026quot;\n流川：\u0026quot;教练隐瞒他的情况，是怕我们会忌惮此人吗？\u0026quot; 。\n仙道：\u0026quot;从数据看于星平均每场得到33.1分，居所有参赛队员之首，更可怕的是于星平均每场有3个三分球命中。\u0026quot;\n众人：\u0026quot;难道他就是中国队的龙首！！！\u0026quot;\n北川：\u0026quot;很遗憾，这个可能性极大。\u0026quot;\n助理：\u0026quot;就连韩国队的双子星座的崔哲铣，崔哲铭都惧怕的中国龙首！于星就是龙首吗？！\n(十二)日本vs中国---序幕 为了遏制中国队中最强大的球员龙首----于星。日本队把所有搜集到的中国队的录像，以及于星参加的筑波大学对阵东京大学的录像进行了全面的研究。针对于星的特点，木石，樱木，土屋，仙道这四个人进行了专门的训练。\n北川：\u0026quot;从资料中可以看出，于星并不喜欢在篮下活动。活动最频繁是三秒区域附近。此外于星的后仰射篮准确率很高，并且很难防守。如何限制他的投篮是能否限制中国队得分的关键。\u0026quot;\n而且如果用樱木或者土屋防守于星，会在身高方面有劣势。木石瞳是防守于星的最佳人选，但是首先木石瞳不可能保证在这么大强度的比赛中的上场时间，其次一旦森重宽不得不下场的时候，日本队没有一个可以对抗中国队的中锋的球员，因此不到万不得已北川是不会让木石瞳冒险的。但是面对整届比赛攻击力最强的球员，若不安排专人盯防，日本很可能遭到重创。\n北川：\u0026quot;樱木，你过来。\u0026quot;\n樱木：\u0026quot;教练？\u0026quot;\n\u0026quot;樱木，我已经了解到你这2年中的飞速进步了，面对陵南的福田，海南的牧神一，山王的河田，以及名朋战中防守住了大久保那最后一投。也许你并不知道，这2年你正一步一步向着日本篮球的最高峰接近。\u0026quot;\n\u0026quot;...(回忆)...教练不知为什么，当我面对强大对手的时候，我内心就有一种说不出的兴奋的感觉，以及向他们挑战的强烈愿望！\u0026quot;\n\u0026quot;樱木，我看中的就是你那种旺盛的斗志和对篮球的热爱。还有你那深不可测的潜力。现在你有可能要面对一个你前所未有的强敌。让你负责中国队的龙首于星，你有什么问题吗？\u0026quot;\n\u0026quot;龙首...于星...老实说教练我有些害怕。\u0026quot;\n\u0026quot;我也老实说，依照你现在的情况是无法和于星对抗的，但是希望你的斗志能激发你的潜力和战斗力！一旦你的潜力被激发，连我都无法预料你会达到一个什么样的高度！\u0026quot;\n\u0026quot;教练...好，我知道了。还有教练曾经有一个人说。他说---我樱木花道具有超乎常人的防守能力，以及敏锐的对篮球的判断力。你觉得这是可能的吗？\u0026quot;\n北川：\u0026quot;樱木...那个人说的没错！\u0026quot;\n...... ？\n木石瞳：\u0026quot;什么？！你说明天你要从美国回来？还有一个神秘的人也要过来？到底是怎么回事。后天比赛你们会到现场！！\u0026quot;\n\u0026quot;好了，到时你就知道了，就这样了，我已经联系好了，就是上次帮我找到你的那个彩子学姐她已经帮我们买好票了。好了到时加油吧。再见。\u0026quot;\n木石瞳：\u0026quot;菊地...\u0026quot;\n...... \u0026quot;\n\u0026quot;哈哈，这次人数众多啊，简直就是神奈川联队。\u0026quot;\n\u0026quot;是啊，海南，陵南，湘北的都来了。\u0026quot;\n\u0026quot;赤木，我们什么时候和他们集合？\u0026quot;\n\u0026quot;后天和阿牧还有鱼住说好在车站集合，一同坐新干线去琦玉。\u0026quot;\n\u0026quot;喂，湘北的5大主力有3个都入选了，连樱木都能入选了。你们两个怎么没有入选啊？？呵呵，宫城你还是想办法怎么长高10cm吧，藤真还是回去和你那个明星哥哥学学平民上篮吧。哈哈~~~\u0026quot;\n宫城\u0026amp;藤真：\u0026quot;这个三井，真是臭屁！\u0026quot;\n......\n\u0026quot;后天是最重要的比赛，我希望你能来。\u0026quot;\n\u0026quot;...会的，我一定去。\u0026quot;\n\u0026quot;很好。我没有什么可以送给你，我唯一能做的就是把后天比赛的胜利当作礼物送给你！！\u0026quot;\n\u0026quot;枫...恩，这将成为我人生中最重要和最珍贵的礼物！\u0026quot;\n......\n2天后，日本将在琦玉迎战本次大赛最大的夺标热门----中国。\n(十三)日本vs中国---龙首之谜 在经过上午的训练后，北川把日本所有队员集合在一起。\n\u0026quot;队员们，这是我们今天刚刚得到的最新的关于中国队的比赛录像。这是今年中国和韩国青年队对抗赛的录像。\u0026quot;\n......\n北川：\u0026quot;可以说这盘录像是最具有价值的。\u0026quot;\n助理：\u0026quot;是的，这场比赛中韩2队尽遣主力上场。而据说中国八龙也全部参赛。\u0026quot;\n北川：\u0026quot;在和有职业球员崔哲铣和崔哲铭的韩国队比赛的中国队才是真正的中国队。\u0026quot;\n\u0026quot;什么？韩国队中有2名职业球员？！\u0026quot;\n助理：\u0026quot;没错，韩国的崔兄弟已经在韩国职业球队效力成为一个真正的篮球为事业的职业球员。\u0026quot;\n樱木：\u0026quot;可是即便如此，韩国还是以7分的差距输掉了比赛。\u0026quot;\n流川：\u0026quot;难道中国就如此强大？\u0026quot; `\n北川：\u0026quot;不！\u0026quot;\n\u0026quot;...？？？\u0026quot;\n北川：\u0026quot;事实上比这还要强大！\u0026quot;\n\u0026quot;什么！教练不是说中国队并没有派出最强的队伍参赛吗？中国八龙不也是没有全部来到了吗？那现在的这支中国队应该不如和韩国比赛时的强大啊？\u0026quot;\n北川：\u0026quot;没错中国队并没有派出最强的阵容参赛，但是却派出了最强的球员，而和韩国队的那场比赛那位球员并没有出现。\u0026quot;\n助理：\u0026quot;我们已经得到了最新的消息，这次比赛中国八龙来了4个。他们已经得到了确定。分别是：\n 鬼魅之龙爪----刘速， 锋利之龙牙----于星， 高山之龙骨----安勇， 以及最强大的-----霸王之龙首----李泽龙！\u0026quot;  清田：\u0026quot;中国队的龙首不是于星吗？\u0026quot;\n\u0026quot;难道说龙首不是于星？！！\u0026quot;\n流川：\u0026quot;照此看来，那个龙首李泽龙的实力应该比于星还要强。\u0026quot;\n众人(汗)：\u0026quot;...\u0026quot;\n助理：\u0026quot;现在没有办法确认，因为李泽龙简直就是一个迷。\u0026quot;\n北川：\u0026quot;我们在中国队的名单里找到了李泽龙的资料。\u0026quot;\n姓名：李泽龙 位置：前锋 身高：195cm 体重：85kg 号码：10 X？\n仙道：\u0026quot;哦？但是从中国队前几场比赛的录像中我们并没有发现此人上过场。\u0026quot;\n助理：\u0026quot;事实上我们也没有在中国队的替补席上找到有穿10号球衣的人。也就是说到目前为止此人在本届比赛的上场时间是0分钟。由于录像上并不是很清晰，所以我们也无法用名单中的照片来核对找到那个人。\u0026quot;\n仙道：\u0026quot;还真是一个迷一样的人。没有上过场，没有作为替补，甚至连外套都没有脱下过就是说连打算上场的情况都没有。而这个人却是中国最强的球员。\u0026quot;\n泽北：\u0026quot;哼，也很对啊，从目前来看中国队现在的实力已经足够强大，而前面几个对手又不会对中国队构成威胁，实在不需要他出场比赛。\u0026quot;\n樱木：\u0026quot;那就让我们日本队把中国队的龙首逼出来吧！\u0026quot;\n木石瞳：\u0026quot;可是关于他的情况以及特点，我们几乎是一无所知。\u0026quot;\n北川：\u0026quot;不论李泽龙上不上场，我们都要好好应对现在的这支中国队。但是一旦中国队的10球员上场，我希望所有的队员不论是场上的还是场下的都要牢牢盯住他的所有细节！\u0026quot;\n......\n\u0026quot;龙，为什么还要过来呢。什么也做不了。\u0026quot;\n\u0026quot;你们表现的很好，没有我出来的机会啊。\u0026quot;\n\u0026quot;哼，你明知道在前面会是这样的，我想你还是怕我们会输给韩国的崔哲铣崔哲铭吧。那次你一样没有来，我们不是还是赢了他们。\u0026quot;\n\u0026quot;哦？别忘了我们这次只有4龙啊。而且我要让他们知道是韩国的职业球员厉害还是我们中国的职业球员厉害。\u0026quot;\n\u0026quot;龙，真是羡慕你和大勇。你16岁到职业球队试训17岁就成为职业球员，而大勇今年也会被职业球队选中。\u0026quot;\n(拍拍肩膀)：\u0026quot;刘速，好好在比赛中发挥，你同样具有成为职业球员的能力！\u0026quot;\n(十四)日本vs中国----揭幕 日本.琦玉\n全日本的目光都集中在这能容下5000多人的琦玉体育馆。在这里将举行亚洲青年锦标赛的半决赛。由东道主日本对战卫冕冠军中国。\n由于这场比赛不言而喻的重要性门票早已销售一空。两队马上就要出场了。\n中国队首先出场，走在第一位的是他们的4号队长于星，目前于星的平均得分是33.1分，高居所有参赛队员之首，也是号称本届比赛MVP最有力的竞争者。后面跟着是首发的9号刘速，6号彦空，11号林诚，14号安勇。中国队的首发阵容一直是比较稳定，而且这5人的攻击力可以用可怕来形容，并且这五人的身高也是相当高的。除去184cm的刘速外，于星身高是200cm，安勇是205cm，林诚196cm，彦空190cm。这样的一支球队对其他任何球队来讲都是一种威慑力。紧接着是替补队员和教练员。\n全场的气氛达到了高潮，是日本队出场了。\n出来了，走在第一个的应当是日本队的场上队长7号仙道彰，他是来自神奈川县的球员，\u0026quot;仙道！！加油！！！\u0026quot; ？\n仙道：\u0026quot;是他们，鱼住，福田，还有湘北和海南的人...呵呵都来了。\u0026quot;\n走在第二位的是今年高中联赛的MVP----11号流川枫。\n流川：\u0026quot;人好多...她来了吗？\u0026quot;\n现场有许多女球迷开始大喊流川的名字了。\n第三位的是同样是来自神奈川的湘北队的10号樱木花道。\n\u0026quot;樱木加油啊！！！！\u0026quot;\n樱木：\u0026quot;哦是洋平和高宫他们。还有晴子大猩猩，小三，小宫，眼睛兄。藤真兄弟。哈哈还有海南和陵南的人，这下我樱木花道可要在神奈川扬名了。\u0026quot;\n接着是顶替大久保上场的14号深津一成，他是来自全国篮球最富盛名的山王工业。\n最后上场的是日本的得分王5号森重宽。他来自秋田的名朋工业。\n后面是替补队员，我们看到神宗一郎的手臂上依然绑着绷带，还有坐在场边上的大久保龙人。\n木石瞳：\u0026quot;菊地她在哪里呢？人太多了看不到。应该是和彩子她们在一起的啊，我怎么没有发现她呢，还有那个神秘的人物？？\u0026quot;\n最后出现的是主教练----北川光烈。\n比赛即将开始。\n于星：\u0026quot;大家不要被今天的环境所影响，照我们平时练的那样打球就可以了，不要理会球场以外的任何事情。\u0026quot;\n\u0026quot;知道了队长。\u0026quot;\n刘速：\u0026quot;我们来这里只有一个目的，就是卫冕冠军。所以我们绝对不能在半决赛止步。\u0026quot;\n看了看坐在场外观众席上的韩国队员。\n......\n\u0026quot;哥哥，刘速在朝我们这里看呢。\u0026quot;\n\u0026quot;哲铭，不要总是盯着李泽龙于星，中国队中的危险人物不止他们，那个刘速绝对是一个极其危险的人物。\u0026quot;\n\u0026quot;呵呵，哥哥那可是你的对手啊，作为后卫的对手。\u0026quot;\n姓名：崔哲铣 位置：后卫 身高：186cm 体重：78kg 号码：4\n韩国队队长，和弟弟哲铭是韩国队最厉害的球员。\n姓名：崔哲铭 位置：前锋 身高：196cm 体重：84kg 号码：11\n韩国队进攻核心，目前已经超越安勇成为仅次于于星的大赛得分手。本来是双胞胎的兄弟，由于弟弟哲铭在国中的时候生了一场大病，而大病之后就开始了暴长10cm。因而比哥哥高出了整整10cm。\n相田：\u0026quot;这不是韩国队的球员吗？去采访一下他们。我们这里正好有一个韩语翻译。\u0026quot;\n\u0026quot;听说这就是已经进入职业球队打球的崔兄弟。你好，我是记者相田袮生。\u0026quot;\n\u0026quot;哦，是记者？你好，我是哥哥崔哲铣，韩国队队长。他是哲铭\u0026quot;\n相田：\u0026quot;我想问的是你们在昨天进行的第一场半决赛中赢得了胜利率先进入了决赛，那你们希望中国和日本即将进行的比赛谁获得胜利而和你们一同进行最后的冠军争夺呢？\u0026quot;\n崔哲铣：\u0026quot;....这...\u0026quot;\n崔哲铭：\u0026quot;有什么好犹豫的，作为个人我希望中国取胜，因为中国队中有一个人我很想和他较量，以亚青赛为决赛舞台那是最佳的方式了。但是作为韩国队的一员，我倒是很希望日本队进入决赛。\u0026quot;\n相田：\u0026quot;哦？？\u0026quot;\n崔哲铭：\u0026quot;原因很简单，日本队进入的话，我们韩国队拿到这次锦标就容易了许多。\u0026quot;\n相田\u0026amp;崔哲铣：\u0026quot;！！！\u0026quot;\n崔哲铣：\u0026quot;你个笨蛋，不要在媒体前面讲这样的话！\u0026quot;\n相田：\u0026quot;...\u0026quot;\n......\n樱木：\u0026quot;老实说我上场前腿都有些抖，在这么多的观众面前据说还有现场的直播，进行一场这样重要的比赛。这可是我做梦都没有想到的事情。\u0026quot;\n仙道：\u0026quot;不要紧张，樱木。只要发挥出你的实力。想想有那么多双眼睛在注视你，这可是你表现的好机会啊\u0026quot;\n樱木：\u0026quot;仙道，你真是太了解我了，好那我就不必在意什么紧张了。\u0026quot;\n流川：\u0026quot;哼，白痴，不要忘记怎么打球就好了。\u0026quot;\n樱木：\u0026quot;你个狐狸，你说什么呢，笑我紧张，那你的双手为什么出这么多的汉。今天很热吗？\u0026quot;\n流川：\u0026quot;我出汉了吗？\u0026quot;\n樱木：\u0026quot;没出，那你手上是什么。\u0026quot;\n流川：\u0026quot;是刚才洗手留下的水。\u0026quot;\n樱木：\u0026quot;是汉！\u0026quot;\n流川：\u0026quot;是水。\u0026quot;\n樱木：\u0026quot;是汉！！\u0026quot;\n仙道：\u0026quot;好了！是什么不重要，重要的是流川你要得分，尽全力得分。樱木你负责防守住于星，当然这可能比流川得分要困难一些。\u0026quot;\n深津：\u0026quot;队长，我们开始吧。\u0026quot;\n仙道：\u0026quot;好，大家在大吼一次！\u0026quot;\n\u0026quot;必胜！！！日本！！！日本！！！必胜！！！\u0026quot;\n......\n开球了，安勇抢到了球。\n刘速开始运球，深津负责盯防刘速。\n假动作，是变线突破？！\n于星从三秒区里拉到了外面接球。\n是日本队的樱木来防守大赛的最佳得分手中国队的 武于星。樱木死死的盯着于星。\n樱木：\u0026quot;绝对不会轻易的让你进到三秒区附近的。那里是你最得心应手的区域。\u0026quot;\n于星(思)：\u0026quot;看样子是对我们有所研究。\u0026quot;\n于星接到球了，前面是防守他的樱木。\n樱木：\u0026quot;什么！\u0026quot;\n于星接住球后。双手做了一个要运球的姿势，突然跳投。\n\u0026quot;唰~~\u0026quot;\n\u0026quot;三分命中！\u0026quot;\n(十五)超乎想象的对手---龙爪威胁！ 于星的三分拉开了这场比赛的序幕。这样樱木很是惊诧，而樱木也觉察到了于星的实力似乎比录像中的更加厉害。\n而仙道和深津从一开始受到了刘速和彦空的围抢，尤其是刘速。若不是控球的是仙道和深津球是很难顺利的通过而到达中国队的场边的。\n仙道在和流川做了一个配合后也射进了日本队的第一分。两队的队长分别完成了本队的第一次进攻。\n之后刘速挑衅仙道，做出一对一的手势，仙道回绝了刘速。仙道直觉中感到于星才是场上最难对付的人。但是之后仙道不得不面对刘速。\n......\n于星：\u0026quot;怎么样，刘速对于日本队的控球后卫有什么评价。\u0026quot;\n刘速：\u0026quot;...优秀！不论是之前那个13号还是7号他们都是日本队中最优秀的队员。\u0026quot;\n于星：\u0026quot;从你口中能说出优秀，那他们就的确是不简单了。\u0026quot;\n教练：\u0026quot;问题是日本队的7号队员仙道彰的身高是192cm，对于中学生来说这个高度是可以打前锋和中锋的高度。刘速你原来的对手可是从没有这么高的。\u0026quot;\n刘速：\u0026quot;我从来不认为身高是问题，我认为他们优秀也不是因为他们的身高。而是对于后卫来讲最重要的---意识。那两人都拥有着和我一样出色的意识，而且那个7号还有一种似乎是与生具来的王者风范。就像...就像我们的龙首一样。\u0026quot;\n.....\n好危险！已经好几次了，就算是仙道带球，中国队的9号队员刘速依然给予了很大的阻力。\n\u0026quot;好悬！这个家伙如此难缠。我小看他了吗？\u0026quot;\n樱木：\u0026quot;于星，已经够难对付了，现在这个花花家伙又出来捣乱。\u0026quot;\n深津：\u0026quot;从一开始就进行全场紧逼吗？他的体力应该支撑不了多久的。\u0026quot;\n仙道：\u0026quot;这个家伙不仅是花样不少，而且实力也相当的强。看来我只有依靠身高的优势\u0026quot;\n刘速：\u0026quot;哼！想靠着身高来过我吗？\u0026quot;\n刘速竟然跳了起来，拍掉了仙道手上的球！！全场的观众都惊讶了。\n好在仙道及时的又控制住了球。\n\u0026quot;哼，还真是厉害，看来没有和你单挑是我的不对了。\u0026quot;\n\u0026quot;来吧，击败日本队的核心这场比赛就会容易许多。\u0026quot;\n仙道：\u0026quot;看来不能依靠身高了，对付你的办法就只有一个了！\u0026quot;\n\u0026quot;流川接球！\u0026quot;\n仙道快速的把球交给了流川。\n仙道：\u0026quot;那就是传球！\u0026quot;\n比赛开始10分钟，日本17：23中国。\n(十六)后仰射篮 \u0026quot;嘭~~\u0026quot;，好球！仙道隐蔽的传给了森重宽，森重宽篮下重扣得手。\n刘速：\u0026quot;大勇，怎么了？为什么没有阻拦他！\u0026quot;\n安勇：\u0026quot;...\u0026quot;默默的转身走了。\n于星走了过来，\u0026quot;不要介意，不要勉强自己！\u0026quot;\n安勇：\u0026quot;我...我没有任何问题，队长！\u0026quot;\n于星：\u0026quot;好！挺不住的时候说出来。记得后面还有我们呢！\u0026quot;\n安勇：\u0026quot;...队长...\u0026quot;\n......\n几天前，中国对战科威特的比赛前。\n教练：\u0026quot;好！大家一会轻松上场吧。现在开始做一下自我调整。\u0026quot;\n\u0026quot;是！\u0026quot;\n于星：\u0026quot;恩？\u0026quot;于星看到安勇在角落里偷偷的吃某种药片。\n于星：\u0026quot;是止疼片！和韩国的热身赛受的伤还没有好吗？难道阿勇一直是用止疼片来坚持的！\u0026quot;\n......\n中国vs科威特的下半场。\n\u0026quot;教练，我们已经稳操胜券了，可以用替补上场了。\u0026quot;\n\u0026quot;哦？于星这可是你第一次主动提出让主力下场休息啊。\u0026quot;\n\u0026quot;是吗？\u0026quot;\n......\n深津(思)：\u0026quot;交叉步。一定要盯紧这个刘速。\u0026quot;\n刘速：\u0026quot;这是我遇到防守最好的后卫了，看来需要使些花招了。\u0026quot;\n突然刘速开始左右手快速拍球而身体也开始左右晃动。\n深津：\u0026quot;又想变线加速吗？没有那么容易。\u0026quot;\n刘速：\u0026quot;哼！就是这个！\u0026quot;\n\u0026quot;什么！！！全场观众都惊呆了。\u0026quot;\n深津为了防止刘速的突破而使双腿的距离变大。而刘速就是利用这一点把球从深津的胯下传了出去。\n是林诚接到了球，日本队的流川枫马上跟了过来，但是林诚已经把球传给了中锋安勇。\n日本队的5号森重宽已经严阵以待了。\n森重宽：\u0026quot;想强打...\u0026quot;\n于星(思)：\u0026quot;一定要减小阿勇的压力\u0026quot; \u0026quot;阿勇，给我！\u0026quot;\n安勇将球传给了于星。\n\u0026quot;樱木！就看你的了。\u0026quot;\n樱木：\u0026quot;一定要贴住他！\u0026quot;\n樱木的紧贴防守，虽然不能完全抑制住中国队的队长，但是于星到目前位置也只得到了7分，大部分的时候都是把球传给了别人。\n于星(思)：\u0026quot;这个10号的爆发力很好，虽然身高上我有优势，但是打败他不能依靠着10cm左右的优势。\u0026quot;\n中国队主教练孟教练：\u0026quot;于星，击败防守你的队员，就依靠那个绝技就可以了。在这个赛场里，还没有人能完全对付你的那招。\u0026quot;\n于星倚住樱木突然转身后仰跳投。\n樱木：\u0026quot;呀！\u0026quot;\n仙道：\u0026quot;坏了！\u0026quot;\n\u0026quot;唰，球进了。\u0026quot;\n北川：\u0026quot;这就是于星最难对付的地方了----后仰射篮。\u0026quot;\n助教：\u0026quot;这...怎么办。\u0026quot;\n北川：\u0026quot;樱木的弹跳力和爆发力可以弥补他和于星身高上的差距。但是200cm的于星采用后仰射篮的话，樱木是很难防住的。如果是别人的后仰射篮，就算樱木不可能碰到球，也会对对方的射篮有一定影响。但是于星在比赛中经常性的后仰射篮说明他对这种投篮是相当熟练的，并且命中率也是相当的高。再加上是左手选手，会对防守他的球员有一定的不适应性。所以一旦于星采用这样的方式的话，我们就只有2个不得已的办法了。\u0026quot;\n助教：\u0026quot;我们还有应对的方法？\u0026quot;\n北川：\u0026quot;一个是让木石瞳提前上场。\u0026quot;\n助教：\u0026quot;这样有些风险！万一森重宽下场怎么办，还有木石瞳的身体在这样的比赛中和如此强大的对手的较量中是不会坚持到最后的。不是还有一个办法吗？\u0026quot;\n北川：\u0026quot;另外一个办法也就只能等待于星的投篮不中了。靠拼抢篮板球了。\u0026quot;\n助教：\u0026quot;啊！和整个大赛平均身高最高的中国队拼篮板球吗！？\u0026quot;\n(十七)神奈川的斗士 樱木在防守于星的过程中，承受了前所未有的压力，但是樱木也从和于星的对抗中使自己的实力又上升了一个层次。\n虽然于星的后仰射篮让樱木一筹莫展，而樱木为了破解于星的后仰，对于星也采用了后仰射篮。不过由于仓促上手，并没有投进。 第一次是后仰后投球力量稍小，第二次是后仰的角度过大。正在所有人为樱木的举动感到奇怪的时候，樱木终于抓住了一次机会，竟然在于星的面前做出了标准的后仰射篮。可惜球依旧砸在篮筐上，好在森重宽补篮得手。不过樱木还是让日本队包括于星吃惊。\n这边于星和刘速的得分已经过10分，而安勇由于身体条件不好，在和森重宽的对抗中略显吃力。仙道，深津等敏锐的发现了这一点，放弃自己的进攻而将球主要传给森重宽，这样森重宽就成为日本队的得分核心。\n北川教练也采取了非对称式防守。即在进攻的时候仙道控球而中国队的刘速盯防仙道，但是当中国队由刘速控球的时候，是由深津负责盯防。这样可以充分发挥仙道的组织能力和深津的防守能力。尤其是仙道的个人技术和传球成为日本队最重要的进攻手段，流川由于在比赛后终于看到她的位置，而异常努力。竟然晃过林诚在安勇的面前灌篮的手。\n在全场观众的加油中，日本队没有被中国队甩开。 上半场即将结束的时候紧紧以43：47落后4分。\n\u0026quot;很好，大家在努力一下，争取在半场结束前把比分追平。\u0026quot;仙道。\n坐在看台上的牧神一。\n牧神一：\u0026quot;仙道的能力是勿庸置疑的，但是现在他身体内的领袖气质已经让他完全的蜕变成一个超一流选手。赤木。\u0026quot;\n牧：\u0026quot;假如我们现在再回到高中。你认为和仙道对战有多大的胜算？\u0026quot;\n赤木：\u0026quot;我认为我有30％的胜算，若是你牧神一的话...\u0026quot;\n牧：\u0026quot;...\u0026quot;\n赤木：\u0026quot;...应该有50％\u0026quot;\n牧：\u0026quot;...哦你也高估我了。\u0026quot;\n赤木：\u0026quot;！！！牧，你的意思是，仙道的实力已经超越你了？\u0026quot;\n牧：\u0026quot;一个本身就有着超强实力的球员，然后身上又具备了一种让人肃然起敬的甚至可以说是威慑人心的王者之气，那他会是一个多么可怕的人。\u0026quot;\n赤木：\u0026quot;就像是那时王者海南的----牧神一。\u0026quot;\n牧：\u0026quot;现在可是全日本的----仙道彰。\u0026quot;\n......\n\u0026quot;虽然知道这是一场艰苦的比赛，但是还是没有想到日本会有如此的难缠。\u0026quot;林诚。\n\u0026quot;哼，占据着所有的场外因素的优势，还有这全场观众的鼓励加油。\u0026quot;\n刘速：\u0026quot;难道不好吗？不论这么多观众是支持日本的，但只要在越大的舞台上进行比赛我就会越发的兴奋。队长！你想我们在场上的5名中国球员在和全场的5000名观众作战是一种什么样的感觉呢？\u0026quot;\n于星：\u0026quot;5个人和5000人作战的感觉我不想知道，我只想知道5个人击败5000人的感觉！\u0026quot;\n......\n(十八)苦局 上半场进行到尾声，日本队终究没有将比分追平，依然有4分的劣势。\n半场休息时，木石瞳终于看到了菊地，还发现菊地竟然和自己的妈妈在一起。远在美国并且有好几年没有见到的妈妈的到来让木石瞳非常的惊喜。\n日本队发现了中国队的中锋今天的表现很奇怪，所以采取让森重宽为进攻核心的战略。另一方面，中国队教练也看出安勇有些问题，准备在下半场用另一中锋替换安勇，安勇认为日本队的森重宽的实力在中国另一中锋之上，所以安勇希望教练把他留在场上。\n安勇：\u0026quot;教练，我知道现在的身体状况是无法很好完成比赛的，但是日本的中锋绝对是一个劲敌，我希望可以利用我的职业球员的经验击败他。\u0026quot;\n教练：\u0026quot;可是你现在会很勉强的。别忘了 我们还要考虑后天的决赛呢。\u0026quot;\n安勇：\u0026quot;我不会勉强自己的，我希望用我这最后的力量，让他犯一些错误...\u0026quot;\n于星：\u0026quot;原来是这么回事...\u0026quot;\n下半场比赛开赛。\n双方的争夺从一开始就集中到2个中锋身上。\n中国队贯彻了教练的思想，所有队员的进攻都冲着森重宽。只要有机会不论是刘速还是彦空突破都会找森重宽，而于星也甩开樱木尽量和森重宽。而安勇则利用他职业球员的经验，在整个中国队的围攻下终于使森重宽连续犯规。\n仙道看出了中国队的意图，虽然樱木也极力阻挡中国队对森重宽的压力。但最终在下半场开始不久，森重宽犯规3次，不得已北川用木石瞳换下森重宽。而安勇随着森重宽的离场，也完成了任务被换下。\n由于中国队为了强打森重宽，而放弃了几次更好的得分机会。 日本仅仅以57：59落后。\n全场的气氛变的骤然紧张。由于双方的主力中锋都离场，日本和中国同时陷入了苦战。\n(十九)木石vs于星 (二十)好局 2分的差距是中国队没有想到的，安勇的离场更让中国队队员有些慌乱，加上全场5000人的声援声，这场比赛由没有任何悬念而到了紧张的窒息的程度。\n于星这次面对了木石瞳和樱木花道的夹击，不过于星给了刚刚上场的木石瞳一个警告，于星的勾手让木石瞳都无能为力，最佳得分手终于在中国队最危机的时候发挥出威力。在场上其他队员被全场的观众的震撼声弄的有些慌乱的时候，身为八龙的龙牙和龙爪的于星，刘速勉 强的为中国队依旧保持着2分优势。\n62：64，在进攻的时候木石瞳单打于星在即将被封盖的瞬间将球射出。\n64：64，平分！！全场雷动。\n中国队主教练马上要求暂停。就在这时...\n刘速：\u0026quot;教练！我请求您不要换人！\u0026quot;\n孟教练：\u0026quot;现在的气氛不利于我们。\u0026quot;\n刘速：\u0026quot;请相信我们在场上的这5名队员，虽然中国队在之前从没有遇到被对手将比分扳平的时候，但请您相信我们，我们有赢得比赛的能力。就算是东道主日本队，就算是他们将比分扳平甚至反超，我们都是经过千锤百炼才入选的，不会因为对手反超就乱了阵脚。\u0026quot;\n林诚：\u0026quot;是啊教练！此时虽然情况不利，但还不至于让龙首出场，因为我们还没有到了那个地步，如果在于星和刘速都在场上的情况下我们还用龙首出场的话，那我们其他的人就会失去那种对篮球的自信心的。\u0026quot;\n彦空：\u0026quot;对啊，这样我们会对自己的能力表示怀疑的，教练请再给我们一点时间。\u0026quot;\n教练：\u0026quot;...于星 你的意思。\u0026quot;\n于星：\u0026quot;我们的实力绝对在日本队之上，可是5000多名观众的呐喊以及日本队的超水平发挥，确实出乎预料。龙也许真的需要上场，但不是现在。\u0026quot;\n教练将头转向了另一边\n\u0026quot;龙，你认为呢？\u0026quot;\n\u0026quot;我相信我的队友有绝对的把握赢得这场比赛。就算我不出场，就算日本队平分，但我已经能感受到2队之间依然存在着差距。凭我的判断，如果我不出场，算上场外对日本队有力的因素，以及他们有可能的意外得分，这场比赛最终我们会赢日本队8分左右。\u0026quot;\n......\n最终在刘速等人的请求下，孟教练并没有换场上的任何队员。而之后樱木成为了场上最最耀眼的明星，在连续三次封盖掉中国队的一次进攻，尤其是第一次防住了于星的后仰射篮。\n樱木在抢栏板的时候竟然不顾一切的和中国队210cm的中锋撞到了一起，在倒地的时候将球传给了流川，流川也灌篮得分。\n66：64中国队有史以来第一次比分落后。\n但这仅仅是一个开始，仙道也断掉了彦空的传球，背后传球给了樱木，樱木在于星还没有完全紧贴过来的时候，后仰射篮，虽然刘速从旁边飞快的冲来阻止樱木。樱木依然面对2个人的防守将球射进，并且导致刘速犯规。\n樱木也第一次站到了罚球线上。\n全场开始大喊樱木花道的名字，樱木的名字已经通过电视转播而响彻日本全国。\n而此时，中国队...\n裁判\u0026quot;中国队请求换人。\u0026quot;\n孟教练：\u0026quot;龙。你上场。没有热身没问题吗？\u0026quot;\n这时候一直坐在主教练旁边助理教练席上的，一个很斯文的人，站了起来。\n\u0026quot;没关系的，在场上做热身就可以了\u0026quot;\n当他把外套脱掉的时候，全日本的队员终于看到了他的球衣号码----10\n于星：\u0026quot;...\u0026quot;\n刘速：\u0026quot;耻辱！竟然把龙首逼出来了，日本队我要加倍还给你们！\u0026quot;\n北川：\u0026quot;注意这也许就是那个李泽龙。\u0026quot;\n仙道：\u0026quot;没错就是他！\u0026quot;\n当龙替换林诚上场时，仙道，流川，樱木，木石，深津所有人的目光无一例外的都盯在了10号李泽龙的身上。仿佛是一种不自主的感觉。\n李泽龙：\u0026quot;你们辛苦了。我们终于可以一起并肩作战了。\u0026quot;\n刘速：\u0026quot;龙，对不起，我们实在是没有打好。\u0026quot;\n李泽龙：\u0026quot;还没有到那么坏的程度。是吧队长？\u0026quot;\n于星：\u0026quot;龙，我说过这支球队是你的，我只是在暂时替你保管而已，一旦你回来包括我在内的所有人都将会围绕在你的身边...不遗余力的辅助你！\u0026quot;\n李泽龙：\u0026quot;那个10号将球罚进就是5分的差距。\u0026quot;\n众人：\u0026quot;...对不起...\u0026quot;\n李泽龙：\u0026quot;正好可以热热身，大家给我2分钟的热身时间怎么样？\u0026quot;\n于星(思)：\u0026quot;龙要单干了...\u0026quot;\n刘速(思)：\u0026quot;来吧龙首，向那次击败我一样击败他们吧！！！\u0026quot;\n(二十一)霸王天地反(上) 顽强的日本队在下半场比赛的中段，依靠着樱木花道的出色防守和流川枫的灌篮得分首次让强大的中国队比分落后。而樱木花道得到了加罚的机会。\n与此同时，中国队终于派上了他们的王牌选手-----龙首李泽龙。\n由于日本队没有任何关于李泽龙的资料，李泽龙的上场究竟会改变什么，无人知晓。但是由于日本队比分领先，全场已经变得沸腾起来。观众们感觉忽然看到了一种正在升起的希望，并且忽略了中国队所做的这次换人，而接下来的2分钟却足以成为一段瞬间的经典并让所有在场的人记忆深刻。\n......\n仙道：\u0026quot;樱木，不论球进不进，马上退回去防守。\u0026quot;\n樱木：\u0026quot;交给我吧。我知道这个就是龙首，不会掉以轻心的。\u0026quot;\n唰~~球进了，漂亮樱木罚进这球，并且已经得到了9分了。\n\u0026quot;5分！日本竟然领先了5分，全场开始有节奏的声援声\u0026quot;\n中国队的队员怎么站到了球场的自己的一边，这边流川和仙道已经开始准备进行拦截防守了。而中国队的控球后卫刘速竟然把球传给了刚刚上场的10队员手中，并没有组织运球。\n李泽龙很轻松的原地拍着球，眼中看着前面的日本5人。\n\u0026quot;哼\u0026quot;\n\u0026quot;等等，流川退回来，这个交给我。\u0026quot;\n\u0026quot;一定要盯紧他上场后的每一个动作。\u0026quot;\n李泽龙(思)：\u0026quot;求之不得，就从7号开始。\u0026quot;\n中国队其他4名队员并没有进攻的趋势而是都围成一个扇型站到了10号队员的身后。10号队员面对仙道的防守，只是速度不快的原地左右运球。\n仙道(思)：\u0026quot;一定会利用变线加速。要防住哪边呢？一般的右手球员是习惯从对手的左侧突破的？他呢？\u0026quot;\n左手，右手，左手，右手...时间在一点一点的流逝，而李泽龙依然没有做任何位置上的移动。\n仙道：\u0026quot;就是这个！！！\u0026quot;\n突然李泽龙运球加快了，身体突然往仙道的右侧前倾。\n仙道：\u0026quot;是突破右侧！不对是假动作！\u0026quot;\n就在仙道思考的一瞬间，李泽龙以极快的速度毫不犹豫的从仙道的右侧突破。\n流川枫马上赶了过来。\n李：\u0026quot;他的技术也不错...\u0026quot;\n似乎只是一个简单的换手运球，流川就被轻易的突破了。\n流川：\u0026quot;！！！好快！！！\u0026quot;\n深津和樱木准备夹住往禁区突破的李泽龙。\n刘速：\u0026quot;只要龙首速度起来了，你们是绝对拦不住的...没用的...\u0026quot;\n是转身带球，顷刻之间日本队筑成的防守堡垒就仅仅剩下一个留在最后的木石瞳了。\n李泽龙面对木石瞳选择了直接强突。\n木石：\u0026quot;是灌篮！\u0026quot;当李泽龙身体碰到木石瞳的瞬间。\n\u0026quot;啊！\u0026quot;木石瞳奋力的跳起要拦住李泽龙的强扣了。\n\u0026quot;什么！！！\u0026quot;\n李泽龙竟然后仰，并且是一只手拿球。\n在空中停留了一下，李把球投向了篮筐。\n球颠了颠，还是进了。\n\u0026quot;嘟~~~\u0026quot;同时裁判的哨声也响起，进球有效，并且木石瞳打手犯规。李泽龙加罚。\n仙道：\u0026quot;呼呼，明明就是在空中等待木石瞳的手碰上去再把球投出去。\u0026quot;\n流川：\u0026quot;难道对自己那样情况下的单手投篮如此自信吗？？？\u0026quot;\n樱木：\u0026quot;一个人，一个人就把我们全部戏弄了...\u0026quot;\n唰~~~球进。\n李伸出个手指头，\u0026quot;还有两分守住这一球。\u0026quot;\n(二十二)霸王天地反(下) 仙道控球，他面前的是李泽龙。仙道也像李一样在原地运着球，并不急于向前突破。\n仙道(思)：\u0026quot;一定要小心。\u0026quot;\n突然李泽龙向前方冲去来断仙道的球。\n仙道判断出李泽龙的抢球，而突破了李，但是李泽龙并没有反抢而是依然顺着前方跑去。就在仙道突破了李泽龙之后的瞬间，刘速突然出现在了仙道的面前，并以更快的速度把球抢了下来。\n刘速：\u0026quot;龙。\u0026quot;刘速迅速把球传给了在前面的李泽龙。\n李泽龙：\u0026quot;...好样的！\u0026quot;\n仙道(思)：\u0026quot;难道他已经预料到我躲过他之后会被刘速把球断掉吗？\u0026quot;\n\u0026quot;什么！\u0026quot;深津和流川又是这么轻易的被李成功的甩在了身后。\n\u0026quot;嘭！\u0026quot;在木石瞳的头顶上扣篮。而樱木却还没有来得及回防。\n平分了69：69。\n随后，日本队的连续2次进攻都没有成功，而中国队依靠着李泽龙一个人的进攻，打板射篮得到2分。这样中国队再次领先，李泽龙在短短的2分钟时间内得到7分。\n李泽龙：\u0026quot;好了，热身完毕！现在开始我不准你们再让日本队比分领先！一分都不可以，你们明白吗？\u0026quot;\n于星：\u0026quot;龙，这样的情况绝不会让它发生的。\u0026quot;\n刘速(思)：\u0026quot;...这样的龙，真是让人紧张。就像是那次刚刚见到他的时候。\u0026quot;\n......\n中国广东。\n\u0026quot;又赢了！！\u0026quot;\n\u0026quot;是啊，这个家伙打球太好了，有很多人都会专门赶来要和他进行比赛呢。\u0026quot;\n\u0026quot;看他的球简直是眼花缭乱。\u0026quot;\n\u0026quot;没错，他就是传说中的单挑王！\u0026quot;\n......\n\u0026quot;刘速，教练难道叫我们找的就是这个人吗？\u0026quot;\n\u0026quot;...单挑王...看样子他在这里很难有敌手啊。\u0026quot;\n\u0026quot;这样的街头篮球真的能和我们融合在一起吗？他的风格和我们根本是截然不同。教练让我们找这样的家后入队简直是赌博。就算是现在我们的主力控球受伤，也用不着找这样的家伙。\u0026quot;\n\u0026quot;于星。不是只有像我们这样的人才有资格入选青年队的，也许那样的家伙会给我们带来一些奇妙的事情呢。\u0026quot;\n\u0026quot;...那龙要怎么和他说呢？这样的人未必喜欢做别人的替补。\u0026quot;\n\u0026quot;只要让他明白，他和我们要求的还有一定的差距。\u0026quot;\n......\n于星和李泽龙找到了，在这里号称单挑王的----刘速。\n\u0026quot;你就是刘速？\u0026quot;\n\u0026quot;怎么？想比试比试吗？\u0026quot;\n\u0026quot;...单挑王...就是你？\u0026quot;\n\u0026quot;哼，有很多人和你一样，在开始的时候都是用的这种语气。可是到了后来，他们的语气就不再是这样的了。\u0026quot;\n\u0026quot;好，那就只说吧。我比你高让你5个球，若是你觉得不够的话，还可以优惠你几个。\u0026quot;\n\u0026quot;哼！！！身高？？比你高的人我打败的数都数不过来了。\u0026quot;\n\u0026quot;你最好还是听他的。让他让你5个。\u0026quot;\n\u0026quot;好，狂妄的家伙，不要后悔就行。\u0026quot;\n.....\n\u0026quot;喂，现在比分是8比0，还有2个球。我倒要看看你多大的本事，能追回。\u0026quot;\n\u0026quot;哦？那你最后一鼓作气赢了我，千万不要给我机会。\u0026quot;\n\u0026quot;到现在你还是那么自大，我就让你明白你自大的后果！\u0026quot;\n\u0026quot;天啊 刘速的突破竟然让这个家伙给破坏了！\u0026quot;\n1：8、2：8...9：8、10：8\n\u0026quot;呼呼，不可能，怎么会这么厉害。\u0026quot;\n观众：\u0026quot;简直是不可思议，连追10球！！！单挑王输了！！\u0026quot;\n于星：\u0026quot;怎么样，结果已出胜负已分。\u0026quot;\n刘速：\u0026quot;你们到底是谁，这绝对不会有人击败我。\u0026quot;\n李泽龙：\u0026quot;有没有兴趣参加一个集训队，不过要从替补做起。\u0026quot;\n刘速：\u0026quot;你也是那个集训队的吗？你到底是谁。\u0026quot;\n\u0026quot;李泽龙\u0026quot;\n\u0026quot;你就是李泽龙！号称七龙之首的李泽龙！\u0026quot;\n(二十三)阻击李泽龙 仅仅是2分钟之前，日本队还以5分的优势领先。但2分钟后李泽龙的上场改变了一切。\n沸腾的体育场突然变得鸦雀无声。琦玉的观众们还没有弄清是怎么回事，日本队的优势瞬间消失了。\n但可怕的是在李的带领下刘速于星以及其他队员，完全被激活了。由于李的强大实力，北川不得不叫樱木和仙道对李泽龙进行联防。\n而木石瞳将一个人面对于星，由于仙道要对李进行防守，而刘速的突破实在需要仙道和深津2人才能防守住，这样刘速就成为日本队无法弥补的一个漏洞。\n由于连续2次被李泽龙轻易的突破，流川枫对自己的自信心开始动摇。不光是流川包括木石瞳，深津都已经为对手的气势所震慑。\n场上只有樱木还在不停的拼抢，而李泽龙上场得到7分之后并没有再连续得分，而是将球传给队友，刘速和于星不再再外线进攻，中国队全部采取强攻日本队内线。\n由于体力上已经完全跟不上刘速，深津被清田换下。\n\u0026quot;嘭！\u0026quot;于星再次扣篮得分。\n\u0026quot;呼呼，为什么他的强攻如此厉害，原来的录像上于星很少强打篮下的啊\u0026quot;\n李泽龙：\u0026quot;....于星...终于开始认真了。\u0026quot;\n原来于星曾经并不是喜欢打篮球，于星在国中的时候是一个非常斯文的学生，并不喜欢运动。后来由于他的身高，使得有很多体育老师找到他，希望他能成为一名篮球手。起初于星拒绝了，但是后来无奈总是有很多老师找他加入篮球队，不得已于星答应了老师的要求加入了一 所体育学校的篮球队。\n开始虽然大家忌惮于星的身高，后来队友们发现于星打球特别的斯文和软弱，开始不停的讥笑和讽刺。终于于星被激怒，开始进行大强度的身体训练，在一次队内内部比赛中将自己的队友撞伤。而那次事件也让于星感到了悔恨，为了尽量减少和对方接触的机会，于星选择了一条不同的中锋之路，就是后仰射篮和勾手射篮。\n时间已经没有多少了，在这期间。李泽龙又得到了5分并且有多次助攻。中国队连续得到15分，而日本队竟然没有得到一分。\n69：86\n樱木：\u0026quot;大脑一片空白，似乎身体也已经筋疲力尽，为什么我听不到任何的声音。\u0026quot;\n仙道：\u0026quot;大家不要泄气，拿出我们的斗志来！！！\u0026quot;\n樱木：\u0026quot;仙道好像在说些什么，为什么我听不清呢，应该是比较嘈杂的体育馆怎么在我感觉却是一个无声的世界呢。死狐狸，已经到了极至了。得分啊，你在做什么呢流川枫，得分啊！\u0026quot;\n赤木：\u0026quot;樱木好像有些发呆有些怪怪的。\u0026quot;\n晴子：\u0026quot;哥哥，樱木是不是筋疲力尽了。\u0026quot;\n赤木：\u0026quot;...\u0026quot;\n流川的射篮不中，日本队还没有得分吗？\n樱木：\u0026quot;我的！！\u0026quot;\n樱木抢到了篮板，要扣篮吗？\n樱木抢到篮板后刚准备扣篮，但是凭着感觉，他发现前面的李已经预料到他的扣篮。\n而此时樱木突然听不到任何声音，仅仅凭着感觉将球传给了在身后的流川。\n流川跳起强扣了，李泽龙也随之跳起，\u0026quot;啪！！\u0026quot;\n\u0026quot;什么！\u0026quot;流川看到李泽龙已经将球路封死的情况下，竟然将球扔向了篮板。\n仙道：\u0026quot;樱木！！是流川传给你的！！！\u0026quot;\n\u0026quot;嘭！！！\u0026quot;\n樱木花道双手将球扣进。日本队终于再次得分！\n李泽龙：\u0026quot;那个11号也许从一开始就没有打算自己扣篮，他的目的就在于吸引我而将球传给10。哼！日本队还有这样的球员，非常出色的球员...\u0026quot;\n\u0026quot;好样的樱木。\u0026quot;\n观众也为樱木的这一球再次兴奋。\n仙道：\u0026quot;樱木！多谢你了！\u0026quot;\n流川：\u0026quot;...\u0026quot;\n樱木(思)：\u0026quot;球进了？！听不到仙道他们说什么。这是怎么了，大脑一片空白，刚才的那一球究竟是怎么进的都回忆不起来，现在真的是凭着感觉在打吗？\u0026quot;\n北川：\u0026quot;樱木，很好这一球。可是时间...时间已经不多了，这场比赛就这样输了吗？\u0026quot;\n(二十四)燃烧军团 虽然樱木终于为日本队得到了2分，可是日本队已经在全方面处于劣势了。\n刘速，于星，李泽龙已经把日本队的防线冲的接近崩溃。\n木石瞳顽强的防守于星，虽然已经尽了全力但是于星一改平时的中距离射篮，而频频强打内线。木石瞳的体力已经到了极限。对于上场没有多长时间还有着充沛体力的李泽龙，樱木和仙道已经是全力以赴，根本不可能在对别人进行联防。\n樱木：\u0026quot;不仅是听不到任何声音，眼睛看东西也是有些模糊，是拼的太狠的缘故吗？\u0026quot;\n木石瞳：\u0026quot;啊！！\u0026quot;木石瞳再次被于星撞倒。\n裁判判木石瞳阻挡犯规。\n于星罚球，于星：\u0026quot;他已经4犯了，还要和拼吗？\u0026quot;\n又是2分。\n菊地：\u0026quot;木石..不要再打了，不要再站在场上了..已经到了极限了...木石你能听到吗\u0026quot;\n......\n木石瞳\u0026quot;呼呼(思)妈妈，菊地，是的也许真的到了极限了，呼吸变得是如此困难，但是我不能下场，也许这一生都不会再遇到这样的强敌了，一定要为日本队贡献出我最后的力量！剩下的就交给你了樱木还有森重...\u0026quot;\n\u0026quot;木石...\u0026quot;\n木石瞳看看场外，终于看到了菊地和妈妈的身影。\u0026quot;希望妈妈能了解，今天我就是死也要死在球场上！\u0026quot;\n又是樱木，他把篮板抢到了，现在的日本队的每次进攻都显得如此艰难，但是每个人都能感受到2队的犹如火山爆发般的斗志。\n\u0026quot;樱木把球传出来！\u0026quot;\n樱木：\u0026quot;什么！在说什么！\u0026quot;突然樱木看到了流川的身影，流川突然从前面跑到樱木的侧面。流川用眼光看了一眼樱木。\n樱木(思)：\u0026quot;流川...好的\u0026quot;\n林诚：\u0026quot;是传球？\u0026quot;林诚看到了樱木转身。\n樱木向着流川的方向转了过去，唰~~~~\n樱木并没有传给流川，竟然是后仰跳投！！！\n\u0026quot;！！\u0026quot;在于星把注意力向流川转移的一刹那，樱木在于星的面前侧身后仰跳投。\n流川：\u0026quot;..一定要进！\u0026quot;\n樱木：\u0026quot;进去吧...进去吧。\u0026quot;\n\u0026quot;嘭！\u0026quot;球竟然砸在篮筐上弹起来了。\n\u0026quot;还没有结束呢！\u0026quot;木石瞳跳起抢到了篮板。\n\u0026quot;木石！！！\u0026quot;\n全场的观众都屏住气息，木石瞳要扣篮了。\n正当木石抢到了篮板即将扣篮的时候，李泽龙竟然从木石后面硬生生的把木石瞳的扣篮盖了下去。\n\u0026quot;嘭！！\u0026quot;木石瞳摔到了地板。\n可是球还在空中，李泽龙和球的距离太远已经无法抢到球。\n樱木，仙道同时向球的落点跑去，而于星也正在努力过去。\n但是有人比他们更快！流川摆脱了林诚而刘速也甩开了清田。\n流川和刘速已经冲到了一起同时跳起！\n\u0026quot;天啊。流川和刘速撞倒了一起！！！\u0026quot;\n\u0026quot;啊！！\u0026quot;刘速大喊一声。\u0026quot;球是我的！\u0026quot;\n刘速抢到了球，迅速带球晃过了后来赶上的清田。面对后场无人的日本队上篮得分。\n当球从篮筐中落下的同时，一股鲜血也从刘速和流川的头上流下。\n\u0026quot;刘速！\u0026quot;\n\u0026quot;流川！\u0026quot;\n刘速和流川就这样站着互相看着对方根本没有管别人的声音，也不理会血正在流。\n刘速脸上充满了一个斗士一样的神情，而流川也更加的冷酷。\n\u0026quot;好样的刘速，这才是一个球员应该具有的求胜欲望！\u0026quot;\n\u0026quot;流川！没事吧！\u0026quot;\n流川：\u0026quot;...输给他了...\u0026quot;\n医生马上给流川进行包扎，而刘速...\n刘速把发带绷到伤口上，\u0026quot;带血的发带就是最好的绷带，让我更加具有斗志！来吧，教练相信我。我没有事的！让我战斗下去！\u0026quot;\n李泽龙：\u0026quot;教练，这样的队员才是我们需要的。希望您能让刘速继续上场比赛！\u0026quot;\n孟教练：\u0026quot;...好！连我都为你们的精神所折服！\u0026quot;\n......\n除去受伤的流川正在包扎外，木石瞳已经到了极限被工作人员抬了下去。\n木石瞳：\u0026quot;大家，对不起我已经不能和你们在并肩比赛了，我没有什么遗憾了。\n仙道：\u0026quot;是的，你已经竭尽全力，木石我们依然会全力比赛的，剩下的就交给我们吧。\u0026quot;\n木石瞳(思)：\u0026quot;妈妈，我已经尽力了...\u0026quot;躺在担架上的木石已经流下了眼泪。\n\u0026quot;木石...\u0026quot;菊地和木石瞳的妈妈看到木石瞳被担架抬下的时候，也忍不住流下了眼泪。\n木石瞳 号码4 身高199cm 年龄16 本场得到4分\n做为全场唯一的一个16岁的球员，木石瞳已经做到了他尽所能做到了，16岁的他以后还有很长的路要走\n.....\n樱木(思)：\u0026quot;流川，木石....为什么好像就像一个无法翻越的屏障一般，这才是中国队的真正实力吧，哼！连我这个天才都会感到无能为力。\u0026quot;\n虽然流川表明自己没有问题，要求还要留在场上，而北川考虑流川的身体拒绝了流川继续留在场上的要求。\n北川：\u0026quot;泽北，你现在是我手上的最后一张可以用的牌了\u0026quot;\n泽北：\u0026quot;...我要在几分钟内把我这么长继续的能量爆发！\u0026quot;\n流川靠在椅子上，头上盖着毛巾。\n高傲的他在今天也连续体会到了失败的滋味。\n几次被李泽龙轻松的突破，以及最后被刘速抢到了那个重要的球，这一切都让曾经充满自信的流川枫，变得如此的怀疑自己。\n比赛还在继续，森重和泽北分别替换因体力不支的木石瞳和受伤的流川。\n时间已经即将结束，虽然泽北也同样晃过了体力有了很大消耗的刘速和于星，但是李终究成为日本队最难以对付的最后一道防线。\n时间已经不到30秒了，此时屏幕上的比分是76：96。\n樱木防守主了于星的突破，可是于星把球传给了李泽龙。\n仙道：\u0026quot;就算是输也决不能让你们上到100分。\u0026quot;\n李泽龙：\u0026quot;逃避了\u0026quot;李把球竟然又传给了于星。\n于星此时已退到三分线附近。\n樱木：\u0026quot;第一个球，就是这样让他投进的。真的想投三分得到100分吗？\u0026quot;\n于星果然是投三分了。樱木同时跳起来了，樱木碰到了球，球偏了没有进。\n清田抢到篮板迅速带球往前冲。时间已经所剩不多了。\n于星：\u0026quot;还在努力吗？已经分出胜负了。好，那就让我们认认真真的和你们打完这最后几秒钟吧！\u0026quot;\n日本队还是没有机会，李泽龙把泽北的球断了下来，\u0026quot;来吧！让我们完成最后一击！\u0026quot;\n由于时间已经到了尾声中国队所有的队员都向着日本队的半场冲了过去。\n李泽龙带球开始突破，泽北，森重都被成功突破。仙道已经拦在了李的面前。\n李泽龙：\u0026quot;哼，最后一次的较量了\u0026quot;\n仙道(思)：\u0026quot;最后一次...\u0026quot;\n\u0026quot;好球！！！\u0026quot;仙道在最后时刻竟然把龙首的球断到了。不过时间，时间已经没有了。而李马上追上去开始反抢了。\n仙道(思)：\u0026quot;输了...没有机会了。恩？樱木！\u0026quot;\n\u0026quot;樱木！！！\u0026quot;仙道在半场把球向着在前方的樱木扔去。刚才还没有来得及回防的樱木就站在中国队半场的罚球线那。\n\u0026quot;球..是最后一球吗？\u0026quot;\n危险，当所有人都站在原地的时候中国队的刘速正在已极快的速度向球的方向冲去。\n刘速：\u0026quot;只要他停下来接球，就没有任何时间再作调整，绝对可以破坏掉！\u0026quot;\n樱木迎着来球的方向，跑过去了。可是刘速也已经赶到了。\n刘速：\u0026quot;好，就是这个。\u0026quot;\n\u0026quot;什么！！！\u0026quot;全场都震惊了，樱木竟然没有停下来而是朝着空中的球直接跳了起来，难道是不作调整直接空中灌篮吗？？！！！\n而迟疑了一下的刘速也同时跳了起来！\n樱木：\u0026quot;进...吧！！！\u0026quot;\n刘速：\u0026quot;呀！！\u0026quot;\n(二十五)大结局----樱木花道(上) \u0026quot;嘭嘭\u0026quot;\n\u0026quot;是...篮球的声音？\u0026quot;\n哨声~~~\n\u0026quot;我终于听到声音了，刚才发生了什么？为什么只有哨声和篮球落地的声音？\u0026quot;\n\u0026quot;比赛结束，进球无效！\u0026quot;\n安静的球场终于发出了唏嘘的声音。\n\u0026quot;呀！！\u0026quot;刘速向在另一个半场的中国队队员跑去。\n\u0026quot;樱木？\u0026quot;\n\u0026quot;樱木！\u0026quot;\n樱木：\u0026quot;这是怎么回事？\u0026quot;抬头看到比分牌上醒目的76：96\u0026quot;输了？我们输了吗？\u0026quot;\n仙道：\u0026quot;樱木！刚才那个球很精彩...\u0026quot;\n仙道还没有说完，樱木花道突然抓住仙道的衣服吼道：\u0026quot;我不要听！我只想知道为什么？！！为什么我如此努力，如此拼命的打球，还要输这么多！为什么！\u0026quot;\n樱木的声音让场上和场下的所有球员感到了巨大的触动。\n大比分的失利在这一刻终于让日本队员崩塌了。场下的土屋，深津，神，坂野以及大久保终于忍不住，泪水已经侵透了他们的双眼。神呆呆的望着比分牌，紧紧的握住自己那个受伤的右手，而大久保虽然极力掩饰但是泪水还是从他的眼中落下。只有流川，让毛巾盖住了头，一言不发。\n而场上樱木大喉过后则伴着他无助的泪水此时也尽情的发泄着。而对面的仙道也是一脸的迷茫和无语。森重拍着已经痛哭的清田，而他自己的眼角也变得湿润。除了仙道和流川外还有泽北，这个日本对队的王牌只是擦拭着自己脸上的汗水。\n仙道：\u0026quot;好了，大家振作起来准备和对手致意！\u0026quot;\n于星：\u0026quot;日本队做的相当不错。很可惜...那一球，连作为对手的我都为他们的那个10号的最后一球被判无效而惋惜。\u0026quot;\n李泽龙：\u0026quot;要小心了，我们的身后不仅有韩国队了，日本队的表现已经足够优秀。其中他们队中有三个人的实力是和我们八龙几乎不分上下的。\u0026quot;\n中国队队员：\u0026quot;...\u0026quot;\n刘速(思)：\u0026quot;虽然赢了，但是刚才那个家伙的空中灌篮，简直...让我震惊！这么完美的一击我是不想破坏掉的，哼，想错了，那个球，我应该是无能为力的吧。\u0026quot;\n......\n随后两队列队致意，而全场也突然爆发出热烈的掌声。\n仙道：\u0026quot;多谢指教！\u0026quot;\n于星：\u0026quot;多谢指教！\u0026quot;\n仙道：\u0026quot;于星，在大学联赛中我们会再次见面的！\n于星：\u0026quot;明年的大学联赛我将会参加全部的比赛，我不会让冠军从我这里丢掉的。\u0026quot;\n仙道：\u0026quot;赛场上见！还有请转告李，我会在这几年的时间里全力追赶他的！\u0026quot;\n于星：\u0026quot;...\u0026quot;\n李泽龙：\u0026quot;于星，告诉日本队的7号我会等着和他下一次的较量，和日本第一球员的较量！\u0026quot;\n赤木：\u0026quot;可惜，输了，但是樱木他们也竭尽全力了。\u0026quot;\n牧：\u0026quot;是的，尽全力输球也许是一种解脱的方式，也许又是一种最无奈的方式。\u0026quot;\n崔哲铣：\u0026quot;后天的对手终究是中国队。哼，哲铭，你现在认为如果是日本队进入决赛我们真的能向你所说轻松的赢他们吗？\u0026quot;\n崔哲铭：\u0026quot;......\u0026quot;\n......\n日本队更衣室。\n北川：\u0026quot;非常不错！！虽然我们输了，但是这正好证明我们和亚洲最强者是有差距的，为了以后我们的进步这次失败意义重大，明天我们还有争夺第三名的比赛，打起精神来。小伙子们抬起头来，我们以后再来！\u0026quot;\n\u0026quot;对！我们下次再来！！\u0026quot;伴着泪水和没有消逝的对胜利的执着的信念，日本队所有成员一起发出了他们的宣言。\n樱木：\u0026quot;仙道，为什么还不走呢？大家都已经离开了。\u0026quot;\n\u0026quot;哦？是樱木？你先走吧，我有一些累，想在这里休息会。\u0026quot;\n......\n\u0026quot;...\u0026quot;\n\u0026quot;枫...\u0026quot;\n\u0026quot;对不起。\u0026quot;\n\u0026quot;咦？\u0026quot;\n流川枫看着眼前的她，\u0026quot;我没有实现诺言，对不起没有那这场比赛的胜利送给你..\u0026quot;当流川枫还没有说完这句话的时候，泪水突然夺眶而出，流川在这一刻终于也崩溃了。\n\u0026quot;枫！！！\u0026quot;紧紧的抱住了流川。\n......\n仙道把更衣室的所有的灯关掉。静静的坐在椅子上，把毛巾搭在自己的头上。\n\u0026quot;输了...真的输了...\u0026quot;一直坚强的日本队长在黑暗无人的更衣室内不在有任何的掩饰。\n而此时樱木并没有走远，因为他已经看到了带着泪痕的晴子向他走来。\n晴子：\u0026quot;樱木君...\u0026quot;\n(二十五)大结局----樱木花道(下) 三天后，日本琦玉\n亚青赛决赛由卫冕冠军对阵韩国队。中国队四龙全部在上半场出场，由于上半场大比分领先，在下半场安勇和李泽龙先后被换下，韩国队虽然在下半场拼命想把比分拉近但最终还是以10分的劣势输掉决赛。\n而中国的刘速在MVP的评选中击败了队友于星和日本队的仙道韩国队的崔哲铭成为本届大赛的最佳球员。\n最佳5人是\n 后卫：刘速(中国)，仙道彰(日本) 前锋：于星(中国)，崔哲铭(韩国) 中锋：\u0026quot;安勇\u0026quot;(中国)  樱木花道虽然没有成为最佳5人，但是凭借着后几场的出色发挥，樱木已经成为日本家喻户晓的篮球新星。而湘北队也因樱木，流川和木石成为日本顶级篮球学校。此次大赛虽然结束，但是樱木花道的篮球运动并没有停止下来。\n......\n四天后\n樱木：\u0026quot;仙道，你真的是无所谓的吗？\u0026quot;\n流川：\u0026quot;？？\u0026quot;\n仙道：\u0026quot;？？\u0026quot;\n樱木：\u0026quot;对于比赛的输赢，对于篮球。真的是无所谓的吗？\u0026quot;\n流川：\u0026quot;？？奇怪的家伙，奇怪的问题。\u0026quot;\n仙道(面带微笑)：\u0026quot;...其实...我最有所谓！\u0026quot; I\n樱木：\u0026quot;哼，可怕的家伙！\u0026quot;\n流川：\u0026quot;更奇怪的回答！\u0026quot;\n\u0026quot;狐狸，真的要去美国吗？\u0026quot;\n\u0026quot;我为什么要和你说。\u0026quot;\n\u0026quot;哈哈！你是怕在湘北我的名气盖过你了，逃到美国吧。\u0026quot;\n\u0026quot;哼！又来臭屁了。\u0026quot;\n仙道：\u0026quot;神奈川县特产...\u0026quot;\n\u0026quot;喂！流川枫！\u0026quot;\n\u0026quot;做什么？\u0026quot;\n\u0026quot;一定要回来，记住在日本有一个人等着你回来挑战你！\u0026quot;\n\u0026quot;一个等我回来挑战的人，一个我回来后要挑战的人，现在都站在我的面前呢。所以...我一定会回来！\u0026quot;\n仙道，流川，樱木彼此互相看着，眼神中流露出一种敬意和友谊。\n樱木：\u0026quot;喂，仙道，流川。来一次比赛吧，现在，我已经迫不及待了。\u0026quot;\n流川：\u0026quot;哼，不会再让你了。\u0026quot;\n仙道：\u0026quot;我们三人...之间的比赛。\u0026quot;\n......\n一年后\n\u0026quot;输了？\u0026quot;\n\u0026quot;是啊，输了。\u0026quot;\n\u0026quot;还是在半决赛上吗？\u0026quot;\n\u0026quot;是啊。\u0026quot;\n\u0026quot;筑波再次夺冠吗，那个于星真的是很厉害的吧。\u0026quot;\n\u0026quot;恩，很厉害。为什么回来了呢？\u0026quot;\n\u0026quot;...回来？回来就不再回去了。\u0026quot;\n\u0026quot;恩？\u0026quot; 。\n\u0026quot;湘北...怎么样呢？\u0026quot;\n\u0026quot;没有你和他，木石瞳能把湘北带入全国四强已经算是相当出色了。\u0026quot;\n\u0026quot;仙道，我决定回日本上大学，再在球场见面我们又将是敌人了。\u0026quot;\n\u0026quot;你在美国，但我在这里也一样在进步！\u0026quot;\n\u0026quot;不知那个家伙...如果他在会变成什么样了。\u0026quot;\n\u0026quot;一年了，对吗？去年的这个时候，如果是他的话，一定会突飞猛进吧。\u0026quot;\n\u0026quot;难道真像他所说的那样吗？\u0026quot;-----\n\u0026quot;哈哈！我是天才嘛！\u0026quot; ？\n尾声\n樱木花道在亚青赛结束后7天，在湘北训练完回家的路上意外遭遇到车祸，送入医院后不治身亡，年仅18岁。\n","link":"https://cuile.github.io/posts/slam_dunk_2/","section":"posts","tags":["灌篮高手","篮球飞人","篮球","动漫","故事"],"title":"灌篮高手大结局(全国大赛后) 下"},{"body":"","link":"https://cuile.github.io/tags/%E7%AF%AE%E7%90%83/","section":"tags","tags":null,"title":"篮球"},{"body":"","link":"https://cuile.github.io/tags/%E7%AF%AE%E7%90%83%E9%A3%9E%E4%BA%BA/","section":"tags","tags":null,"title":"篮球飞人"},{"body":"(一) 再见高中时代 湘北在全国大赛八强战中输给了爱知县的代表。海南决赛以几分的差距输给名朋工业。\n名朋工业的森重宽是当年的MVP。而由海南、湘北、翔阳、陵南组成的神奈川联队将继续征战。而联队也获得了不错的战绩(具体战绩不明)。\n第二年，湘北的赤木、目暮、三井离开高中升上大学，同样鱼住离开陵南并在父亲的餐馆中打工，翔阳的藤真为了原一次高中拿到县冠军而暂时放弃上大学。\n海南的阿牧在临走时，希望海南的教练能够把流川枫和樱木挖来并以奖学金诱惑。遭到樱木和流川枫的拒绝。阿牧以已经发现流川枫和樱木的成长将成为海南称霸的最大的威胁。并在暑假向神宗一郎传授技艺，以对付日益强大的湘北。\n(二) 新的开始 由于湘北出色的战绩，以及樱木的个人魅力，在第二年报名湘北篮球社的人有很多，其中一个竟然是外县的初中MVP----木石瞳，另外一个则是藤真健次的弟弟---藤真明次。\n木石瞳身高199，身体柔韧性极佳，但天生身体体质缺陷(自幼多病并且有很严重的肺病)，他之所以来湘北则是向往着可以和樱木、流川一起打球。木石瞳的特点就是一个至柔的中锋(奥拉朱旺型的)。\n明次则是不愿意在哥哥的光环下生存，明次的特点是中投和三分很准，但缺点则是不会上篮。(宫城曾教他，但没有学会，藤真健次曾说我原来教了他100遍他也不会)。\n另外由于陵南的越野也离开了球队，球队的控球后卫则是彦一，陵南的整体实力有很大的下降。海南依旧保持着很好的球员，新的高一也有一名很出色的中锋(具体名字不祥)。\n县大赛开始了，在新队长宫城的率领下。湘北一路大胜对手，杀到最后的四强战。樱木依然得分不多，但抢篮板的能力变的超强，流川依旧是最佳的得分手，木石瞳一般只能上半场球，明次高命中率的中远投使他成为湘北第二得分手。\n期间，湘北高一和高二高三联队进行练习赛，樱木由于知道木石瞳有病，并没有尽力和他对抗，而流川则在木石瞳面前带球、过人、投球、灌篮。樱木是保护木石瞳，流川则是激励木石瞳。致使木石瞳对篮球有了一个新的认识。(原来木石瞳打篮球只是用一种让自己死的更快的方式而已)。\n海南、翔阳也都轻松的杀入最后的四强。陵南由于控球后卫越野和原来的高大中锋鱼住的离队致使实力明显下降，只是由于仙道一个人的力量艰难杀入4强。(这里说一下续集中的仙道章实力比原作中的更上一层，只是周围再也没有能和他配合的人，包括福田都说：\u0026quot;仙道的水平已经不是一个神奈川县可以容的下的了)\n这样四强聚齐，新的一轮的大战即将开始......\n(三) 球场上没有兄弟，只有对手 第一战湘北vs翔阳。\n木石瞳的肺病突发，致使湘北没有一个真正的中锋，中锋的位置由樱木代替。里面有两个看点，由于阿牧的离开，神奈川县的第一控球后卫的争夺就在宫城和藤真健次之间展开。宫城被藤真健次很好的牵制住，而且藤真健次的组织使翔阳队控制了场上的主动，由于樱木对中锋的位置很陌生，这点被藤真抓住，多次打樱木成功。\n由于藤真健次出色的组织致使流川枫再进攻上受到围攻，湘北上半场处于落后的局面。藤真健次全面压倒宫城和流川枫。下半场，藤真健次依然希望用自己防住宫城，而用联防遏制流川，用强攻打樱木(樱木犯规多次)。\n但是英雄出现了，这也就是本场比赛第二个看点，也是翔阳致命的一大失误。那就是藤真明次的中投开始发威了..\n由于健次负责盯宫城，而又需要对流川枫进行2个人的联防，致使弟弟明次在下半场突然爆发。下半场一人中投得到20多分，虽然哥哥健次在后来发现了这个翔阳的弱点，但由于当时湘北流川和樱木的成熟，翔阳的其他人已经无法阻挡他们两个人了。\n最后靠着藤真明次的出色发挥湘北大翻盘。\n宫城对藤真说：\u0026quot;你是神奈川第一控球后卫。\u0026quot;\n藤真健次：\u0026quot;你们赢得了胜利，神奈川以后是你们的了。\u0026quot;(目光凝视着在宫城旁边的弟弟)\n(四) 别了！仙道章 第二战陵南vs海南。\n喜欢仙道的人们，看完了会有一种欲哭无泪的感觉。海南所有的人都防不住仙道的突破，所有的人都猜不透他的传球。但最终结果是海南赢陵南20多分。赛后陵南的人想起了鱼住。彦一则想到了越野。\n清田：\u0026quot;陵南已不是原来的陵南了。\u0026quot;\n神宗一郎：\u0026quot;仙道也不是原来的仙道。\u0026quot;\n清田：\u0026quot;陵南输就输在，陵南没有一个人可以跟的上仙道的步伐了。\u0026quot;\n神宗一郎(低头沉思)：\u0026quot;神奈川还有跟的上仙道的人吗？清田？我？藤真？似乎都不行，也许只有流川枫了。不流川还是和仙道有差距的，也许只有阿牧能吧.....\u0026quot;\n之后湘北遭遇陵南，陵南的悲剧第二次上演。上半场依靠木石瞳和流川的得分使得湘北领先，但福田给樱木造成不小的困难。\n由于受到翔阳失败的启发，明次被陵南完全封死。但仙道为了球队的整体，回避了和流川的对决。仙道和流川的对决是在下半场开始的，流川几次的故意找仙道挑衅，终于仙道开始了回应。同样福田也几次挑衅樱木。樱木也开始了爆发。(樱木竟然握着仙道的手说：\u0026quot;咱们一起打败他们！\u0026quot;)\n仙道的传球实在是诡谲，并且仙道总是在别人认为传球的时候突破，认为投球的时候传球，流川和仙道的对决中处于全面下风，最后改由木石瞳加宫城盯防仙道，利用木石瞳的身高和宫城的速度来限制仙道。\n福田和樱木的对决，樱木抢断了福田的那种背后运球。并且灌篮得分。最后陵南再次输给了湘北，从而2战全败提前出局。\n仙道(依然没痛苦)：\u0026quot;流川，你又变强了。\u0026quot;\n流川枫(脸色阴暗)：\u0026quot;离你的距离还远着呢\u0026quot;。\n(五) 神宗一郎MVP 由于翔阳再接下面的比赛中惜败于海南，这样海南和湘北已经提前出现，陵南和翔阳则遭到淘汰。之后翔阳赢陵南(藤真、福田、仙道均没有上场)。这样海南和湘北争夺冠军。对于湘北来说这是一场复仇的比赛，对于海南来说他们要维持自己在神奈川的王者之气。\n正如阿牧所说：\u0026quot;能进入海南的都是强者，他们不能因为上届的优秀队员的离开，而变得懦弱，他们只有一个目标无敌于神奈川，称霸于全国。\u0026quot;\n虽然两队已经提前出现，但无论是湘北还是海南都要全力赢得这场比赛。湘北为了赤木的心愿击败强者海南。海南则是为了他们历史赋予他们的荣誉。\n这场比赛刚一开始湘北的士气很高，流川也不独，为了胜利他也开始传球，樱木和对方的2名高大队员挣强，木石瞳带伤上场。最重要的是神宗一郎的三分球使海南超过湘北，但是藤真明次马上就换以颜色(藤真健次来到现场为弟弟加油)，这极大的鼓舞了士气，明次也让人们看到了三井的影子。\n当所有的一切开始向着湘北有利的情况发展的时候，海南的队长神宗一郎突然使出了强行突破的技术，这让所有的人感到惊讶。由于阿牧敏锐的觉察到，现在的湘北已经具有超越海南的潜质，并且高砂和自己的离队会使海南失去身体优势，而作为一个中锋神宗一郎总是在外线投球，为了能和以后的中锋对抗，并加强海南内线的实力，阿牧在暑假给神宗一郎进行了秘密的身体特训。\n这样由于阿神突然使出这一绝招导致湘北极其被动，阿神的突破或者三分远投让湘北很不适应，再大比分领先的情况下，被神宗一郎还有阿牧的潜在精神所击败，随着阿神最后的一个三分球中的，海南也以3分的优势击败湘北。\n这样由神宗一郎带领着的海南完成了神奈川县15连冠的霸业，且阿神即去年获得得分手后，今年再次蝉联，并毫无争议的获得县大赛MVP。\n最佳5人：\n 神宗一郎(海南) 清田信长(海南) 流川枫(湘北) 藤真健次(翔阳) 仙道章(陵南)  最佳新人：\n 藤真明次(湘北)  (六) A档，C档？ 神奈川县的代表是海南和湘北，其他各县的代表也相继决出。\n由于名朋工业作为卫冕冠军不用参加县大赛，爱知县的首席代表是去年击败湘北的爱和学院。\n秋叶县的首席代表是维南，大阪的首席代表是大荣学院......\n由于要对所有参赛的队伍划分档次，上届的前八名的队伍除湘北之外均被化为A档，而没有进入去年前八的山王则也被列为了A档。樱木和宫城对此忿忿不平，流川一脸的无所谓，藤真明次则是向A档球队发出了必胜宣言，木石瞳一直考虑着自己的身体状态。这样湘北则在第一场比赛中遇到去年曾经战胜过的静冈县的代表B档的Toyotama(丰玉高中)。\n海南，山王等A档球队首轮轮空。\n(七) 丰玉vs湘北 去年，丰玉的南烈用卑劣的手段偷袭了湘北的王牌---流川枫。但流川可怕的用一只眼睛，同样击败了南烈和丰玉高中。今年虽然三年级的队长岸本实理离队，但丰玉以南烈为核心建立起来的新球队号称近10年最强的丰玉高中。\n流川，藤真明次上半场发挥很好频频得分。但丰玉依靠整体的逼抢和不惜体力的跑动，一直把比分咬的很紧。\n下半场，两队的体力出现了明显的差距，由于上半场的过于活跃，藤真和流川体力开始下降。而丰玉全队依旧保持了惊人的耐力和体力，丰玉的计划开始实施，由上半场的防守转为进攻，樱木的压力徒然上升，宫城也在对方的紧逼下出现了失误，丰玉开始拉紧比分。\n时间剩下不多的时候湘北仅仅领先丰玉2分，这时木石瞳利用他至柔的打法，造成丰玉中锋连续犯规，并罚球得分。随后藤真的三分不中被木石瞳抢下栏板补篮命中，双方的分数再次拉大，最后时刻流川枫接到樱木花道的意外失误传球(樱木本打算是传给藤真)，巧妙突破分球(仙道的感觉)木石瞳篮下扣篮得手。\n最后湘北以10分的优势战胜丰玉。南烈再次感到流川身上透露出来的王牌气息，并且为樱木快速成熟感到惊讶。\n南烈：\u0026quot;湘北的实力足以进入四强，甚至决赛。\u0026quot;\n而下一战等待湘北的则是去年的冠军---名朋工业\n(八) 藤真的选择 2年前，丰玉vs翔阳的上半场，藤真明次亲眼目睹了哥哥健次被丰玉的南烈肘击下场。之后的下半场缺少主将的翔阳一败涂地。\n明次：\u0026quot;我发誓，丰玉，我要身穿翔阳的绿色战袍把今天的一切还给你们。\u0026quot;\n一年后，\u0026quot;什么！！！湘北战胜了山王，闯进8强！这...流川枫，还有那个红头发的。看来哥哥输给他们不是偶然了。\u0026quot;\n\u0026quot;哥哥，听说湘北赢了\u0026quot;\n\u0026quot;......湘北真是不可思议\u0026quot;\n明次(沉思)：\u0026quot;哥哥，马上就要离开翔阳了，不会再有机会带领翔阳参加全国大赛了\u0026quot;\n\u0026quot;明次！\u0026quot;\n\u0026quot;恩..\u0026quot;\n\u0026quot;想不想，参加全国大赛！\u0026quot;\n\u0026quot;恩！ 当然，我会努力成为翔阳队的一员，击败海南参加全国大赛！\u0026quot;\n\u0026quot;想不想和哥哥一起参加呢？\u0026quot;\n\u0026quot;什么！！哥，你不是今年就要毕业了吗。\u0026quot;\n\u0026quot;是啊，已经有大学向我发出了邀请了。不过我不想让这个遗憾带入大学。\u0026quot;\n\u0026quot;......难道是.......\u0026quot;\n\u0026quot;击败海南，并且在全国大赛上夺取好的成绩。\u0026quot;\n\u0026quot;没有想到哥哥竟然会这样的执着，为了击败海南而选择放弃大学吗？\u0026quot;\n......\n\u0026quot;明次，你怎么来了\u0026quot;\n\u0026quot;哥哥，我来是为了告诉你一件事的\u0026quot;\n\u0026quot;哦？\u0026quot;\n\u0026quot;我已经选择加入了湘北高中。\u0026quot;\n\u0026quot;什么，湘北？为什么？\u0026quot; `\n\u0026quot;成为翔阳的一员一直是我的梦想，穿上那绿色的战袍，在球场上驰骋。哥哥，你从小就是我的偶像，能和你一起为翔阳打球也是我的一个不敢奢望的愿望，但是当这个愿望快要变成现实的时候.....\u0026quot;\n\u0026quot;......怎么了明次。\u0026quot;\n\u0026quot;我突然发现，我自己需要独立，我不要在哥哥你-----藤真健次的光环下生活着。我要穿上湘北的红色球衣，以藤真明次的身份战胜翔阳，战胜你----藤真健次！我的哥哥！\u0026quot;\n\u0026quot;好的，明次。真是有些男子汉的味道了。好吧，那就在县大赛上我们一绝高下吧\u0026quot;\n......\n\u0026quot;喂！！那个不会上篮的家伙！\u0026quot;\n\u0026quot;是，樱木学长。\u0026quot;\n\u0026quot;快点了，比赛马上就要开始了，你还在这发什么呆啊\u0026quot;\n\u0026quot;哦，知道了，樱木学长\u0026quot;(看着自己印有shohoku的14号球服)\u0026quot;哥哥，你在看着吗......好的，来吧名朋工业！\u0026quot;\n(九) 湘北危机 湘北在八强战中再次遭遇卫冕冠军，樱木面对去年曾把他撞倒的森重宽内心充满了前所未有的兴奋。\n樱木：\u0026quot;大个子，我可不管什么卫冕冠军，什么MVP的，总之今天一定要让你们名朋工业滚回札幌。\u0026quot;\n宫城(汗~~)：\u0026quot;名朋工业是爱知县的，樱木不要在这里耍宝了。\u0026quot;\n而流川似乎发现了有一双眼睛在盯着他。由于森重宽是203cm的身高，整整比木石瞳高了5cm，这对只能上半场球的木石来说是最大的考验。相对来说名朋工业的得分后卫对于藤真明次的压力比较小。\n比赛开始后，为了缓解木石的防守压力，由樱木盯防森重宽，木石负责盯防名朋的大前锋高木，但是湘北低估了森重宽的冲击力，樱木被森重宽压制住，防守非常困难。\n名朋围绕着森重宽频频从湘北内线得分。由于赤木这样强力中锋的离队，导致湘北在和森重宽的对抗下处于极度下风，只是依靠着流川的个人能力得分。安西教练也看出虽然两个队伍都主要只靠着一名队员得分，但是森重宽的内线得分，要远远轻松于流川的得分。不得已，安西安排木石瞳(用湘北最高的也是唯一一个中锋)盯防森重宽。\n安西的计策果然奏效，木石瞳的卡位十分到位，森重宽进不去内线，而高木的身体素质不及樱木这样只能靠外线得分的名朋工业，由于已经习惯内线得分的名朋，在这种不熟悉的打法下被湘北连续追分。而宫城和流川，藤真的配合凸现威力。而木石瞳盯防森重宽之后没有让他得到一分(木石同样没有得分)，暴怒的森重宽在一次进攻中带球撞人，被判犯规，而木石瞳却因为这次犯规受伤下场。\n不得已安西只能换安田上场，这样刚刚好转的湘北面临着没有中锋的危机，而他们的对手则是拥有着号称日本最强中锋的森重宽。\n在上半场还没有打完的情况下，落后12分，木石瞳受伤下场。湘北遭遇到最大危机。\n(十) 流川枫大爆发！ 木石瞳的下场，给了名朋工业再次扩大比分的机会，这样再次由樱木盯防森重宽，安田改打得分后卫(其主要任务是防守)，藤真位置前移。\n湘北只有藤真和流川能够有能力再进攻，其他人的重心全部放到防守上。樱木虽然很努力，但森重宽给他的压力让他难以呼吸。而藤真作为一个投手，并且不会突破上篮，现在被名朋的人死死防住，所投几次的三分均因对方严密的防守而仓促出手不进。湘北唯一能够进攻的人就只剩下流川一个人。\n上半场结束分差已经拉到18分。\n下半场，名朋依然采取冻结湘北投手藤真的战术，但流川面对高木的防守开始了反攻，再一次强攻得手并加罚，使湘北的士气大振。随后接宫城的传球中投得手，马上名朋的高木利用森重宽的掩护上篮得分，并走到流川枫面前挑衅：\u0026quot;你得2分，我就得4分\u0026quot;\n流川枫面无表情，之后开始了他疯狂的表演。\n\u0026quot;教练！让我上吧，如果我们能把比分追到10分以内还有希望。\u0026quot;\n\u0026quot;木石，我知道你现在的心情，但是现在还没有到冒险让你上的地步\u0026quot;\n\u0026quot;.......\u0026quot;\n\u0026quot;你等着，等到我们追到10分以内就是你出场的时候。\u0026quot;\n安西教练随后，流川开始展现他王牌的力量了，在宫城成功抢断之后，流川用假动作晃过高木，在名朋两名队员的夹防下成功上篮，并加罚得分。\n\u0026quot;12分！\u0026quot;\n\u0026quot;10分！！\u0026quot;\n\u0026quot;7分！！！\u0026quot;\n随着流川枫的一个三分球，湘北在下半场的中段终于将比分缩小到10分以内。更不可思意的是下半场开始到现在，流川枫包办了湘北所有的得分28分，加上上半场的8分共计36分他已经超过森重宽的34分。\n安西：\u0026quot;木石！你的身体有问题吗？\u0026quot;\n木石瞳：\u0026quot;教练，我已经等了好久了。\u0026quot;\n名朋工业教练(姓名不祥)：\u0026quot;大久保，不好意思本来要等到后面才用你的。\u0026quot;\n\u0026quot;湘北很强......不过让我来击碎他们吧\u0026quot;\n安西对木石，名朋工业教练对大久保：\u0026quot;这场比赛的胜负手就是你了！\u0026quot;\n(十一) 爱知之星----大久保龙人 大久保龙人\n 身高：185cm 体重：76kg 位置：任何位置 球衣号码：13  \u0026quot;宽，在篮下等着，你的任务就是一个----得分！\u0026quot;\n森重宽：\u0026quot;......\u0026quot;\n\u0026quot;岩奇，我来打控球\u0026quot;\n\u0026quot;是。\u0026quot;\n湘北这边，\u0026quot;学长，森重宽就交给我了。\u0026quot;\n\u0026quot;太感谢你了，小瞳！ \u0026quot;\n这样双方在下半场都作出了换人调整。大久保上来之后，名朋在他的组织下再次展开了攻势。藤真被对方冻结，流川遇到了大久保的密不透风式的防守，加上体力的下降防守和进攻都已经变得吃力了。好在木石瞳的上场，为湘北增加了进攻的机会。\n大久保上场之后，并没有得分而是不停的为队友创造得分，成为湘北最大的威胁。大久保诡谲的传球，充分调动了名朋所有队员，同时耗费了湘北的体力。宫城几次被他的传球欺骗，流川则想起了仙道。\n但木石在和森重宽的对抗下处于上风，内线成为双方争夺的焦点。森重宽虽然在进攻中依然给湘北造成了极大的威胁，但面对木石瞳的进攻，森重宽非常不适，并且3次防守犯规。这样不得已，名朋换下森重宽，木石瞳成为湘北主要得分手。\n由于森重宽的下场木石瞳成为湘北主要得分手。而在大久保龙人的组织下，原来只是森重宽一个人的名朋工业，发挥出原先没有的集体力量，依然保持着对湘北的2分优势。\n比赛的最后，樱木抢到篮板球，灌篮得分。\n而龙人的传球，被自己队员浪费。\n宫城发动快速反击，上篮得分。\n这样在比赛还有一分钟结束的时候，湘北反超2分。\n森重宽再次上场，湘北全力防守。\n大久保龙人，甩开宫城的紧逼，同样假动作骗过流川枫，直突到内线。\n宫城：\u0026quot;小心，他传给篮下的森重宽！\u0026quot;木石瞳紧贴着森重宽。\n大久保假装传球突然急停起跳。\n木石瞳惊道：\u0026quot;是上篮。\u0026quot;\n\u0026quot;拦住他，看我的\u0026quot;樱木大喊一声。他和木石瞳同时跳起封堵大久保。\n\u0026quot;什么！！！\u0026quot;\n大久保在空中突然把球传给了篮下的森重宽，森重宽在无人盯防的情况下灌篮得分。\n双方平分。\n\u0026quot;还没有结束呢！\u0026quot;宫城快速带球，但除了森重宽以外，名朋所有的人都已经快速回防。宫城没有任何机会，突然宫城看到藤真明次闪出了一丝空间。\n\u0026quot;流川！\u0026quot;宫城喊道，随之把球传了出去。球并没有到流川的手里，而是传给了藤真，在名朋防守队员犹豫的瞬间，藤真明次不作任何调整投中了本场比赛他的最为重要的一球。\n湘北欢呼了。\n比赛还有不到10秒的时间湘北领先2分。\n名朋请求暂停。\n暂停之后，名朋的森重宽，高木奋力挤到湘北的内线，樱木，流川，木石瞳负责盯防内线。宫城和藤真紧逼名朋外线。大久保控球被宫城阻截，时间在一点一点减少，湘北的胜利也慢慢出现在眼前。\n突然，大久保加速闪过宫城，藤真马上补防。在藤真面前大久保没有作任何假动作突然起跳，而流川，樱木，木石均不敢跳起封堵，而是紧紧的看防着名朋的中锋。\n\u0026quot;刷！\u0026quot;一声清脆的篮网声，大久保龙人在最后2秒钟将湘北的胜利之梦击碎。\n并且把双方将带入了10分钟的加时赛！\n(十二) 天蓝色的瞳 \u0026quot;木石。还能行吗\u0026quot;\n\u0026quot;还行。\u0026quot;\n\u0026quot;再坚持一下。我们就要胜利了。\u0026quot;\n哨声。武田中学在千叶县的决赛中击败赤诚国中，获得冠军。\n\u0026quot;最佳选手(MVP)是武田的----木石瞳。\u0026quot;\n......\n\u0026quot;木石！\u0026quot;\n\u0026quot;菊地？\u0026quot;\n\u0026quot;请木石君，不要再打篮球了。你的身体...\u0026quot;\n\u0026quot;就是因为我的身体，我才打篮球的。\u0026quot;\n\u0026quot;恩？..\u0026quot;\n\u0026quot;医生告诉我，我的身体不能剧烈运动超过半个小时。\u0026quot;\n\u0026quot;木石！那就不要再打篮球了！为什么不听医生的叮嘱啊！？\u0026quot;\n\u0026quot;我就是按照医生所说的相反的做。\u0026quot;\n\u0026quot;这又是为什么呢？\u0026quot;\n\u0026quot;没有什么为什么，我只是找到了一种让自己死的更快的方式而已。\u0026quot;\n\u0026quot;啊！......\u0026quot;\n\u0026quot;好了，我已经决定离开千叶，再见吧。\u0026quot;\n\u0026quot;等一下，瞳...木石君，\u0026quot;\n菊地：\u0026quot;这个，是我自己做的送给你！还有，好好的活下去，有人在牵挂着你。\u0026quot;\n木石：\u0026quot;菊地....\u0026quot;(看着一个蓝色的毛巾，上面绣有一个大大的瞳字，还有木石瞳球衣的号码4号)\n......\n\u0026quot;什么先天性肺炎！，这个孩子真是可怜啊。\u0026quot;\n\u0026quot;能活下来就已经不错了。\u0026quot;\n\u0026quot;那孩子和他妈妈一样可怜啊。\u0026quot;\n\u0026quot;好好的在美国呆着多好，为什么会嫁给一个日本人呢\u0026quot;\n\u0026quot;可怜的人...听说了吗，那个孩子和她妈妈一样，都是蓝色的眼睛啊。\u0026quot;\n15年后。\n\u0026quot;真是一个讽刺啊。\u0026quot;\n\u0026quot;怎么了冈本？\u0026quot;\n\u0026quot;那个病鬼，竟然在国中就长到了190公分，还成为篮球社的，真是气死我了。\u0026quot;\n\u0026quot;哈哈，你没有看到他的那个样子吗？恐怕活不到30岁啊！\u0026quot;\n\u0026quot;哈哈.....\u0026quot;\n菊地艾妮：\u0026quot;木石君.....\u0026quot;\n......\n\u0026quot;我想进入湘北篮球队。\u0026quot;\n\u0026quot;不错啊，你是千叶县的mvp，为什么会到神奈川了\u0026quot;\n\u0026quot;我看过湘北队和山王的比赛，我想和流川，樱木一起征战全国大赛。\u0026quot;\n\u0026quot;呵呵呵呵....宫城。\u0026quot;\n\u0026quot;是，安西教练。\u0026quot;\n\u0026quot;去拿湘北的4号球衣给他。\u0026quot;\n(十三) 那一投，最后的胜负手。 高木：\u0026quot;好的，大久保！\u0026quot;\n名朋教练：\u0026quot;好悬~~没想到湘北这么强。\u0026quot;\n森重宽：\u0026quot;......\u0026quot;\n名朋教练：\u0026quot;宽，加时赛你要上场，不能轻易的犯规了。\u0026quot; (深思) \u0026quot;湘北的4号还真是强啊。\u0026quot;\n森重宽：\u0026quot;...他很强啊\u0026quot;\n\u0026quot;不用担心\u0026quot;大久保拍着森重宽，\u0026quot;你也很强，而且你没有看出他已经筋疲力尽了吗。\u0026quot;\n大久保：\u0026quot;总之，不要在想着我们是卫冕冠军，现在击败湘北才是我们最大的目标！\u0026quot;\n......\n\u0026quot;大家打的很好啊\u0026quot;安西教练。\n宫城：\u0026quot;不好意思，是我没有防住他们的13号。\u0026quot;\n樱木：\u0026quot;可恶！喂，死狐狸，你就在那站着眼睁睁着看着那个家伙投篮吗？\u0026quot;\n流川：\u0026quot;你当时在作什么呢？白痴。\u0026quot;\n木石瞳(沉思)：\u0026quot;还能坚持多久呢，哼，似乎已经是尽头了吧，真是不想勉强自己，不过能有几次勉强自己的时候呢？输和赢都已经拼到这个地步了，那就要赢。\u0026quot;\n藤真(沉思)：\u0026quot;换做哥哥，当时会怎么样呢？\u0026quot; 笑 \u0026quot;我想也许也是会被骗到的吧。\u0026quot;\n......\n加时赛开始。\n由于双方的防守非常严密，开始2分钟内都没有得分。\n宫城：\u0026quot;流川，盯住13号。\u0026quot;\n大久保(思)：\u0026quot;湘北的王牌，先把他的信心击垮。\u0026quot;\n大久保带球，突破流川，流川防守，突然大久保传球到宫城的身后，岩奇接球上篮得分。\n湘北落后两分，随后木石瞳马上接藤真的传球单挑森重宽得手。\n随后，由于流川的体力下降，而大久保隐蔽的传球和突然的突破，以及突破之后的再次传球或者投篮，让湘北防不胜防。流川也已多次被骗，明显跟不上大久保龙人。这边森重宽也利用其比木石瞳更加强壮的身体和充裕的体力，接队友的传球强打成功。这样名朋有4分的优势。\n木石(思)：不行，这样会输的，一定要强攻啊 \u0026quot;队长，一会把球交给我。\u0026quot;\n宫城：\u0026quot;....好的，就看你了。\u0026quot;\n大久保(思)：对方的投手14号已经被完全顶死，那个王牌看来已经失去作用了，只要宽能和那个4号缠到一起，这场比赛就没有悬念了，局势对我们很有利啊。\n木石瞳在禁区附近倚着森重宽，接到宫城的传球。\n\u0026quot;可恶，根本就挤不进去啊，只有这样了。\u0026quot;木石背对森重宽转身后仰投球，球进！\n森重宽(怒)：\u0026quot;....\u0026quot;\n岩奇：\u0026quot;别在意，这一球。\u0026quot;\n\u0026quot;防守啊！\u0026quot;\n\u0026quot;是上篮吗？\u0026quot;\n\u0026quot;不对，又是传球。\u0026quot;\n大久保再次骗过湘北队员，将球传给名朋队员，可惜球偏出，木石瞳力压森重宽把球打出，但球却再次被大久保拿到，大久保突入禁区，木石瞳赶紧倚住森重宽，流川从后面封堵，大久保做投篮动作，樱木跳起封堵。\n\u0026quot;嘭！\u0026quot;大久保突然用了一个砸地传球，传给了已经无人盯防的高木，高木轻松射篮得分。\n流川：\u0026quot;哼，已经到极限了，否则绝对不会让他这么轻松的骗过。\u0026quot;\n高木：\u0026quot;好球，大久保。\u0026quot;\n宫城：\u0026quot;不要急，再来。\u0026quot;\n樱木：\u0026quot;太可恶了，太可恶了，我又一次被他耍了。\u0026quot;\n藤真：\u0026quot;不要放在心上学长，被骗的又不是你一个人。\u0026quot;\n木石瞳(思)：很难熬啊，我想我快死了吗？也许这是死前最后的挣扎吧。\n宫城(思)：混蛋，流川看来已经很吃力了，藤真又被盯死，樱木~~~我还是对他不太放心。木石他在要球，好就看你的了\n木石瞳接到宫城传球，再次准备后仰射篮。\n森重宽：\u0026quot;不会让你再来的！\u0026quot;\n森重宽跳起封堵木石瞳，两人都摔到地上。\n木石瞳(思)：还活着吗？好像是的。\n\u0026quot;犯规！\u0026quot;\u0026quot;名朋工业15号球员5次犯规下场！\u0026quot;\n\u0026quot;什么！！！！！\u0026quot;\n就这样，上届MVP森重宽在加时赛还有5分钟的时候，因犯规5次离场。木石瞳虽然这一投不中，但确实成为胜负的一个关键。虽然落后4分但湘北迎来了契机。\n(十四) 木石瞳：完美谢幕; 大久保：虽败尤荣！ \u0026quot;木石。你还好吧。\u0026quot;\n\u0026quot;进了吗？\u0026quot;\n\u0026quot;没有，没事还有罚球呢？\u0026quot;藤真。\n木石瞳站了起来，将2歌罚球罚进。\n流川(思)：还有一球的劣势....\n大久保(思)：还有5分钟，我们的优势荡然无存了，宽的下场损失的不止是得分啊，那个10号的篮板球可是很头痛的。怎么办？....\n樱木：\u0026quot;哼，小宫。\u0026quot;\n宫城：\u0026quot;要叫队长！\u0026quot;\n樱木：\u0026quot;一鼓作气，就是现在，消灭他们吧。\u0026quot;\n宫城：\u0026quot;好的，该我们反攻了。\u0026quot;\n名朋进攻，流川紧盯大久保，大久保没有什么机会，只能把球传给其他人，而内线的高木得到球之后在上篮的时候被樱木封盖得手，球快速的传给宫城。\n大久保：\u0026quot;防住他！\u0026quot;\n宫城同样用一个上篮的假动作骗过防守队员，球传给了前面的流川，流川交叉步(曾经对仙道用过的那招)起跳射篮，大久保没有封到这个球。\n\u0026quot;刷~~~\u0026quot;\n湘北和名朋平分。而流川也投进了他了加时赛的第一球。\n名朋再次组织进攻，可惜大久保的传球再次被其他队员浪费，樱木花道再次抢到篮板球，这样湘北在后面进行的两次进攻中全部打成(均为木石和花道的内线扣篮得分)。而缺少了森重宽的名朋，虽然有大久保出色的组织，但其他人被湘北牢牢盯死，由于替补中锋和大前锋高木均不是樱木的对手，两次投篮不进的篮板球都由湘北得到。\n这样湘北领先4分，随后木石瞳顽强的破坏掉了大久保传给高木的球，宫城快攻传给藤真，藤真射篮不中，流川和樱木花道同时跳起补篮，球进但裁判将此进球判做流川所进。这引起花道的不满。\n\u0026quot;喂，裁判，那个11号已经得了38分了啊，我只有可怜的6分啊，这个球就算到我的头上吧~~\u0026quot;\n比赛还剩最后一分钟，湘北的领先优势已经扩大到6分。\n但是木石瞳由于身体已到极限，被樱木和流川搀扶下场。而木石瞳也完美的完成了本场比赛。\n大久保还在努力的控球，但是湘北的全力防守让大久保没有很好的机会传球，突然大久保在三分线上作出投球的动作，流川犹豫了瞬间还是跳起封堵，而大久保的角度完全被封死，但是他还是在空中顽强的将球传给岩奇，岩奇晃开刚上场的安田，三分命中。比赛的空气再次紧张起来。\n但是现在湘北控球，名朋全场紧逼。同样湘北也没有任何的机会，但是时间的流失使得名朋越来越处于被动。而藤真再传给流川的时候被名朋抢断，名朋迅速发起进攻。宫城、安田、樱木还有筋疲力尽的流川迅速回防。名朋的岩奇再次接到大久保的假装突破后的传球，远投3分，可惜球打在篮筐上。球幸运的落到高木手中，高木勉强把球传给外面的大久保龙人。\n还剩下不到5秒钟的时间，大久保再次得球，而名朋的队员出2个内线外，其余3名队员都站在3分线外，大久保再次作出投篮动作。\n流川(思)：没错，这次一定是他自己来。\n流川刚要跳起封堵，突然感觉大久保双手放下，作出了向旁边传球的动作。在流川向旁边的名朋队员看的一瞬间，大久保突然在3分线上起跳射篮，而在流川的身后，樱木突然的跳起，球轻轻的碰了一下樱木的指尖，但是球还是飞向了篮框，不过最后砸在篮框前沿。当球砸在球框的同时裁判也吹响了本场比赛结束的哨音。\n经过加时赛的苦战，湘北最终以87：84，战胜上届冠军名朋工业。\n......\n大久保(很冷静13分，10次助攻)：\u0026quot;没关系！明年我们再来！\u0026quot;\n森重宽(44分12个栏板)：\u0026quot;......对不起...大家\u0026quot;\n高木，岩奇(流泪)....\n......\n藤真(10分，三分球2)：\u0026quot;樱木学长，你是怎么判断出来他是投篮，而不是传球的啊\u0026quot;\n樱木(6分，17个栏板)：\u0026quot;哈哈哈哈，我是天才嘛，其实很简单，名朋别的人都不如这个家伙厉害，所以这一球绝对是他投，若是他传球给别人，球进的话我也没有办法了啊！可是这次他被我看穿\u0026quot;\n流川(40分)：\u0026quot;还不是蒙的.....\u0026quot;\n宫城(8分)：\u0026quot;安西教练，木石，彩子我们赢了！！！！\u0026quot;\n木石(23分)：\u0026quot;赢了，还是赢了....\u0026quot;\n因为樱木花道最后时刻的封堵，湘北终于艰难战胜名朋工业。\n历史上第一次闯入全国大赛4强。\n(十五) 四强产生！ 在湘北获胜的同时，来自大阪县的代表大荣学院以85：79，战胜了和歌山的楠义，这样大荣学院成为5年来首次进入4强的大阪县代表。\n而之后，海南和爱和已经打到比赛的下半场，双方平分。\n由于双方都是连续2年打进全国大赛4强的超强球队，所以比赛十分激烈，随着比赛的进行，双方比分交替领先。但在关键的时候神宗一郎显示出射手本色，接连命中2个3分。爱和学院虽然同样射篮得分，但是双方差距仍为2分。\n最后时刻，清田顽强的突破得分致使海南在最后阶段领先4分，随着清田的一声大吼，海南成功防守住了爱和最后的一次进攻，最终击败劲敌爱和学院，晋级4强。\n这样去年进入4强的两支爱知县的代表------爱和学院和名朋工业，分别被神奈川县的海南和湘北所淘汰。\n静冈县-----县立体育馆\n正在进行的是最后一场四分之一比赛。\n常诚(静冈)vs山王(秋田)。\n由于这次全国大赛是在静冈县举行，所以常诚中学依靠着观众的声援一直打到了8强，并且力争拿到这次冠军。不过他们面对的是站立于日本高校篮球界顶峰的秋田县代表---山王工业。\n虽然常诚打的很努力，但是面对由“王牌泽北荣治、今年秋田县国中的MVP一本道海斗、此次大赛第一高度河田美纪男、新的进攻组织者莜原刚、以及队长深津一成(在去年已经是3年级的他，不知为什么会留下来)”组成的山王队，还是以85：100输掉了比赛。\n这样全国大赛的4强全部产生，他们是：\n 大荣学院(大阪) 山王重工(秋田) 海南(神奈川) 湘北(神奈川)  具体的对阵形势：\n          海南  湘北   vs 决赛 vs   大荣  山王    (十六) 仙道的礼物 安田：\u0026quot;今年的山王还是很强啊。\u0026quot;\n宫城：\u0026quot;是啊，不过这次再看到山王的比赛，已经没有上次那么窒息了。\u0026quot;\n宫城：\u0026quot;就我们两个人来观察对手吗！\u0026quot;\n安田：\u0026quot;藤真去看海南的比赛了，流川枫应该在体育馆里，木石瞳还在医院。\u0026quot;\n宫城：\u0026quot;樱木那小子呢？\u0026quot;\n\u0026quot;他说有事，和安西教练请假回神奈川了\u0026quot;\n宫城：\u0026quot; 彩子！！\u0026quot;\n安田：\u0026quot;是学姐，你怎么来了。\u0026quot;\n....\n静冈---神奈川的新干线\n樱木(回忆)\n安西：\u0026quot;樱木真是多谢你了。\u0026quot;\n樱木：\u0026quot;哈哈，老爹你就放心吧，有我樱木花道在，湘北一定能赢。\u0026quot;\n安西：\u0026quot;恩....刚才我已经询问过木石了，他的身体已经到了极限，下场比赛很难出场了。\u0026quot;\n樱木：\u0026quot;...难道又叫我...\u0026quot;\n安西：\u0026quot;没错，下场比赛你顶替木石，打湘北的中锋。\u0026quot;\n樱木：\u0026quot;不要了，我总也是得不了多分的，老爹啊，你说说这是怎么回事啊~~~\u0026quot;\n安西：\u0026quot;樱木，难道你没有发现你的专署优势吗？\u0026quot;\n樱木：\u0026quot;....我的专署优势？？\u0026quot;\n安西：\u0026quot;没错，像流川、宫城甚至比你小的木石和藤真，他们打球都是最少从国中开始的，而你仅仅打了不到2年，能有这样的进步简直已经是奇迹了。\u0026quot;\n樱木：\u0026quot;我是天才嘛！！\u0026quot;\n安西：\u0026quot;呵呵，也许吧，你的进攻能力暂时是无法和他们相比的，但是从开始和陵南的那一场练习赛开始，你那个超乎常人的能力开始慢慢的显现出来了。\u0026quot;\n樱木：\u0026quot;？？？\u0026quot;\n安西：\u0026quot;那就是你------超乎常人的防守能力，以及敏锐的对篮球的判断力。\u0026quot;\n樱木：\u0026quot;我？....是我？\u0026quot;\n安西：\u0026quot;没错，所以只有你在最后时刻觉察到了名朋13号的射篮，所以...\u0026quot;\n樱木：\u0026quot;所以...'\n安西：\u0026quot;所以你那一次防守绝对不是意外成功的，而是天生对篮球敏锐的判断！\u0026quot;\n樱木：\u0026quot;什么！！！天生的....对篮球....敏锐的判断！老爹你是认真的吗？\u0026quot;\n安西：\u0026quot;樱木，你已经是湘北不可或缺的队员，并且很有可能将成为本次大赛的---最佳防守队员！\u0026quot;\n樱木(震惊！！)：\u0026quot;哼，老爹，我想向你请个假。\u0026quot;\n安西：\u0026quot;？\u0026quot;\n樱木：\u0026quot;我要回一次神奈川，因为---我想变强！\u0026quot;\n......\n风~~~\n\u0026quot;今天的阳光还真是有些....\u0026quot;\n\u0026quot;咦？(水面上一个人的倒影)\u0026quot;\n\u0026quot;是樱木(惊讶)，你站在这里做什么。你现在应该在静冈的\u0026quot;\n\u0026quot;我回来找你。\u0026quot;\n\u0026quot;找我？\u0026quot;\n\u0026quot;仙道，帮我！\u0026quot;\n\u0026quot;？？？\u0026quot;\n\u0026quot;我想变的更强！内心从来没有如此强烈的渴望！\u0026quot;\n仙道：\u0026quot;哼，鱼儿都被你吓跑了。\u0026quot;\n樱木：\u0026quot;？？？\u0026quot;\n仙道：\u0026quot;好吧，我还真是无私啊，让自己的对手变强。\u0026quot;\n樱木：\u0026quot;仙道！...谢了....\u0026quot;\n仙道：\u0026quot;就当是送给你们湘北的礼物吧，不过...你要用全国大赛冠军来回赠我\u0026quot;\n樱木：\u0026quot;仙道，你就看着好了....\u0026quot;\n这样在四强战开赛的前3天，樱木花道回到神奈川求助仙道章进行特训。\n(十七) 局外战役 在樱木在回神奈川路上的同时。\n\u0026quot;我来了,找我做什么。\u0026quot;\n\u0026quot;和你公平的再来一次。\u0026quot;\n\u0026quot;哼，比赛的胜负已定。\u0026quot;\n\u0026quot;你果然很强，那么困难的情况下还能得到不少的分，不过...你加时赛的几次失误可是很危险的。\u0026quot;\n\u0026quot;哼，你到底想说什么。\u0026quot;\n\u0026quot;我知道那时你的体力消耗很大，而我是比赛的后半段才上的。所以为了公平，我们来一次one and one。\u0026quot;\n\u0026quot;不死心的家伙。我没有时间陪你做这没有意义的事情。\u0026quot;(转身要走)\n\u0026quot;哼。我只是想试试湘北的流川枫和山王的泽北荣治之间的差距有多大。\u0026quot;\n\u0026quot;差距！哼，不知你的球技有没有你的嘴巴一样的厉害。来吧！\u0026quot;\n......\n宫城：\u0026quot;樱木这个家伙真是胡来啊。\n彩子：\u0026quot;真是奇怪啊，突然请假回神奈川。\u0026quot;\n安田：\u0026quot;彩子学姐你怎么来了呢？\u0026quot;\n彩子：\u0026quot;我刚从医院回来，顺便过来看看山王的比赛。\u0026quot;\n宫城：\u0026quot;木石，他怎么样。\u0026quot;\n彩子：\u0026quot;虽然没有什么大碍，可能是过度？\u0026quot;\n(十八) 海南vs大荣 相田袮生：\u0026quot;咦？那不是北川光烈！他怎么也来了，中村(相田的助手)快跟我来。\u0026quot;\n中村：\u0026quot;哦，好的。\u0026quot;\n相田袮生：\u0026quot;仅仅是高中生的全国大赛，日本70年代的篮球传奇北川光烈竟然也到了现场。\u0026quot;\n相田和中村成功的采访到了北川光烈。\n\u0026quot;评委？\u0026quot;\n\u0026quot;没错，这次我是做为特邀评委来参与评出本次高中生全国大赛的最佳球员的。\u0026quot;\n\u0026quot;那北川先生已经有了候选名单了吗？\u0026quot;\n\u0026quot;呵呵，其实到目前为止有4个人有资格，有希望获得本次大赛的最佳球员。\u0026quot;\n\u0026quot;哦？？那他们是？\u0026quot;\n\u0026quot;山王的泽北荣治，大荣的土屋淳，海南的神宗一郎以及湘北的流川枫。\u0026quot;\n相田：\u0026quot;啊！！\u0026quot; (思)前三个人可以说是早就闻名于日本高中生篮球界的超级球员，并且都是在日本篮球名校打球的主力球员，而流川枫竟然在篮球并不闻名的湘北获得了与那三个人同样的评价，他的进步简直可以说是惊人的，而且他还是4人里唯一的一个2年级球员啊，潜力是深不可测的....\n相田：\u0026quot;北川先生，您个人认为谁最有希望获得本届大赛的MVP呢？\u0026quot;\n北川：\u0026quot;呵呵，从历届的比赛来看，MVP一直是从决赛的2只队伍中选择的，所以他们4人所代表的球队山王、大荣、海南、湘北，谁能击败对手进入决赛甚至夺得冠军，谁就会比其他人有更大的竞争力。\u0026quot;\n海南vs大荣比赛的下半场，比分66：73，海南落后7分。\n神(呼呼)：\u0026quot;还有5分钟左右的时间，我不会让我的全国大赛在此停止的。\u0026quot;\n土屋(大喊)：\u0026quot;伙伴们加油，为了大荣的尊严，为了大阪的荣誉！\u0026quot;\n大荣队员们(受到鼓舞)：\u0026quot;对！为了我们的尊严，为了大阪的荣誉。\u0026quot;\n全场观众齐声喊：\u0026quot;防守！防守！大荣守住！\u0026quot;\n清田(思)：要拼命了。\u0026quot;来吧！队长，我们没有退路了！\u0026quot;\n神(思)：清田说的没错我们没有退路了，不能让别人说海南是因为没有阿牧才输的。\n神：\u0026quot;所有的队员，听好了现在开始全力进攻！我说的是----全力进攻！！！\u0026quot;\n海南(思)：\u0026quot;神，队长怒了！很少见的大吼啊！\u0026quot;\n大吼：\u0026quot;来吧，大荣！\u0026quot;\n海南所有的人在神宗一郎的带领下要发起最后的进攻，而大荣也在队长土屋的带领下，拼死守住这领先的优势。海南和大荣的殊死战把本届大赛推向高潮！\n(十九) 归来！ 75：79\n海南追回了3分，不过还是落后4分。比赛还剩不到40秒。\n相田：\u0026quot;这次进攻海南必须打进。要不这场比赛就胜负已定了。\u0026quot;\n清田突破，\u0026quot;啊~~\u0026quot; 被大荣的土屋盖了火锅了，大荣和海南的球员在奋力争夺这个球。还是海南的挣到了，球传给了外线的神，大荣的球员已经对神实施了紧盯战术。\n\u0026quot;什么！难道神想在这样的进逼下投三分吗？\u0026quot;\n\u0026quot;不是！ 球传给了清田，清田要再次上篮！\u0026quot;\n不过面对土屋的防守，清田显的很勉强，不过这次清田没有单干而是将球再次传给了神。神闪开空挡横向跑动中接球，马上高高跃起，直接射篮！球进了！\n77：79\n还领先2分，大荣虽然受到了海南的全场紧逼，但并不急于完成这次进攻。海南要和时间赛跑了。\n土屋(思)：这一球只要进了一切就结束了，就算不进只要把时间多耗一些，我们依然会占有优势。要注意的就只有神的三分而已。\n土屋向计时牌看去，还有7秒。\u0026quot;好，可以最后一击了。\u0026quot;\n突然土屋接到传球队友，强突到内线，海南忌惮犯规没有有效的拦截。\n跳起来了！土屋，不是，土屋和神都跳起来了。\n\u0026quot;什么！！！\u0026quot;阿神把土屋这一上篮盖了出去，双方的队长同时摔到了场边，但所有的这一切海南的清田熟视无睹，他抢到这个球，以最快的速度带球向着大荣的球篮冲去。大荣的4名队员一起向清田追去。清田上篮了。\n\u0026quot;守住！！\u0026quot;大荣最前面的两名队员已经跳起。\n\u0026quot;嘭！\u0026quot;在4名队员的夹击下，海南的清田信长竟然在比赛结束的瞬间扣进了一球。\n哨声~~~~加罚！ 是加罚！进球有效并且还要加罚！这场比赛真是充满着戏剧性啊。\n海南若是罚进这一球比赛就将结束，若不进则双方进入10分钟的加时赛。而这时海南的阿神和大荣的土屋也站了起来，海南的阿神好像在刚才的防守中受了伤，紧紧握住自己的右手手腕。\n\u0026quot;清田，好样的！\u0026quot;\n\u0026quot;队长！这场比赛将以我清田信长的最后一投结束。胜利是属于海南的！\u0026quot;\n\u0026quot;怎么会这样，竟然让他得分并加罚！！\u0026quot; '\n土屋淳默不做声。\n清田站在罚球线上，投篮....球进了！\n\u0026quot;呀！！！！！！\u0026quot;清田高高举起右手，海南所有的队员冲向了清田。\n而大荣自队长土屋淳开始，泪水已经充满了他们的眼睛。\n土屋：\u0026quot;伙伴们，我们可以昂着头回去了。\u0026quot;\n神：\u0026quot;很可惜。\u0026quot;\n土屋：\u0026quot;祝贺你们！希望你们在决赛中能赢得冠军！\u0026quot;\n这样海南成为第一支进入决赛的队伍。\n.....\n宫城：\u0026quot;好了，下面就看我们的了！\u0026quot;\n藤真明次：\u0026quot;樱木学长怎么还没有到呢？比赛还有一个小时就要开始了。\u0026quot;\n彩子：\u0026quot;明明昨天打电话说好会准时赶回来的！这个樱木...\u0026quot;\n彩子：\u0026quot;安西教练，这怎么办。\u0026quot;\n安西：\u0026quot;比赛还有一个小时才开始吧。\u0026quot;\n众人：\u0026quot;.....\u0026quot;\n\u0026quot;没有我，看来你们很着急啊！\u0026quot;\n\u0026quot;樱木！\u0026quot;\n\u0026quot;学长！\u0026quot;\n\u0026quot;白痴！\u0026quot;\n樱木(很严肃的表情)：\u0026quot;我们的对手是山王吧，流川，像上次那样...\n流川：\u0026quot;....恩？....\u0026quot;\n樱木：\u0026quot;像上次那样.....干掉山王！\u0026quot;\n流川：\u0026quot;哼，还记得我们的口号吗？\u0026quot;\n众人(击掌大喊)：\u0026quot;我们很强！！！\u0026quot;\n这样湘北将在半决赛与山王进行一场激烈而残酷的比赛。\n(二十) who is NO.1？ 在静冈县县立体育馆内，即将进行第二场半决赛山王对战湘北。\n堂本(山王队教练)：\u0026quot;山王的目标只有一个就是冠军，他们并没有把击败湘北当作前进的动力。但是如果在前进的过程中遇到了湘北，山王的夺冠就会变得完美了。\u0026quot;\n堂本(回忆)\n一年前山王输给湘北之后，\n\u0026quot;教练，我准备暂缓一年去美国。\u0026quot;\n\u0026quot;不要因为一场比赛的失利而影响到你\u0026quot;\n\u0026quot;我想明白了，在日本拿不了第一，去了美国也没有意义。况且我不想以一个失败者的身份离开日本。就让我再为山王打一年球，夺回我们的荣誉！\u0026quot;\n\u0026quot;....好，泽北！不服输才是山王的球员。\u0026quot;\n......\n相田袮生：\u0026quot;北川先生，您是如何分析本场比赛呢？\u0026quot;\n北川：\u0026quot;两队都是从预选赛就表现的十分出众，山王一路大胜，而湘北则是淘汰了上届的冠军。可以说这绝对是一场势均力敌的比赛。\u0026quot;\n相田：\u0026quot;去年湘北击败了山王，许多人都认为那是偶然，今年2支队伍再次对决，您认为谁的机会更大些？\u0026quot;\n北川：\u0026quot;首先，湘北靼苌酵醪皇且桓雠既？其次不能因为山王输给了湘北就认为山王的实力比湘北弱。从综合实力考虑山王仍然是此次大赛最强的。但湘北的进步是有目共睹的，如果让我猜测的话，我个人认为湘北将会赢得这场比赛。\u0026quot;\n相田(思)：连篮球名宿都看好湘北，难道湘北真的已经具有夺取冠军的实力了？？！！\n.....\n比赛马上开始了，双方的出场阵容：\n山王\n 8号一本道海斗(PF) 9号泽北荣治(SF) 7号河田美纪男(CF) 6号莜原刚(SG) 4号深津一成(PG)。  湘北的阵容和以前相比有了变化，他们的主力中锋4号木石瞳并没有出现在名单中。\n湘北\n 10号樱木花道(CF) 11号流川枫(SF) 14号藤真明次(SG) 6号安田靖春(SG) 7号宫城良田(PG)  泽北对流川：\u0026quot;这场比赛让我来告诉你谁是日本高中篮球的最强者。\u0026quot;\n流川(冷酷)：\u0026quot;打败你我就是最强者！\u0026quot;\n樱木：\u0026quot;哼，快开始吧我已经迫不及待了。\u0026quot;\n哨声~~~\n\u0026quot;天啊\u0026quot;面对山王身高215cm的河田，湘北的樱木竟然挣到了发球，全场比赛刚刚开始。\n樱木花道就让所有的观众目瞪口呆，而湘北也在宫城的带领下进行第一次的进攻。\n(二十一) 射手的责任 宫城组织的湘北的第一次进攻，被山王破坏，随后山王的深津得到本场比赛的第一分。\n虽然河田的身高和体重均优于樱木，但是超强的爆发力和灵活的身体弥补了樱木的劣势。泽北虽然在和流川的交锋中略占优势，但基本持平。\n问题出现在安田和宫城身上。深津的防守限制了宫城的速度，同时身高上的差距再次成为宫城的致命弱点。由于木石瞳的缺席，湘北并没有真正意义上的大前锋，也就是说在和身高达到194cm的一本道海斗的对抗中168cm的安田是处于极不利的情况下。\n这就是说在山王和湘北的两个王牌，泽北和流川基本持平，樱木和河田基本持平，宫城劣势于深津，而安田则是处于极被动的情况下，湘北的射手藤真的发挥，就成为湘北维持和山王对抗的天平了。而山王的莜原只要限制住藤真的发挥，那么这场比赛就没有任何悬念了。去年湘北的射手三井寿就是在山王一之仓聪的防守下，威力大减的。不过好在莜原也是一位进攻为主的球员，藤真比起三井所受到的压力要小些。\n泽北突破了流川，射球，又进了。上半场仅仅进行了一半，泽北已经得到了11分，而山王也以28：21领先湘北。\n樱木：\u0026quot;流川你在做什么呢？你的任务不是那个家伙吗？\u0026quot;\n流川：\u0026quot;....\u0026quot; (思) 打败他，一定可以的。\n宫城(思)：那个泽北真是强，深津的防守可以说是强，但是还不足以强到完全的限制我，可是身高的劣势是我的致命伤，妈的真想瞬间长高啊。\n安田(思)：不行，我已经很尽力了，木石的重担一下子就交给我了，为了湘北一定要坚持。\n藤真(思)：从来没有这样如此的冷静，这是和山王打比赛吗？和最强之高中山王？突然很想笑啊，放弃防守我要和这个家伙比得分了。像那个三井寿一样，成为湘北的神射手。\n安西：\u0026quot;能不能咬住比分，维持住湘北的自信心，关键就看你了----藤真。像你的前辈三井那样完成一个射手的责任。\u0026quot;\n樱木竟然封掉了一本道的射篮，宫城速度上的优势体现出来了，他在深津泽北的前面抢到这一球。是藤真接到了传球。莜原已经上去防守，山王的防守真是强，在丢球瞬间就把防御组织起来了。\n藤真看看脚下的三分线，突然退到三分线上，莜原：\u0026quot;什么！\u0026quot;三分命中！\n28：24，湘北追回3分。\n随后，山王的进攻由一本道和泽北，还有河田分别完成。但是樱木顽强的抢到篮板球，并突然传给藤真，藤真再次命中3分。流川同样回敬泽北一个急停射篮得分。\n34：29，湘北依旧落后五分。\n堂本：\u0026quot;现在湘北在场上的五名队员中，除了10号和14号其他三个位置都处于劣势，只要克制住10的防守和14号的远投，山王这场比赛就可以拿下了。尤其是14号的远投，再出色的防守山王也可以用他更出色的进攻对付，但是如果对方再有一个射手的话局势就会出现不同。今年的山王没有像一之仓聪那么好的盯人了...\u0026quot;\n在堂本思考的同时藤真再次命中三分。\n堂本：\u0026quot;深津，你和莜原对调，你去负责那个14号。\u0026quot;\n堂本(思)：这支山王队伍中目前防守最好的应该就是深津了，让他换掉更善于进攻的莜原来防守湘北的射手。深津你的责任重大啊。\n藤真：\u0026quot;换人了吗？哼一样的。\u0026quot;\n深津：\u0026quot;听好，从现在开始你要多受些照顾了。\u0026quot;\n比赛继续进行。\n(二十二) 以篮球的名义 上半场比赛结束，由于深津的盯防致使藤真的发挥受到了限制，但宫城的压力相对减小。\n这样湘北的进攻组织也略见起色。不过由于泽北的个人能力太过突出，山王在半场结束时依然保持着对湘北的5分优势。\n安西(思)：流川和泽北的差距并不是个人的问题，而是在于全队的整体攻防。今年的山王是一支全面进攻的球队，和去年相比它的防守应该是削弱了不少啊。但是山王还是一路轻松获胜就在于它更加强大的进攻。除了4号偏重于防守之外，其余4人重点均在进攻。有这么多的进攻点，泽北打起球来就会轻松许多，而湘北缺少了木石这个很重要的球员，一旦藤真被限制住，流川枫可以说是孤立无援，也就是说一个流川枫要面对4个山王球员，这样的话不论湘北怎样靠防守缩小比分，最后山王还是会靠更强的进攻赢得比赛。这场球的关键就是找到另外的进攻点，只有这样才有可能战胜山王。\n流川(呼呼)：\u0026quot;...\u0026quot;\n彩子：\u0026quot;流川，你要保存体力，下半场还要靠你。安田你怎么样？\u0026quot;\n安田：\u0026quot;我现在才知道木石受到的压力有多大。我会坚持住的。\u0026quot;\n安西：\u0026quot;藤真被盯住了，宫城你就有机会了。\u0026quot;\n宫城：\u0026quot;好的教练。\u0026quot;\n安西：\u0026quot;樱木你怎么样啊\u0026quot;\n樱木：\u0026quot;我很好，那个家伙只是高一些而已，比起他的哥哥还有森重宽要差一些。\u0026quot;\n安西：\u0026quot;我正在等你这句话。\u0026quot;\n樱木：\u0026quot;恩？？\u0026quot;\n安西：\u0026quot;樱木，下半场你一定要在防守的同时，更多的参与进攻。\u0026quot;\n樱木：\u0026quot;我吗？？老爹你这么信任我啊。'\n安西：\u0026quot;我要看看你和仙道特训的结果！\u0026quot;\n众人：\u0026quot;什么！樱木和仙道特训。\u0026quot;\n流川：\u0026quot;！仙道！特训...\u0026quot;\n宫城：\u0026quot;难道说樱木回神奈川是找仙道进行秘密特训...\u0026quot;\n樱木：\u0026quot;哈哈哈，没错，虽然只有3天，但天才的能力是不用被怀疑的。\u0026quot;\n宫城\u0026amp;流川：\u0026quot;臭屁..\u0026quot;\n安西：\u0026quot;还记得去年是怎么战胜山王的吗？\u0026quot;\n樱木和流川对视了一下，又马上把头扭开。\n安西：\u0026quot;樱木，流川。为了实现你们全国制霸的梦想再一次联手吧。\u0026quot;\n樱木\u0026amp;流川：\u0026quot;....\u0026quot;\n安田：\u0026quot;是啊，为了湘北。还记得你们上次联手我们有多强吗！\u0026quot;\n藤真：\u0026quot;樱木、流川学长，木石和我也正是因为你们才来到了湘北！\u0026quot;\n宫城：\u0026quot;输了的话就是我的最后一战了。\u0026quot;\n樱木看着流川：\u0026quot;流川枫..\u0026quot;\n流川走过去：\u0026quot;还愣着做什么！\u0026quot;\n众人：\u0026quot;？？？\u0026quot;\n\u0026quot;啪！\u0026quot;流川向樱木挥手击掌，\u0026quot;为了冠军！\u0026quot;\n樱木：\u0026quot;以篮球的名义...\u0026quot;\n樱木\u0026amp;流川：\u0026quot;击败山王！！！全国制霸！！！\u0026quot;\n众人：\u0026quot;呀！！击败山王！！全国制霸！！！\u0026quot;\n在湘北对战山王的半决赛的下半场，樱木和流川终于再次联手，而湘北也变得异常团结\n(二十三) 王者之殇(上) 95：94，下半场在还有2分钟的时候湘北和山王的差距仅仅只有一分了，双方展开了一场激烈的对攻战，尤其是湘北的10号樱木花道上半场仅仅得到4分而下半场到现在已经得到了14分。流川枫更是拿到了32分。这边泽北依然得到全场最高的40分，一本道也有24分。\n堂本(思)：虽然湘北还落后一分，但是他们和上半场的表现简直判若两队。一种逼人的斗气，连我在场边的教练都已经被压得透不过气了。更可怕的是那个10号，我们研究过湘北，他的进攻力应该是所有湘北队员里最弱的，但是现在却拿到了18分，河田竟然不能压制住他，山王从未受到的考验来临了。\n彩子：\u0026quot;流川和藤真的得分32，27宫城10分，加上替补的得分是7分，而以剩下的得分竟然是樱木的18分，樱木简直是太不可思议了。\u0026quot;\n安西：\u0026quot;樱木的进攻能力只有在别人的刺激下才会发挥出来。而这个人一定是樱木异常重视的强大对手，而泽北带领下的山王无疑最好扮演了这个角色，另外樱木的潜意识中还有一个更重要的强大对手。\u0026quot;\n彩子：\u0026quot;教练，难道是流川枫...\u0026quot;\n安西：\u0026quot;呵呵，让这两个人联手不知道会发生什么啊。\u0026quot;\n\u0026quot;什么！\u0026quot;安田竟然没有传球而是突破上篮了，球进了。\n一本道：\u0026quot;啊！，竟然小瞧他了。\u0026quot;\n\u0026quot;太棒了！安田！\u0026quot;\n这是本场比赛湘北的第一次在比分上领先山王。\n北川：\u0026quot;这一球是决定性的...\u0026quot;\n相田：\u0026quot;恩？时间还有近2分钟，山王还有时间啊！\u0026quot;\n北川：\u0026quot;我说的不是时间，而是双方球员心态上开始了剧烈的变化了。山王从开场到现在一直都处于领先而到了比赛的最后阶段却被一直压制住的对手反超，也就是说一直打顺风球的山王队员突然变成了一个不利的环境，而湘北则在心理上已经完全处于优势了。\u0026quot;\n堂本：\u0026quot;不要在意，我们还有时间！\u0026quot; (思) 这时候一定要顶住，不能让队员们慌乱。\n泽北：\u0026quot;时间还有的是一定要赢！\u0026quot;\n坏了，莜原的射篮不进，流川得到栏板，传给了宫城，宫城发动快速反击。深津马上上来防守，宫城(思)：好机会，藤真看你的了。宫城突然把球传给了禁区内的藤真，莜原已经向藤真冲过来了，藤真又往脚下看了一眼，难道他又准备投三分了吗？\n泽北大喊：\u0026quot;这时候绝对不能让他投3分球！！\u0026quot;\n莜原：\u0026quot;不会让你出手的！\u0026quot;\n\u0026quot;什么！\u0026quot;不是投球，藤真突然向前是带球突破，莜原已经跳起，他用余光见证了藤真有史以来的第一次上篮得分。\n95：98，山王竟然落后3分。堂本教练马上叫了暂停。山王队员似乎有些慌乱。\n比赛重新开始。山王的泽北竟然开始带球，他并没有把球交给莜原或者深津，他突破了藤真，晃过了安田在樱木的面前急停跳投，不过流川从后面轻轻的碰到了这个球，没有打手。\n\u0026quot;唰\u0026quot;球还是利索的进了篮框。这时候泽北体现了一个王牌的冷静和冷酷。\n97：98，山王在最后的时刻还落后一分。\n时间已经不多了，藤真：\u0026quot;这一球结束你们吧！\u0026quot;\n莜原：\u0026quot;啊！\u0026quot;\n莜原还是稍微影响到了藤真，球打在篮框下被河田得到。我们看到山王队队员面色有些惨白，是啊这个球简直太幸运了。\n泽北(思)：\u0026quot;呼呼，好悬，快马上进攻！\u0026quot;\n深津将球传给了内线的河田，但是樱木已经站好了位置，时间不多了。河田还是没有机会。\n\u0026quot;这边！\u0026quot;一本道海斗突然前插，河田把球传给了一本道。一本道带球强行突破，安田被撞到了，但是裁判的哨声并没有响起。\n一本道：\u0026quot;给我进去！\u0026quot;一本道要灌篮了，\u0026quot;嘭！\u0026quot;天啊球被流川生生的盖了下去。\n流川也像泽北一样开始带球了，所有的山王的球员都飞速的奔向自己的后场。流川已经晃过了莜原和河田，但是泽北已经赶到了流川的前面，流川看样子想强突泽北了，不对他也做出了急停射篮的动作。\n泽北：\u0026quot;不会让你再进了！\u0026quot;\n\u0026quot;唰\u0026quot;球并没有向篮框飞去，而是离篮框还有一段距离，流川投了一个三不粘。\n\u0026quot;什么！\u0026quot;\n\u0026quot;嘭！！！\u0026quot;\n全场观众都为这一刻惊呆了，是湘北的10号樱木花道！竟然是一个空中接力灌篮！流川的那个球难道是传球！而樱木这个灌篮竟是他第一场比赛得到20分。\n(二十三) 王者之殇(下) 泽北(脸色惨白)：\u0026quot;...，还有机会啊，把球给我！！\u0026quot; ？\n这时连号称日本第一高中生的泽北荣治也有些着急了。不过留给他的时间只有几秒钟。深津传给泽北，而山王的其他队员此时还在自己的半场。泽北怒了，樱木轻松的被他晃过了，接着是宫城，安田，没有时间了，在他面前的是藤真和流川，泽北必须投三分了，可是他离三分线还有一点距离但是流川和藤真已经挡在他的面前了。\n\u0026quot;不能输！\u0026quot;泽北在离三分还有一段距离的情况下，在流川和藤真的封堵下投出了三分球。\n\u0026quot;嘟~~~\u0026quot;\n\u0026quot;唰！\u0026quot;\n球进了！但是比赛结束的哨声在前，这样湘北在这场让人窒息的比赛中100：97，战胜了强大的山王。山王的队员全都无力的躺倒了场上。\n而湘北，在犹豫了瞬间一起冲向了藤真和流川激动的压在了一起。\n场上只有一个还站着的人.... ？\n泽北荣治一动不动的望着场边的记分牌。\n山王 97：100 湘北\n这一刻泽北像一具雕像一般。\n......\n相田袮生：\u0026quot;北川先生，您的预测真是很准啊。\u0026quot;\n北川：\u0026quot;当湘北投进那个反超一球的时候，胜负就已经决定了。\u0026quot;\n相田：\u0026quot;恩？我不明白。\u0026quot;\n北川：\u0026quot;很简单，山王这么些年只是上次输给了湘北，而今天据说除了山王的8号一本道之外，其余的4人均是去年山王败给湘北的当时的见证人，他们会带着极大的复仇心理去面对这场比赛，这样无疑会给他们带来巨大的动力，但是当对方再最后一刻把比分反超的时候，那种复仇心理所带来的不再是对战湘北的动力，而变成了对湘北的恐惧。\u0026quot;\n相田：\u0026quot;让山王恐惧...湘北...\u0026quot;\n堂本：\u0026quot;山王的时代真的结束了吗？\u0026quot;\n......\n\u0026quot;比赛不知道怎么样了，应该已经结束了吧。\u0026quot;\n\u0026quot;不要担心了，你现在最重要的是把身体恢复好。\u0026quot;\n\u0026quot;菊地，没想到你会找到这里。\u0026quot;\n\u0026quot;我本来是准备看你和山王比赛的，可是你们的经理告诉我你在这里。\u0026quot;\n\u0026quot;是彩子学姐...\u0026quot;\n门突然开了\n\u0026quot;樱木，还有流川，啊安西教练！你们都来了。\u0026quot;\n菊地：\u0026quot;咦？\u0026quot;\n樱木：\u0026quot;木石！我们赢了！我们进入决赛了！\u0026quot;\n木石：\u0026quot;什么！太好了！菊地我们湘北进入决赛了。你听到了吗？\u0026quot;\n安西：\u0026quot;木石好好养病，湘北在决赛中还需要你的力量啊。\u0026quot;\n安田：\u0026quot;是啊，木石快些好起来吧。没有你我很吃力啊。\u0026quot;\n木石：\u0026quot;还有2天就是决赛了，我在这里已经呆的很烦了，真是恨不得现在就想大决赛啊！\u0026quot;\n菊地(思)：木石加油！\n(二十四) 流川vs樱木，泽北vs仙道 在湘北战胜山王的第二天，湘北仍在进行训练。而有一个人正在从静冈到神奈川的新干线上。\n回忆：在湘北刚刚战胜山王以后。\n\u0026quot;喂！你们看那不是山王的泽北吗？\u0026quot;\n宫城：\u0026quot;流川他好像在等你呢？还是不甘心吗？\u0026quot;\n流川：\u0026quot;...\u0026quot;\n泽北：\u0026quot;流川枫，这场胜利不能证明你和我之间的胜负。\u0026quot;\n流川走过去：\u0026quot;哼，证明我是全日本第一高中生吗？就算我赢了你，我也不是全日本第一的高中生。\u0026quot;\n泽北：\u0026quot;？这算是一个胜利者说的谦虚的话吗？\u0026quot;\n樱木突然走过来，\u0026quot;喂！我告诉你，他说的是实话。因为我们并不是神奈川的最强者。\u0026quot;\n泽北(不屑)：\u0026quot;你想说海南的神宗一郎还是那个不堪一击的清田信长吗？\u0026quot;\n樱木：\u0026quot;他并不是海南的也没有参加全国大赛。\u0026quot;\n泽北：\u0026quot;哼！你们是说一个连全国大赛都参加不了的人是日本最强的高中生？？？不要因为你们赢了就把神奈川捧上了天。\u0026quot;\n流川(冷酷严肃)：\u0026quot;你，若是不信，便去试试！\u0026quot;\n泽北(思)：看着樱木和流川那种认真的表情，也许这个人确实很强，不过这么强的人竟然连全国大赛都没有参加。也许是他们故意把他的实力夸大了。不过看到湘北的队员在说到那个家伙的时候，简直....简直是带着一种得意和骄傲的表情。我这就把他们得以自豪的家伙打败，不会让让他们神奈川再这么的神气！\n......\n与此同时，湘北的训练也进入了最后。木石瞳的归队，让湘北再次凑起了最强阵容。\n宫城：\u0026quot;怎么回事啊，昨天不是有过一个上篮得分了吗？\u0026quot;\n藤真：\u0026quot;完全不行嘛，现在要么是走步，要么就是不进。根本不如远投的命中率高。\u0026quot;\n宫城：\u0026quot;真是奇怪的家伙，就是搞不好上篮。\u0026quot;\n彩子：\u0026quot;到时间了，今天就到这里吧。\u0026quot;\n正当大家收拾东西准备离开的时候，樱木走到流川面前。\n\u0026quot;再来一次，一对一。\u0026quot; ？\n\u0026quot;？？你确定？\u0026quot;\n\u0026quot;我想知道我自己究竟是一个什么样的水平。\u0026quot;\n宫城：\u0026quot;不是吧，樱木又一次挑战流川。\u0026quot;\n安田：\u0026quot;不是因为昨天得到了20分头脑发昏了吧。\u0026quot;\n藤真：\u0026quot;不过流川学长可是得到了30多分啊。\u0026quot;\n宫城：\u0026quot;这和分数没有关系，这是樱木不知又想作出什么奇怪的举动了。安田，还像上次那样，大家都离开，让他们自己来解决吧。\u0026quot;\n.....\n泽北站在着。\u0026quot;这就是流川说的地方了。\u0026quot;\n推开体育馆的门。\n\u0026quot;咦？你是谁？\u0026quot;\n泽北环视了一圈，\u0026quot;谁是陵南的仙道章？\u0026quot;\n......\n木石：\u0026quot;还真是想知道里面是一种什么样的情况。\u0026quot;\n藤真：\u0026quot;只要樱木学长不要输了之后....\u0026quot;\n宫城：\u0026quot;...搞不好已经乱成一团了。 呵呵。\u0026quot;\n门----突然打开了。\n众人紧张的看去。是流川。流川走了出来，看来流了不少汗啊。\n众人：\u0026quot;结束了？\u0026quot;\n流川：\u0026quot;结束了。\u0026quot;说完就默不做声的离开了。\n宫城：\u0026quot;好像已经有3分钟了吧，樱木怎么还没有出来。\u0026quot;\n安田：\u0026quot;希望不要出什么事。\u0026quot;\n木石：\u0026quot;还是进去看看的好。\u0026quot;\n众人进去，发现樱木汗淋淋的独自跪在篮球场上。\n藤真：\u0026quot;完！遭受了巨大的打击！\u0026quot;\n宫城：\u0026quot;这个不自量力的家伙，非要在决赛前夕打击自己。\u0026quot;\n木石：\u0026quot;还是去劝劝吧。\u0026quot;\n宫城：\u0026quot;樱木。\u0026quot;\n樱木依然跪在场边低声的嘟囔着：\u0026quot;为什么？为什么会这样？\u0026quot;\n宫城：\u0026quot;樱木你不要太伤心了，现在的流川枫的确可以说是全日本数一数二的。\u0026quot;\n藤真：\u0026quot;是啊，学长你的进步是大家有目共睹的，毕竟像流川学长那样的水平的全国也没有几个啊。\u0026quot;\n木石：\u0026quot;超越流川枫需要时间的，不要太着急学长。\u0026quot;\n樱木：\u0026quot;为什么？为什么我竟然赢了他。\u0026quot;\n众人：\u0026quot;什么！！！！！\u0026quot;\n......\n泽北(呼呼)：\u0026quot;不可能！绝对不可能！我泽北荣治竟然输了，一个参加过三次全国大赛，拿过MVP的球员，竟然在这里输给了一个没有进入全国大赛的人。仙道章！我不得不承认他确实很强，很强，也许他才是日本第一的高中生！\u0026quot;\n(二十五) 向着梦想飞啊！(全国大赛完结篇) 在决赛的前夜。\n宫城(思)：这是梦吗？明天就是与海南的决赛。这竟然是全国决赛，让击败海南和全国制霸一起实现。赤木，目暮，三井你们的愿望还差那么一小步了...\n藤真(思)：\u0026quot;好好表现，哥哥明天会看到的。是到了超越哥哥的时候了。\u0026quot;\n木石(思)：\u0026quot;...妈妈...活着挺好的。明天等待我的是什么呢。明天完了我就会去看您。\u0026quot;\n流川枫没有呆在自己的房间里。(在电话亭) ~\n\u0026quot;喂，明天是决赛了，你来吗？不用说抱歉，我知道。(流川露出了一丝的遗憾)我绝对不会输的，一定要赢。(那种似乎就像是火山爆发前的感觉)\u0026quot;\n这边樱木，却在呼呼的睡着大觉。他的梦中依然是昨天发生的事情....\n\u0026quot;5分钟，全力以赴的5分钟。只要进10个球就算赢。\u0026quot;\n\u0026quot;哼，就这样吗？\u0026quot;\n\u0026quot;对，不过我有一个优惠条件，就是我先达到进5个球，算你输。\u0026quot;。\n\u0026quot;哼，来吧多少优惠都给你。\u0026quot;\n呼呼...\n\u0026quot;真是不可思议的家伙，竟然在连丢3球之后连拿4球不能再给他机会了。\u0026quot;\n\u0026quot;流川，这是我樱木花道刚从仙道那里学来的绝技啊，来吧这最后一球。\u0026quot;\n\u0026quot;别妄想了！\u0026quot;\n\u0026quot;咚！\u0026quot;\n\u0026quot;什么...换手上篮！...\u0026quot;\n\u0026quot;进了吗？？？哼哼！\u0026quot; (思) 连我自己都不敢相信啊！\n.....\n这是全国大赛的决赛了，由同样都是来自神奈川县的湘北对阵海南。天啊，决赛的队伍竟然是来自同一个县的，真不知道这是不是日本篮球的一个变化还是退步。\n清田：\u0026quot;看他们那帮家伙，没有进过全国大赛的决赛，练习都显得那么紧张。\u0026quot;\n神：\u0026quot;....\u0026quot;\n清田：\u0026quot;面对我们从未输过的湘北！\u0026quot;海南也许是有史以来最好的夺冠的机会啊。\n.....\n全场比赛即将结束。\n海南的队员们已经放弃了，只有清田依然还在做最后的努力，不知道在场下的神宗一郎是不是很不甘心。上一场比赛的伤让他今天没有机会使出全力，基本上是在替补席上见证了自己球队的溃败。\n嘟~~~~~比赛的哨声吹响了。而湘北不仅仅第一次得到了全国大赛的冠军，同时创造了决赛历史中差距最大的比分105：83，湘北以22分的绝对优势赢得冠军。\n下面由北川先生公布这次大赛的最佳球员。\n北川光烈：\u0026quot;MVP-----湘北，11号流川枫。\u0026quot;\n后来......\n","link":"https://cuile.github.io/posts/slam_dunk_1/","section":"posts","tags":["灌篮高手","篮球飞人","篮球","动漫","故事"],"title":"灌篮高手大结局(全国大赛后) 上"},{"body":"","link":"https://cuile.github.io/tags/micromamba/","section":"tags","tags":null,"title":"micromamba"},{"body":"","link":"https://cuile.github.io/tags/venv/","section":"tags","tags":null,"title":"venv"},{"body":"","link":"https://cuile.github.io/tags/vscode/","section":"tags","tags":null,"title":"vscode"},{"body":"在 Docker 的容器内开发，相当于使用VSCode的远程开发能力，好处非常多。\n 开发环境统一、可维护性强 后期部署简单  1. 安装 Docker 各系统安装 Docker 的教程很多，这里略过。\n2. 安装 Visual Stuido Code 这不废话嘛，同上。\n3. 安装 Remote Development 扩展包 官方推荐安装 Remote Development 这个扩展包，它包括三个扩展功能：\n Remote - SSH Remote - Containers Remote - WSL  如果你只使用 Docker ，可以只安装 Remote - Containers 这个扩展。\n安装成功后，你可以在 VSCode 的左下角，看到一个“蓝底色+两个相对白箭头”的图标。\n点击图标，可以看到 Remote - Containers 提供了许多方法进行配置。\n4. 配置 Remote - Containers 4.1. 使用现成的 docker-compose.yml 配置  点击左下角的蓝色图标 选择 Add Development Container Configuration Files... 选择 Existing Docker Compose (Extend)  VSCode 会自动在项目的根目录下，生成 .devcontainer 文件夹 在 .devcontainer 目录内，包括两个文件：  devcontainer.json：VSCode 使用它连接开发容器 docker-compose.yml：示例文件，可以不用管它     打开 devcontainer.json 文件   照着 docker-compose.yml 进行修改，见下面示例\n  1// If you want to run as a non-root user in the container, see .devcontainer/docker-compose.yml. 2{ 3 \u0026#34;name\u0026#34;: \u0026#34;Existing Docker Compose (Extend)\u0026#34;, 4 // Update the \u0026#39;dockerComposeFile\u0026#39; list if you have more compose files or use different names. 5 // The .devcontainer/docker-compose.yml file contains any overrides you need/want to make. 6 \u0026#34;dockerComposeFile\u0026#34;: [ 7 // 项目已有 docker-compose.yml 文件的相对路径 8 \u0026#34;../docker/docker-compose.yml\u0026#34;, 9 // 可加载多个yml文件，按加载顺序排好即可 10 \u0026#34;docker-compose.yml\u0026#34; 11 ], 12 // The \u0026#39;service\u0026#39; property is the name of the service for the container that VS Code should 13 // use. Update this value and .devcontainer/docker-compose.yml to the real service name. 14 // VSCode 要连接的容器名称，必须与 docker-compose.yml 文件里 services 项定义的一致 15 \u0026#34;service\u0026#34;: \u0026#34;robot\u0026#34;, 16 // The optional \u0026#39;workspaceFolder\u0026#39; property is the path VS Code should open by default when 17 // connected. This is typically a file mount in .devcontainer/docker-compose.yml 18 // 容器的工作目录，必须与 docker-compose.yml 文件里 volumes 项定义的一致 19 \u0026#34;workspaceFolder\u0026#34;: \u0026#34;/root/code\u0026#34;, 20 // Use \u0026#39;settings\u0026#39; to set *default* container specific settings.json values on container create. 21 // You can edit these settings after create using File \u0026gt; Preferences \u0026gt; Settings \u0026gt; Remote. 22 \u0026#34;settings\u0026#34;: { 23 // This will ignore your local shell user setting for Linux since shells like zsh are typically 24 // not in base container images. You can also update this to an specific shell to ensure VS Code 25 // uses the right one for terminals and tasks. For example, /bin/bash (or /bin/ash for Alpine). 26 // 系统使用的shell，一般都 /bin/bash 27 \u0026#34;terminal.integrated.shell.linux\u0026#34;: \u0026#34;/bin/bash\u0026#34; 28 }, 29 // Uncomment the next line to have VS Code connect as an existing non-root user in the container. See 30 // https://aka.ms/vscode-remote/containers/non-root for details on adding a non-root user if none exist. 31 // \u0026#34;remoteUser\u0026#34;: \u0026#34;vscode\u0026#34;, 32 // Uncomment the next line if you want start specific services in your Docker Compose config. 33 // \u0026#34;runServices\u0026#34;: [], 34 // Uncomment the next line if you want to keep your containers running after VS Code shuts down. 35 // \u0026#34;shutdownAction\u0026#34;: \u0026#34;none\u0026#34;, 36 // Uncomment the next line to run commands after the container is created - for example installing git. 37 // \u0026#34;postCreateCommand\u0026#34;: \u0026#34;apt-get update \u0026amp;\u0026amp; apt-get install -y git\u0026#34;, 38 // Add the IDs of extensions you want installed when the container is created in the array below. 39 // 在容器内安装的扩展，会在启动时自动安装好 40 // 容器外即本地安装的扩展，主要对 VSCode 的外观起作用 41 // 容器内安装的扩展，才能对代码起作用，如：代码格式化等 42 \u0026#34;extensions\u0026#34;: [ 43 // 扩展的标识符，可以在扩展详细页面的[名称]旁边找到 44 \u0026#34;ms-python.python\u0026#34; 45 ] 46}  5. 运行  再次点击左下角的蓝色图标 选择 Reopen in Container，VSCode 将重启，并自动启动 docker ，进入容器安装扩展，准备好开发环境 成功启动过一次后，VSCode 会自动在[欢迎使用]页面[最近]项目下添加快速入口  6. 参考链接  Developing inside a Container  ","link":"https://cuile.github.io/posts/vscode/vscode_develop_in_docker/","section":"posts","tags":["python","venv","vscode","docker"],"title":"VScode 在 Docker 容器内开发"},{"body":"使用 VSCode 开发 Python 是替代 PyCharm 的一个很好选择，有丰富的扩展和第三方工具可以使用，安装配置好它们，会让开发工作事半功倍。下面列举推荐安装的扩展和工具：\n扩展\n Material Icon There  VSCode图标，很好看   Python  微软官方扩展，一定要装   Pylance  微软官方扩展，一定要装   autoDocstring Python Environment Manager Ruff Code Runner Qt for Python  工具\n Micromamba  使用 Micromamba 来配置 Python 开发环境有几个好处：  micromamba 是一个包管理器，可方便的同时安装几个软件，形成一个独立的开发环境，与其它项目的开发环境完全隔离。 micromamba 安装的软件，不会在系统留下痕迹，不会污染本地系统。 micromamba 只配置 python 基础环境，不影响 python 虚拟环境，同一个基础环境可提供给多个虚拟环境使用。      配置 Micromamba Windows环境 下载 推荐使用 PowerShell1\n1\u0026gt; Invoke-Webrequest -URI https://micro.mamba.pm/api/micromamba/win-64/latest -OutFile micromamba.tar.bz2 2\u0026gt; tar xf micromamba.tar.bz2 3\u0026gt; MOVE -Force Library\\bin\\micromamba.exe micromamba.exe 4\u0026gt;.\\micromamba.exe --help 5# 查看输出 安装2 1\u0026gt; .\\micromamba.exe shell init -s powershell 默认位置为 $HOME/micromamba，也就是 C:\\Users\\username\\micromamba 。 如果想自己指定位置，可以加上 “-p \u0026lt;path\u0026gt;” 参数。\n同时会在 PowerShell 的 Profile 文件中（相当于 Bash 的 .bashrc）添加以下代码，保证每次启动 PowerShell 时，都会自动初始化 Micromamba 。\n1# $HOME/Documents/WindowsPowerShell/profile.ps1 2 3#region mamba initialize 4# !! Contents within this block are managed by \u0026#39;mamba shell init\u0026#39; !! 5$Env:MAMBA_ROOT_PREFIX = \u0026#34;C:\\Users\\username\\micromamba\u0026#34; 6$Env:MAMBA_EXE = \u0026#34;C:\\Users\\username\\.micromamba\\Library\\bin\\micromamba.exe\u0026#34; 7(\u0026amp; $Env:MAMBA_EXE \u0026#39;shell\u0026#39; \u0026#39;hook\u0026#39; -s \u0026#39;powershell\u0026#39; -p $Env:MAMBA_ROOT_PREFIX) | Out-String | Invoke-Expression 8#endregion 9 10# 加入设置 micromamba 别名的命令。 11# 设置别名后，即方便使用，也可配合 VSCode 的配置，实现自动启动开发环境。 12\u0026gt; Set-Alias -name conda -value micromamba 1# 配置包通道 2\u0026gt; conda config append channels conda-forge 3 4# 查看 micromamba 设置 5\u0026gt; conda info 创建 Python 版本 1# env.yml2name:PyQt3channels:4- conda-forge5- free6dependencies:7- python 3.118- mingw 4.71\u0026gt; cd ~/micromamba 2\u0026gt; conda create -f env.yml 配置 VSCode2 配置 Venv 路径\n 使用 “ctrl+,” 打开设置界面，搜索 venv ，出现两个结果：     选项 值     Python: Venv Folders 如果安装时使用默认位置，就填写 micromamba，下面的不用设置   Python: Venv Path 如果安装时没有使用默认位置，就填写安装位置，上面的不用设置   Python: Conda Path 直接输入conda 即可    重启VSCode，进入 Python 项目，就可以看到右下角的 Python 环境了，如果创建了多个环境，可以通过这里切换。这里需要注意 vscode 可以识别多个 Python 版本，但无法正确配置它们。所以创建不同的 Python 版本后，还要为项目选择解释器。  使用 Python 虚拟环境  使用项目终端界面，创建虚拟环境。  1# 先激活 micromamba 环境 2PS \u0026#34;Your Project Path\u0026#34;\u0026gt; conda activate PyQt 3 4# 创建Python虚拟环境 5# --upgrade 参数是升级虚拟环境用的，新建虚拟环境时要去掉。 6(PyQt) PS \u0026#34;Your Project Path\u0026#34;\u0026gt; python -m venv --system-site-packages --prompt myproject --upgrade-deps --upgrade .venv 7# 查看项目资源管理器，看到 .venv 文件夹就成功了。 8 9# 激活Python虚拟环境 10(PyQt) PS \u0026#34;Your Project Path\u0026#34;\u0026gt; Activate.ps1 11 12# 成功进入虚拟环境 13(myproject) (PyQt) PS \u0026#34;Your Project Path\u0026#34;\u0026gt; 14 15# 重启 vscode 再次进入项目终端，不一定会看到项目前缀[^3]。VsCode已经自动修你激活了Python虚拟环境，不需要再操作。 16# 安装包里不需要激活 micromamba 环境，否则包将被安装到 micromamba 环境中。 其它配置    选项 值     Editor: Default Formatter Ruff   Python \u0026gt; Terminal: ACtivate Env In Current Terminal 勾选   Python \u0026gt; Terminal: Focus After Launch 勾选   Python: Language Server Pylance   Pylthon \u0026gt; Analysis: Type Checking Mode basic      Micromamba Installation\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n 使用 Micromamba 替换 Miniconda 更快配置 Python 环境\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","link":"https://cuile.github.io/posts/vscode/vscode_configures_python_development_environment/","section":"posts","tags":["micromamba","python","venv","vscode"],"title":"VSCode 配置 Python 开发环境"},{"body":"","link":"https://cuile.github.io/tags/network/","section":"tags","tags":null,"title":"network"},{"body":"","link":"https://cuile.github.io/series/openwrt/","section":"series","tags":null,"title":"OpenWRT"},{"body":"OpenWRT 配置 IPv6，在网上有许多教程，但大部分都说的不清不楚。 所以我从 OpenWRT 配置文件的角度，给出一个肯定能用的配置。 相关配置原理不详述，可自行上网查找。\n系统环境  北京联通 300M 家宽 （客服说100元/月，可提供公网IPv4/IPv6地址，其实IPv6是免费给的） OpenWRT（PVE虚机，非直通网卡）  目标平台：x86/64 固件版本：OpenWrt 21.02.0 r16279-5cc0535800 / LuCI openwrt-21.02 branch git-23.093.57360-e98243e 内核版本：5.4.143 DHCPv6 客户端 (odhcp6c) RA \u0026amp; DHCPv6 服务器 (odhcpd) IPv6 防火墙 (ip6tables) Luci网页配置 (luci-proto-ipv6)    配置流程  光猫桥接（电话联通，远程搞定） OpenWRT WAN IPv6 配置   1# /etc/config/network2...3config interface \u0026#39;lan\u0026#39;4option proto \u0026#39;static\u0026#39;5option ipaddr \u0026#39;192.168.10.10\u0026#39;6option netmask \u0026#39;255.255.255.0\u0026#39;7option device \u0026#39;eth0\u0026#39;8option ip6assign \u0026#39;64\u0026#39;# IPv6分配长度。要与 wan 口一致。910config interface \u0026#39;wan\u0026#39;11option proto \u0026#39;pppoe\u0026#39;12option username \u0026#39;***********\u0026#39;13option password \u0026#39;***********\u0026#39;14option device \u0026#39;eth1\u0026#39;15option ipv6 \u0026#39;auto\u0026#39;# 自动获取IPv6地址，使用这个选项后，会自动创建一个虚拟动态接口(WAN_6)，不用配置。16option ip6assign \u0026#39;64\u0026#39;# IPv6分配长度。参考 WAN_6 接口 IPv6-PD 的掩码长度，一般为“60”，比它大即可，系统默认为64。17... OpenWRT 防火墙配置   1# /etc/config/firewall2...3config zone4option name \u0026#39;lan\u0026#39;5list network \u0026#39;lan\u0026#39;6option input \u0026#39;ACCEPT\u0026#39;7option output \u0026#39;ACCEPT\u0026#39;8option forward \u0026#39;ACCEPT\u0026#39;910config zone11option name \u0026#39;wan\u0026#39;12list network \u0026#39;wan\u0026#39;13option input \u0026#39;DROP\u0026#39;# 关闭 wan 口输入流量14option output \u0026#39;ACCEPT\u0026#39;# 只出不进15option forward \u0026#39;REJECT\u0026#39;16option masq \u0026#39;1\u0026#39;# 打开 NAT 功能17option mtu_fix \u0026#39;1\u0026#39;# 路由器直接拨号时使用18...19# 转发规划很重要20config forwarding21option src \u0026#39;lan\u0026#39;22option dest \u0026#39;wan\u0026#39;23...24# 允许外网IPv6协议下，任意地址的547端口的UDP包通过wan口，访问本机546端口25config rule26option name \u0026#39;Allow-DHCPv6\u0026#39;27option proto \u0026#39;udp\u0026#39;28option src \u0026#39;wan\u0026#39;29option src_port \u0026#39;547\u0026#39;30option dest_port \u0026#39;546\u0026#39;31option target \u0026#39;ACCEPT\u0026#39;32option family \u0026#39;ipv6\u0026#39; OpenWRT DHCP 配置  1# /etc/config/dhcp2...3config dhcp \u0026#39;lan\u0026#39;4option interface \u0026#39;lan\u0026#39;5option start \u0026#39;100\u0026#39;6option dhcpv4 \u0026#39;server\u0026#39;7option limit \u0026#39;200\u0026#39;8option force \u0026#39;1\u0026#39;9option leasetime \u0026#39;2h\u0026#39;10option ra \u0026#39;server\u0026#39;# RA服务 服务器模式11option dhcpv6 \u0026#39;server\u0026#39;# DHCPv6服务 服务器模式12list ra_flags \u0026#39;none\u0026#39;# RA标记 无1314config dhcp \u0026#39;wan\u0026#39;15option interface \u0026#39;wan\u0026#39;16option ignore \u0026#39;1\u0026#39;17list ra_flags \u0026#39;none\u0026#39;1819config odhcpd \u0026#39;odhcpd\u0026#39;20option maindhcp \u0026#39;0\u0026#39;21option leasefile \u0026#39;/tmp/hosts/odhcpd\u0026#39;22option leasetrigger \u0026#39;/usr/sbin/odhcpd-update\u0026#39;23option loglevel \u0026#39;4\u0026#39;24重启OpenWRT 查看 Luci -\u0026gt; 网络 -\u0026gt; 接口 -\u0026gt; LAN，已拿到的IPv6地址 测试本机外网IPv6地址，与 LAN 的 IPv6地址一致即可   1$ curl 6.ipw.cn  参考文档  IPv6 configuration IPv6 原理及如何设置 OpenWrt 如何配置防火墙 IPv6  ","link":"https://cuile.github.io/posts/openwrt/openwrt_ipv6/","section":"posts","tags":["firewall","network","ipv6"],"title":"OpenWRT 配置 IPv6"},{"body":"","link":"https://cuile.github.io/series/","section":"series","tags":null,"title":"Series"},{"body":"x86    版本 说明     64 用于现代PC硬件（大约在2007年以后的产品），它是为具有64位功能的计算机而构建的，并支持现代CPU功能。除非有充分的理由，否则请选择此选项。   Generic 仅适用于32位硬件（旧硬件或某些Atom处理器），应为i586 Linux体系结构，将在Pentium 4及更高版本上运行。仅当您的硬件无法运行64位版本时才使用此功能。   Legacy 用于奔腾4之前的非常旧的PC硬件，在Linux体系结构支持中称为i386。它会错过许多现代硬件上想要/需要的功能，例如多核支持以及对超过1GB RAM的支持，但实际上会在较旧的硬件上运行，而其他版本则不会。   Geode 是为Geode SoC定制的自定义旧版目标，Geode SoC仍在许多（老化的）网络设备中使用，例如PCEngines的较旧Alix板。       文件名 说明     Combined 组合的，包括bootloader、kernel、rootfs   squashfs 该磁盘映像使用传统的OpenWrt布局，一个squashfs只读根文件系统和一个读写分区，在其中存储您安装的设置和软件包。由于此映像的组装方式，您只有230 兆MB的空间来存储其他程序包和配置，而Extroot不起作用。squashfs适用于直接编译带有软件包的openwrt系统，方便重置路由器，不必从安装包重新刷机。   ext4 此磁盘映像使用单个读写ext4分区，没有只读squashfs根文件系统，因此可以扩大分区。故障安全模式或出厂重置等功能将不可用，因为它们需要只读的squashfs分区才能起作用。选择64的情况下，ext4适合我们扩容，并安装软件包。   efi 指的是UEFI，可以使用GPT分区列表，是较新的技术，性能和可扩展性上更好，不带efi的则是使用Legacy。   bootloader 引导程序   kernel Linux内核   rootfs openwrt根系统    参考文档  OpenWrt on x86 hardware (PC / VM / server) 安装OpenWrt到电脑，安装包选哪个？ openwrt x86版本 原版Openwrt在x86平台上的安装和配置以及常用插件安装  ","link":"https://cuile.github.io/posts/openwrt/openwrt_version/","section":"posts","tags":["version"],"title":"OpenWRT 版本区别"},{"body":"","link":"https://cuile.github.io/tags/version/","section":"tags","tags":null,"title":"version"},{"body":"","link":"https://cuile.github.io/tags/bbr/","section":"tags","tags":null,"title":"bbr"},{"body":"查看系统内核 1$ uname -r kernel 4.9 及以上已支持 tcp_bbr，看内核版本是否大于等于4.9，否则要升级内核，或者安装bbr。\nbbr2 效果要好于 bbr，相当原理可查看参考文档\n配置拥塞算法 1# 查看可用的拥塞算法 2$ sysctl net.ipv4.tcp_available_congestion_control 3 4# 查看使用的拥塞算法 5$ sysctl net.ipv4.tcp_congestion_control 6 7# 设置拥塞算法 8$ sysctl -w net.core.default_qdisc=fq 9$ sysctl -w net.ipv4.tcp_congestion_control=bbr 10 11# 查看设置结果 12$ lsmod | grep bbr 配置持久化 1$ echo \u0026#34;net.core.default_qdisc=fq\u0026#34; \u0026gt;\u0026gt; /etc/sysctl.conf 2$ echo \u0026#34;net.ipv4.tcp_congestion_control=bbr\u0026#34; \u0026gt;\u0026gt; /etc/sysctl.conf 3$ sysctl -p 参考文档  从流量控制算法谈网络优化 – 从 CUBIC 到 BBRv2 算法 linux手动配置BBR Linux 网络调优：内核网络栈参数篇 net.core.default_qdisc  ","link":"https://cuile.github.io/posts/proxmox/bbr/","section":"posts","tags":["proxmoxve","tcp","bbr"],"title":"ProxmoxVE 配置 BBR"},{"body":"","link":"https://cuile.github.io/tags/tcp/","section":"tags","tags":null,"title":"tcp"},{"body":"修改JS文件 1$ nano /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js 6.0+ (380行)\n1if (data.status !== \u0026#39;Active\u0026#39;) { 替换为\n1if (false) { 重启服务\n1$ systemctl restart pveproxy.service 参考文档  PVE 去掉登录后无效订阅提示  ","link":"https://cuile.github.io/posts/proxmox/subscription/","section":"posts","tags":["proxmoxve","subscription"],"title":"ProxmoxVE 关闭订阅提示"},{"body":"","link":"https://cuile.github.io/tags/subscription/","section":"tags","tags":null,"title":"subscription"},{"body":"文件合并 1cat info.log error.log \u0026gt; merge.log.bak 2cp merge.log.bak merge.log 文件拆分  文件截取 linux分片切割CSV文件_linux 如何快速把csv文件拆分成多个-CSDN博客  ","link":"https://cuile.github.io/posts/linux/txt/","section":"posts","tags":["linux","cli","txt"],"title":"Linux 文本文件操作"},{"body":"","link":"https://cuile.github.io/tags/txt/","section":"tags","tags":null,"title":"txt"},{"body":"","link":"https://cuile.github.io/tags/deepin/","section":"tags","tags":null,"title":"deepin"},{"body":"安装 xrdp\n1$ sudo apt install xrdp 启动xrdp服务，并设置为开机启动\n1$ sudo systemctl start xrdp 2$ sudo systemctl enable xrdp 解决黑屏/空屏/无画面\n1$ nano /etc/xrdp/startwm.sh 1unset DBUS_SESSION_BUS_ADDRESS 2unset XDG_RUNTIME_DIR 3. $HOME/.profile     重启deepin，使用Xorg模式登录     参考文档  Deepin下安装XRDP远程连接 Ubuntu/Debian/Kali xrdp远程桌面黑屏/空屏/无画面解决办法  ","link":"https://cuile.github.io/posts/linux/deepin_xrdp/","section":"posts","tags":["linux","deepin","rdp"],"title":"Deepin 使用远程桌面"},{"body":"","link":"https://cuile.github.io/tags/rdp/","section":"tags","tags":null,"title":"rdp"},{"body":"","link":"https://cuile.github.io/tags/hyper-v/","section":"tags","tags":null,"title":"Hyper-V"},{"body":"在hyper-v虚拟机下调节分辨率 1$ sudo nano /etc/default/grub 修改配置项\n1GRUB_CMDLINE_LINUX_DEFAULT=\u0026#34;quiet splash video=hyperv_fb:1366x768\u0026#34; 更新 grub\n1$ sudo /usr/lib/deepin-api/adjust-grub-theme 2$ sudo update-grub 注意：这种方法最高只能支持 1920×1080 的分辨率，对于大显示器，高 DPI 的童鞋，可以考虑用 RDP，VNC 等方式来用上更高的分辨率。\n参考文档  https://www.jianshu.com/p/f7fd7b708a65  ","link":"https://cuile.github.io/posts/windows/hyper-v_deepin_resolution/","section":"posts","tags":["deepin","Hyper-V","系统配置","windows"],"title":"Hyper-V 下设置 Deepin 分辨率"},{"body":"","link":"https://cuile.github.io/tags/crontab/","section":"tags","tags":null,"title":"crontab"},{"body":"","link":"https://cuile.github.io/series/django/","section":"series","tags":null,"title":"django"},{"body":"参考文档  kraiz/django-crontab 使用django-crontab建立定时任务 Linux crontab 命令  ","link":"https://cuile.github.io/posts/django/django_crontab/","section":"posts","tags":["crontab","python"],"title":"Django crontab 使用说明"},{"body":"","link":"https://cuile.github.io/series/python/","section":"series","tags":null,"title":"Python"},{"body":"","link":"https://cuile.github.io/tags/reload/","section":"tags","tags":null,"title":"reload"},{"body":"不同版本中，不同的表现形式：\n Python 2.x：reload() 是内置函数 Python 3.0 - 3.3：使用 imp.reload(module) Python 3.4：imp 已经被废弃，取而代之的是 importlib  1from importlib import reload 2 3reload(\u0026lt;module\u0026gt;) 参考文档\n Python 重新加载模块 reload  ","link":"https://cuile.github.io/posts/python/python_shell_import_reload/","section":"posts","tags":["reload"],"title":"在 Python Shell 中重新导入模块"},{"body":"","link":"https://cuile.github.io/tags/alpine-linux/","section":"tags","tags":null,"title":"alpine linux"},{"body":"","link":"https://cuile.github.io/tags/remote-ssh/","section":"tags","tags":null,"title":"remote ssh"},{"body":"VsCode Remote SSH 默认是不支持 Alpine Linux 的，不过，对 Alpine Linux 进行一些改动，就可以实现，比较方便。\n步骤如下：\n安装  安装 Bash 安装需要的包  1$ apk del dropbear 2$ apk add gcompat libstdc++6 openssh wget git Alpine 配置 1$ nano /etc/ssh/sshd-config 1AllowTcpForwarding yes 2PermitTunnel yes git 配置  VsCode 连接 Alpine Linux F1 \u0026gt; \u0026quot;Preferences: Open Remote Settings (JSON) (SSH: )\u0026quot; 添加下面的内容：  1{ 2\t\u0026#34;git.path\u0026#34;: \u0026#34;/usr/bin/git\u0026#34;, 3} 参考文档：  Alpine Linux and VS Code Remote SSH Working with Remote SSH in Alpine ssh_config(5) — Linux manual page  ","link":"https://cuile.github.io/posts/vscode/vscode_with_remote_ssh_in_alpine_linux/","section":"posts","tags":["alpine linux","remote ssh","vscode"],"title":"VsCode 使用 Remote SSH 连接 Alpine Linux"},{"body":"Alpine Linux 原始安装的是 busybox，小巧精干，但毕竟与主流的 Bash 还是有区别，特别是与其它系统联动时会比较麻烦，所以还是安装 Bash，统一 Shell 环境，方便日后使用。\n而且基本网上的安装教程都有问题，所以这里给出正确的安装步骤。\n安装 1$ apk add bash libuser 配置 1$ touch /etc/login.defs 2$ mkdir /etc/default 3$ touch /etc/default/useradd 4$ lchsh \u0026lt;root\u0026gt; 5Changing shell for root. 6Password: \u0026lt;root password\u0026gt; 7New Shell [/bin/ash]: /bin/bash 8Shell changed. 参考文档：  Working with Remote SSH in Alpine Linux命令之 chsh -- 用来更换登录系统时使用的shell  ","link":"https://cuile.github.io/posts/alpine_linux/bash/","section":"posts","tags":["linux","alpine linux","bash"],"title":"Alpine Linux 安装 Bash"},{"body":"","link":"https://cuile.github.io/tags/bash/","section":"tags","tags":null,"title":"bash"},{"body":"","link":"https://cuile.github.io/tags/frp/","section":"tags","tags":null,"title":"frp"},{"body":"1. 使用手册 看完这3篇足以把服务建起来，非常方便\n 官方文档 教程1 教程2  2. 服务端安装配置 可直接使用 Docker 的配置进行\n3. 客户端下载、 安装、运行 原本也想使用Docker镜像，但发现kvm之间通过Docker通信好像有问题，所幸在宿主机上可以直接使用release文件。 【注意：每次添加新的客户端，要同步更新服务端的端口配置】\n3.1. 下载 官网下载地址【注意：s, c两端使用的版本号要相同】\n1$ cd ~ 2# 下载安装软件 3$ yum install wget tar git 4# 下载 frp 5$ wget -c https://github.com/fatedier/frp/releases/download/v0.34.3/frp_0.34.3_linux_amd64.tar.gz 6$ tar -axvf frp_0.34.3_linux_amd64.tar.gz 7$ rm -rf frp_0.34.3_linux_amd64.tar.gz 8# 下载 frp 配置 9$ git clone https://github.com/Cuile/frp.git 3.2. 安装 1# 此处只能使用硬链接，使用软链接会导致无法启动服务 2# 安装配置文件 3$ mkdir /etc/frp 4$ ln -b ~/frp/conf/frpc-pve.ini /etc/frp/frpc.ini 5# 安装运行文件 6$ ln -b ~/frp_0.34.3_linux_amd64/frpc /usr/bin/frpc 7# 安装服务 8$ ln -b ~/frp_0.34.3_linux_amd64/systemd/frpc.service /lib/systemd/system/frpc.service 3.3. 运行 1$ systemctl enable frpc.service ##设定指定服务开机开启 2$ systemctl disable frpc.service ##设定指定服务开机关闭 3 4$ systemctl start frpc.service 5$ systemctl stop frpc.service 6$ systemctl restart frpc.service 7 8$ systemctl status frpc.service 9$ systemctl list-units | grep frpc 3.4. 更新 通过 git 更新 frpc 的配置后，要重新链接配置文件\n1$ bash ~/frp/CentOS/restart.frpc.service.sh ","link":"https://cuile.github.io/posts/linux/frp_install/","section":"posts","tags":["linux","frp","proxy"],"title":"frp安装配置"},{"body":"WindTerm 无法认证 WindTerm客户端，取消 “会话设置 -\u0026gt; SSH -\u0026gt; 验证 -\u0026gt; 尝试键盘交互认证” 可已正常连接。\n安装 OpenSSH Server 1$ apk update 2$ apk add openssh-server openssh 1; /etc/ssh/sshd_config 2 3# 开放Root登录 4- #PermitRootLogin prohibit-password 5+ PermitRootLogin yes 6 7# 允许其它用户登录 8- #PasswordAuthentication yes 9+ PasswordAuthentication yes 10 11# 解决ssh自动断开 12- #ClientAliveInterval 0 13- #ClientAliveCountMax 3 14+ ClientAliveInterval 60 15+ ClientAliveCountMax 3 1$ rc-service sshd start 2 3$ rc-service sshd restart 4# 设置开机启动 5$ rc-update add sshd 6# 删除开机启动服务 7$ rc-update del sshd 8# 显示所有服务 9# rc-status -a  Alpine安装SSH服务，并开启SSH远程登录  终端配置 在 /etc/profile.d 文件夹下，创建sh文件来实现。\n1# /etc/profile.d/30user.sh 2+ alias ll=\u0026#39;ls -la --color=tty\u0026#39; 3# Alpine Linux BusyBox 不支持日期格式 4# [HH:MM] path 5# [user@hostname] 命令提示符 6+ export PS1=\u0026#39;\\[\\e[36;40m\\][\\A] \\[\\e[0m\\] \\[\\e[35;40m\\]\\w\\[\\e[0m\\]\\n\\[\\e[33;40m\\][\\u@\\H]\\[\\e[0m\\] \\\\$ \u0026#39; 7# keychain 8+ eval `keychain --eval ~/.ssh/github.com`  busybox：ash：PS1：支持的内部替换变量  修改时区 1# 查看当时时间 2$ date -R 3# 修改到 +8 时区 4$ apk add tzdata 5$ cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime 6$ echo \u0026#34;Asia/Shanghai\u0026#34; \u0026gt; /etc/timezone 7$ apk del tzdata 修改主机名 1; /etc/hostname 2\u0026lt;hostname\u0026gt; 1$ reboot ","link":"https://cuile.github.io/posts/alpine_linux/manual/","section":"posts","tags":["linux","alpine linux","cli"],"title":"Alpine Linux 配置"},{"body":"","link":"https://cuile.github.io/tags/screen/","section":"tags","tags":null,"title":"screen"},{"body":"已弃用，转到 tmux\n创建屏幕 1# 离线方式创建屏幕，一般用在启动脚本 2$ screen -S \u0026lt;screen_name\u0026gt; -d -m 查年屏幕 1$ screen -ls 执行命令 1# 在指定屏幕内输入cmd，注意\\n代表回车 2$ screen -S \u0026lt;screen_name\u0026gt; -X stuff \u0026#34;\u0026lt;cmd\u0026gt;\\n\u0026#34; 3# 在当前窗口内，通过另一个过滤进程控制窗口的输入或输出。 4# 非常复杂，还没有搞明白有什么用 5# 官方建议：小心使用！ 6$ screen -S \u0026lt;screen_name\u0026gt; -X |\u0026lt;cmd\u0026gt; 7$ screen -S \u0026lt;screen_name\u0026gt; -X !..|\u0026lt;cmd\u0026gt; 8$ screen -S \u0026lt;screen_name\u0026gt; -X exec\u0026lt;cmd\u0026gt; 参考文档\n screen stuff screen exec  离开屏幕 在 screen 终端下，按 Ctrl+a d 键\n退出屏幕 1# 进入指定屏幕，再退出 2$ screen -r \u0026lt;screen_name|pid\u0026gt; 3$ exit 4# 指定屏幕，直接退出 5$ screen -S \u0026lt;screen_name\u0026gt; -X quit ","link":"https://cuile.github.io/posts/linux/screen_manual/","section":"posts","tags":["linux","cli","screen"],"title":"screen 命令"},{"body":"","link":"https://cuile.github.io/tags/systemd/","section":"tags","tags":null,"title":"Systemd"},{"body":"systemctl命令 1systemctl list-units ##列出当前系统服务的状态 2systemctl list-unit-files ##列出服务的开机状态 3systemctl status sshd ##查看指定服务的状态 4systemctl stop sshd ##关闭指定服务 5systemctl start sshd ##开启指定服务 6systemctl restart sshd ##从新启动服务 7systemctl enable sshd ##设定指定服务开机开启 8systemctl disable sshd ##设定指定服务开机关闭 9systemctl reload sshd ##使指定服务从新加载配置 10systemctl list-dependencies sshd ##查看指定服务的倚赖关系 11systemctl mask sshd ##冻结指定服务 12systemctl unmask sshd ##启用服务 13systemctl set-default multi-user.target ##开机不开启图形 14systemctl set-default graphical.target ##开机启动图形 设置主机名 1$ _hostname_=XXXX 2$ hostnamectl --static set-hostname ${_hostname_} 3$ hostnamectl --transient set-hostname ${_hostname_} 4$ hostnamectl --pretty set-hostname ${_hostname_}  hostnamectl 参考  修改服务器时区 1$ timedatectl set-timezone Asia/Shanghai  timedatectl 参考  ","link":"https://cuile.github.io/posts/linux/systemd/","section":"posts","tags":["Linux","CLI","Systemd"],"title":"Systemd 系统工具命令指南"},{"body":"遇事不决，多读文档！\n虚拟机 创建 使用命令行创建 VM 非常方便，而且还可以使用各发行版的云镜像，快速创建速度又快，占用空间又小，非常方便。\n 1# 增加硬盘空间 2# 建议从模板创建虚拟机后，再增加虚拟机硬盘的空间，这样可以保持模板的大小 3qm disk resize \u0026lt;VM_ID\u0026gt; scsi0 +30G 4 5# 关闭 6qm stop \u0026lt;vmid\u0026gt; 7# 如果关闭失败 8qm list 9# 找到 vm 对应的 pid 10kill \u0026lt;pid\u0026gt; 11 12# 删除 13qm destroy \u0026lt;vmid\u0026gt; --destroy-unreferenced-disks 1 --purge 1 --skiplock 1 14 15# 强制删除 16rm -f /etc/pve/nodes/*/*/\u0026lt;vm_id\u0026gt;.conf 17# [修復Proxmox VE：無法刪除虛擬機器](https://blog.pulipuli.info/2014/08/proxmox-ve-fix-proxmox-ve-destroy.html#postcataproxmox-ve-fix-proxmox-ve-destroy.html0_anchor2)  LXC容器 1# 关闭 2pct stop \u0026lt;vmid\u0026gt; 3pct list  存储 1# 查看存储空间使用情况 2pvesm status 3 4# 查看存储内的文件 5pvesm list \u0026lt;storage\u0026gt; 6 7# 查看存储配置 8cat /etc/pve/storage.cfg 9 10# 给local存储添加存储类型 11pvesm set local --content snippets,rootdir,import,images,backup,vztmpl,iso 12# 注意！！！片段文件只能放在 /var/lib/vz/snippets/ 目录下，不支持子目录 13 14# 将local-lvm(LVM-Thin)合并到local 15# 移动虚拟机硬盘到local 16qm disk move \u0026lt;vmid\u0026gt; \u0026lt;disk\u0026gt; \u0026lt;storage\u0026gt; --format qcow2 --delete 1 17# 移动容器卷到local 18pct move-volume \u0026lt;vmid\u0026gt; \u0026lt;volume\u0026gt; \u0026lt;storage\u0026gt; --delete 1 19# 删除local-lvm存储 20lvremove pve/data 21# 空间合并到local 22lvextend -l +100%FREE -r pve/root 23# 在WebUI的“数据中心”-\u0026#34;存储\u0026#34;里，手动移除local-lvm ","link":"https://cuile.github.io/posts/proxmox/cli/","section":"posts","tags":["ProxmoxVE","CLI"],"title":"ProxmoxVE 命令行"},{"body":"使用Hyper-V安装CentOS虚拟机，使用起来非常方便。但遇到磁盘空间不够时，不像Windows虚拟机那样方便给磁盘空间扩容。 总体两分二步：\n1. vhdx扩容 关闭虚拟机，然后给磁盘扩容，操作方便网上教程多，这里不再赘述。\n2. CentOS扩容 2.1 查看分区表 1$ lsblk 2NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT 3sda 8:0 0 20G 0 disk 4├─sda1 8:1 0 200M 0 part /boot/efi 5├─sda2 8:2 0 1G 0 part /boot 6└─sda3 8:3 0 8.8G 0 part 7 ├─centos-root 253:0 0 7.8G 0 lvm / 8 └─centos-swap 253:1 0 1G 0 lvm [SWAP] 以上内容可以看出，sda已经扩容到20G，但sda1+sda2+sda3只有10G说明vhdx扩容成功。\n2.2 建立新分区 1$ fdisk /dev/sda 2 3The device presents a logical sector size that is smaller than 4the physical sector size. Aligning to a physical sector (or optimal 5I/O) size boundary is recommended, or performance may be impacted. 6欢迎使用 fdisk (util-linux 2.23.2)。 7 8更改将停留在内存中，直到您决定将更改写入磁盘。 9使用写入命令前请三思。 10 11 12命令(输入 m 获取帮助)：n 13Partition type: 14 p primary (1 primary, 0 extended, 3 free) 15 e extended 16Select (default p): 17Using default response p 18分区号 (2-4，默认 2)： 19起始 扇区 (20971520-41943039，默认为 20971520)： 20将使用默认值 20971520 21Last 扇区, +扇区 or +size{K,M,G} (20971520-41943039，默认为 41943039)：+10G 22值超出范围。 23Last 扇区, +扇区 or +size{K,M,G} (20971520-41943039，默认为 41943039)：+9.9G 24不支持的后缀：“.9G”。 25支持：10^N: KB (千字节), MB (兆字节), GB (吉字节) 26 2^N: K (约千字节), M (约兆字节), G (约吉字节) 27Last 扇区, +扇区 or +size{K,M,G} (20971520-41943039，默认为 41943039)：+9G 28分区 2 已设置为 Linux 类型，大小设为 9 GiB 29 30命令(输入 m 获取帮助)：w 31The partition table has been altered! 32 33Calling ioctl() to re-read partition table. 34 35WARNING: Re-reading the partition table failed with error 16: 设备或资源忙. 36The kernel still uses the old table. The new table will be used at 37the next reboot or after you run partprobe(8) or kpartx(8) 38正在同步磁盘。 重读分区表时，发生错误 1$ partprobe 2Error: 备份 GPT 表不像应该的那样出现在磁盘的末尾。这可能意味这其它操作系统相信磁盘小一些。通过将备份移动到末尾 (并删除旧备份) 来修正？ 3Warning: Not all of the space available to /dev/sda appears to be used, you can fix the GPT to use all of the space (an extra 20971520 blocks) or continue with the current setting? 查看分区表时，发现新分区未创建成功 1$ lsblk 2NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT 3sda 8:0 0 20G 0 disk 4├─sda1 8:1 0 200M 0 part /boot/efi 5├─sda2 8:2 0 1G 0 part /boot 6└─sda3 8:3 0 8.8G 0 part 7 ├─centos-root 253:0 0 7.8G 0 lvm / 8 └─centos-swap 253:1 0 1G 0 lvm [SWAP] 9 使用 parted 修复分区表 1$ parted /dev/sda 2GNU Parted 3.1 3使用 /dev/sda 4Welcome to GNU Parted! Type \u0026#39;help\u0026#39; to view a list of commands. 5(parted) p 6错误: 备份 GPT 表不像应该的那样出现在磁盘的末尾。这可能意味这其它操作系统相信磁盘小一些。通过将备份移动到末尾 (并删除旧备份) 来修正？ 7修正/Fix/忽略/Ignore/放弃/Cancel? fix 8警告: Not all of the space available to /dev/sda appears to be used, you can fix the GPT to use all of the space (an extra 20971520 blocks) or continue with the current 9setting? 10修正/Fix/忽略/Ignore? fix 11Model: Msft Virtual Disk (scsi) 12Disk /dev/sda: 21.5GB 13Sector size (logical/physical): 512B/4096B 14Partition Table: gpt 15Disk Flags: 16 17Number Start End Size File system Name 标志 18 1 1049kB 211MB 210MB fat16 EFI System Partition 启动 19 2 211MB 1285MB 1074MB xfs 20 3 1285MB 10.7GB 9452MB lvm 21 22(parted) p 23Model: Msft Virtual Disk (scsi) 24Disk /dev/sda: 21.5GB 25Sector size (logical/physical): 512B/4096B 26Partition Table: gpt 27Disk Flags: 28 29Number Start End Size File system Name 标志 30 1 1049kB 211MB 210MB fat16 EFI System Partition 启动 31 2 211MB 1285MB 1074MB xfs 32 3 1285MB 10.7GB 9452MB lvm 33 34(parted) quit 再次建立新分区 1$ fdisk /dev/sda 2WARNING: fdisk GPT support is currently new, and therefore in an experimental phase. Use at your own discretion. 3欢迎使用 fdisk (util-linux 2.23.2)。 4 5更改将停留在内存中，直到您决定将更改写入磁盘。 6使用写入命令前请三思。 7 8 9命令(输入 m 获取帮助)：n 10分区号 (4-128，默认 4)： 11第一个扇区 (34-41943006，默认 20969472)： 12Last sector, +sectors or +size{K,M,G,T,P} (20969472-41943006，默认 41943006)：+10G 13已创建分区 4 14 15 16命令(输入 m 获取帮助)：w 17The partition table has been altered! 18 19Calling ioctl() to re-read partition table. 20 21WARNING: Re-reading the partition table failed with error 16: 设备或资源忙. 22The kernel still uses the old table. The new table will be used at 23the next reboot or after you run partprobe(8) or kpartx(8) 24正在同步磁盘。 2.3 重读分区表 1$ partprobe 重读分区表，正常不会有任何输出\n再次查看分区表，可以看到 sda4 分区已经创建好了 1$ lsblk 2NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT 3sda 8:0 0 20G 0 disk 4├─sda1 8:1 0 200M 0 part /boot/efi 5├─sda2 8:2 0 1G 0 part /boot 6├─sda3 8:3 0 8.8G 0 part 7│ ├─centos-root 253:0 0 7.8G 0 lvm / 8│ └─centos-swap 253:1 0 1G 0 lvm [SWAP] 9└─sda4 8:4 0 10G 0 part 2.4 将 sda4 分区加入 centos-root 分区 1$ lvm 2lvm\u0026gt; pvcreate /dev/sda4 3 Physical volume \u0026#34;/dev/sda4\u0026#34; successfully created. 4lvm\u0026gt; pvdisplay 5 --- Physical volume --- 6 PV Name /dev/sda3 7 VG Name centos 8 PV Size 8.80 GiB / not usable 2.00 MiB 9 Allocatable yes (but full) 10 PE Size 4.00 MiB 11 Total PE 2253 12 Free PE 0 13 Allocated PE 2253 14 PV UUID D5K7Ds-a0I8-67Kt-LE1J-HKi7-aaKX-CLaJTg 15 16 \u0026#34;/dev/sda4\u0026#34; is a new physical volume of \u0026#34;10.00 GiB\u0026#34; 17 --- NEW Physical volume --- 18 PV Name /dev/sda4 19 VG Name 20 PV Size 10.00 GiB 21 Allocatable NO 22 PE Size 0 23 Total PE 0 24 Free PE 0 25 Allocated PE 0 26 PV UUID digjnH-8XFC-kMQT-nOEL-y9FJ-ImaB-t8FB7d 27 28lvm\u0026gt; vgdisplay 29 --- Volume group --- 30 VG Name centos 31 System ID 32 Format lvm2 33 Metadata Areas 1 34 Metadata Sequence No 3 35 VG Access read/write 36 VG Status resizable 37 MAX LV 0 38 Cur LV 2 39 Open LV 2 40 Max PV 0 41 Cur PV 1 42 Act PV 1 43 VG Size 8.80 GiB 44 PE Size 4.00 MiB 45 Total PE 2253 46 Alloc PE / Size 2253 / 8.80 GiB 47 Free PE / Size 0 / 0 48 VG UUID f77tkP-7xzc-qcyf-t0JN-OYOQ-ZfLL-PJPD8w 49 50lvm\u0026gt; vgextend centos /dev/sda4 51 Volume group \u0026#34;centos\u0026#34; successfully extended 52lvm\u0026gt; vgdisplay 53 --- Volume group --- 54 VG Name centos 55 System ID 56 Format lvm2 57 Metadata Areas 2 58 Metadata Sequence No 4 59 VG Access read/write 60 VG Status resizable 61 MAX LV 0 62 Cur LV 2 63 Open LV 2 64 Max PV 0 65 Cur PV 2 66 Act PV 2 67 VG Size \u0026lt;18.80 GiB 68 PE Size 4.00 MiB 69 Total PE 4812 70 Alloc PE / Size 2253 / 8.80 GiB 71 Free PE / Size 2559 / \u0026lt;10.00 GiB 72 VG UUID f77tkP-7xzc-qcyf-t0JN-OYOQ-ZfLL-PJPD8w 73 74lvm\u0026gt; lvextend -l +100%FREE /dev/centos/root 75 Size of logical volume centos/root changed from 7.80 GiB (1997 extents) to \u0026lt;17.80 GiB (4556 extents). 76 Logical volume centos/root successfully resized. 77lvm\u0026gt; exit 78 Exiting. 79 80$ xfs_growfs /dev/centos/root 81meta-data=/dev/mapper/centos-root isize=512 agcount=4, agsize=511232 blks 82 = sectsz=4096 attr=2, projid32bit=1 83 = crc=1 finobt=0 spinodes=0 84data = bsize=4096 blocks=2044928, imaxpct=25 85 = sunit=0 swidth=0 blks 86naming =version 2 bsize=4096 ascii-ci=0 ftype=1 87log =internal bsize=4096 blocks=2560, version=2 88 = sectsz=4096 sunit=1 blks, lazy-count=1 89realtime =none extsz=4096 blocks=0, rtextents=0 90data blocks changed from 2044928 to 4665344 再次查看磁盘容量与分区表，centos-root分区空间已经扩容为17.8G 1$ df -h 2文件系统 容量 已用 可用 已用% 挂载点 3devtmpfs 876M 0 876M 0% /dev 4tmpfs 887M 0 887M 0% /dev/shm 5tmpfs 887M 8.4M 879M 1% /run 6tmpfs 887M 0 887M 0% /sys/fs/cgroup 7/dev/mapper/centos-root 18G 7.3G 11G 41% / 8/dev/sda2 1014M 215M 800M 22% /boot 9/dev/sda1 200M 12M 189M 6% /boot/efi 10tmpfs 178M 0 178M 0% /run/user/0 11 12$ lsblk 13NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT 14sda 8:0 0 20G 0 disk 15├─sda1 8:1 0 200M 0 part /boot/efi 16├─sda2 8:2 0 1G 0 part /boot 17├─sda3 8:3 0 8.8G 0 part 18│ ├─centos-root 253:0 0 17.8G 0 lvm / 19│ └─centos-swap 253:1 0 1G 0 lvm [SWAP] 20└─sda4 8:4 0 10G 0 part 21 └─centos-root 253:0 0 17.8G 0 lvm / 参考文档  Hyper-v下Centos实现扩容硬盘磁盘空间大小  ","link":"https://cuile.github.io/posts/windows/hyper-v_centos_disk_expansion/","section":"posts","tags":["CentOS","Hyper-V","windows","系统配置"],"title":"Hyper-V 环境下给 CentOS 磁盘扩容"},{"body":"Hyper-V 环境下安装 Linux 是无法调节分辨率的，但可以通过设置指定分辨率，不过最大只能支持1920x1080\n1. 修改配置文件 1$ sudo nano /etc/default/grub 将配置\n1GRUB_CMDLINE_LINUX_DEFAULT=\u0026#34;quiet splash \u0026#34; 修改为\n1GRUB_CMDLINE_LINUX_DEFAULT=\u0026#34;quiet splash video=hyperv_fb:1920x1080\u0026#34; 这里要注意屏幕的实际分辨率，在15寸的笔记本上，适合的分辨率为1600x900\n2. 更新 Grub 1$ sudo update-grub 3. 重启 1$ reboot 参考文档 Hyper-V 下 Ubuntu/Deepin 如何设置分辨率\n","link":"https://cuile.github.io/posts/windows/hyper-v_ubuntu_resolution/","section":"posts","tags":["Ubuntu","Hyper-V","系统配置","windows"],"title":"Hyper-V 下设置 Ubuntu 分辨率"},{"body":"","link":"https://cuile.github.io/tags/ubuntu/","section":"tags","tags":null,"title":"Ubuntu"},{"body":"一般新电脑买来都默认安排家庭版，相比专业版一个主要的区别就是没有Hpyer-V 功能。 Hpyer-V 功能支持虚拟机，Windows原生的虚拟机在资源占用方便很有优势，不只是对开发人员有用，对日常办公也非常方便。\n 常用的办公软件环境统一 迁移方便 控制流氓软件占用资源 可随时通过还原点，还原系统  1. 安装脚本 1pushd \u0026#34;%~dp0\u0026#34; 2 3dir /b %SystemRoot%\\servicing\\Packages\\*Hyper-V*.mum \u0026gt;hyper-v.txt 4 5for /f %%i in (\u0026#39;findstr /i . hyper-v.txt 2^\u0026gt;nul\u0026#39;) do dism /online /norestart /add-package:\u0026#34;%SystemRoot%\\servicing\\Packages\\%%i\u0026#34; 6 7del hyper-v.txt 8 9Dism /online /enable-feature /featurename:Microsoft-Hyper-V-All /LimitAccess /ALL 保存为Hyper-V.cmd\n2. 运行脚本 将脚本放到桌面，右键“以管理员身份运行”，等待安装结束后，就可以使用 Hyper-V 功能了。\n3. 其它  在 Windows 或 Windows Server 的 Hyper-V 中升级虚拟机版本  ","link":"https://cuile.github.io/posts/windows/hyper-v_windows10/","section":"posts","tags":["Windows","Hyper-V","系统配置"],"title":"Windows 10 家庭版安装 Hyper-V"},{"body":"1. 网络配置的方法  1.1 Hyper-V 安装完后，将自动创建一个“默认虚拟交换机”，并同时创建一个同名的虚拟网卡。  此交换机名及虚拟网卡都无法修改，虚拟机直接填加即可使用网络。 虚拟机之间互联，再创建一个“内部交换机”，添加到虚拟机并设置同一网段即可。 缺点：速度较慢   1.2 将宿主机物理网卡直接共享给“默认虚拟交换机”创建的虚拟网卡，是比较省事、且高效的方法，相当于在物理网卡上做了一个NAT转换。  优点：“默认虚拟交换机”创建的虚拟网卡IP地址会自动固定为192.168.137.1，所有虚拟机的网段会固定为192.168.137.0。网速较快。 缺点：  在多个物理网卡之间切换时非常不方便； 在ReviOS等第三方精简系统中，运作不稳定。     1.3 在宿主机使用无线网卡时，由于Hyper-V对无线网卡支持的不好，需要做以下操作：  新建“外部虚拟交换机”：  选择宿主机网卡。  勾选“允许管理操作系统共享此网络适配器”。  网速较快。 会在宿主机上创建一个网桥，一个虚拟网卡，且宿主机可同时上网。   反之，则只会添加一个网桥，且宿主机无法同时上网。  这是 Hyper-V 对无线网卡支持不够好的表现，而且网速很慢，慢到什么程度呢？慢到微信连文件都发不出去！       新建“内部虚拟交换机”：  会在宿主机上创建一个虚拟网卡。 将所有虚拟机都接入自建的“内部虚拟交换机”，可以解决IP变化的问题。   在宿主机上，将“外部虚拟交换机”创建的虚拟网卡，共享给“内部虚拟交换机”创建的虚拟网卡。  “内部虚拟交换机”创建的虚拟网卡IP地址会自动固定为192.168.137.1，所有虚拟机的网段会固定为192.168.137.0。   在ReviOS等第三方精简系统中，运作不稳定。    PS:  如在宿主机同时安装了“Windows沙盒”功能，则沙盒会给每个物理网卡和虚拟网卡，都自动的再创建一个对应的虚拟网卡，容易造成混乱，使用中要注意。 Windows 网络共享重启会失效，这个BUG一直没有解决，需要如此解决：  找到“Internet Connection Sharing”服务  启动类型：自动   找到注册表中“HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\SharedAccess”  新建“DWORD(32位)值(D)”：EnableRebootPersistConnection 值（十六进制）：1   重启电脑   最好给每个虚拟机都设置外网DNS，比如1.2.4.8，因为hyper-v的DNS服务不是很稳定。  2. 网络拓扑 使用以下拓扑结构来，解决多个物理网卡随时切换的问题： 宿主机直连路由器，宿主机上创建一个虚拟路由器，和一个虚拟机，宿主机与虚拟机都通过虚拟路由器来上网。\n    TP Route 宿主机 OpenWRT 虚拟机     WLAN \u0026gt;DHCP\nIP: 192.168.10.113\nIP: 192.168.10.114\nmac: ac-8f \u0026gt;Bridge\nIP: -\nmac: ac-8f - -   外部网络 - \u0026gt;WLAN\nIP: 192.168.10.113\nmac: ac-8f \u0026gt;WLAN\nIP: 192.168.10.114\nmac: 01-36 -   内部网络 - \u0026gt;DHCP\nIP: 192.168.123.100\nmac: 01-28 \u0026gt;Static\nIP: 192.168.123.1\nmac: 01-29 \u0026gt;DHCP\nIP: 192.168.123.102\nmac: 01-2c   网桥 - \u0026gt;Switch\nIP: -\nmac: ac-8f - -    可以尝试使用网桥功能，解决多物理网卡切换的问题\n3. 查看网卡、虚拟网卡、虚拟交换机的命令 使用管理员模式，启动 PowerShell\n查看所有网卡\n1get-netadapter 查看虚拟交换机\n1get-vmswitch 查看所有虚拟网卡\n1get-vmnetworkadapter -all 查看在主机上的虚拟网卡\n1get-vmnetworkadapter -managementos 查看网卡组\n1get-netlbfoteam 删除虚拟网卡\n1remove-vmnetworkadapter -managementos -name \u0026#34;xxx\u0026#34; 删除虚拟交换机\n1remove-vmswitch -name \u0026#34;xxx\u0026#34; 删除网卡组 这里要注意删除顺序是，虚拟网卡 \u0026gt; 虚拟交换机 \u0026gt; 网卡组 \u0026gt; 物理网卡。\n1remove-netlbfoteam -name \u0026#34;xxx\u0026#34; 当然还有一个最简单粗暴的命令，删除所有设置，只保留物理网卡，非常简单好用。\n1netcfg -d 参考文档  Hyper-V网络设置  理解Hyper-V外部网络、内部网络、私有网络 删除Windows中隐藏的物理网卡和网络虚拟化失败后的虚拟网卡 Hyper-V 网络配置 如何从设备管理器中删除Hyper-V虚拟交换机扩展适配器 Win10 Hyper-v下虚拟机使用无线网络   Windows 网络共享  Windows 网络共享重启失效解决方案 win10 系统在做双网卡共享Internet问题-已解决！！多谢帮助！！    ","link":"https://cuile.github.io/posts/windows/hyper-v_network/","section":"posts","tags":["network","Hyper-V","系统配置","windows"],"title":"Hyper-V 网络设置"},{"body":"","link":"https://cuile.github.io/tags/docker-compose/","section":"tags","tags":null,"title":"docker compose"},{"body":"command 指令 字符串方式 1command:/bin/bash -c \u0026#34;cp /app/dtest/config.default.yml /app/config.yml \u0026amp;\u0026amp; python -u /app/dtest/tcc.py\u0026#34;2# 另一种方式3command:/bin/bash -c \u0026#34; while true; do sleep 1; done\u0026#34; docker compose command 执行多条指令  配置文件方式 ......\ntty 指令 启动后停在cli，等待登录\n1stdin_open:true# 对应 docker run 中的 -i2tty:true# 对应 docker run 中的 -t","link":"https://cuile.github.io/posts/docker/docker_compose/","section":"posts","tags":["docker compose","Docker"],"title":"Docker Compose 指令"},{"body":"","link":"https://cuile.github.io/series/life-tips/","section":"series","tags":null,"title":"life tips"},{"body":"做朋友式的情人 情人是寂寞路上遇到的人，是相互需要依托的人，是无法光明正大走一辈子的人，是一个和你没有一点家庭关系的人，却让你尝尽男女滋味尽情消魂的人。\n真正的情人是距离的思念，是除了妻子或者丈夫以外的唯一，是锦上添花的极品。但找情人并不容易，也是一种缘分，不是上过床就是情人，它是行走在朋友、红颜知己、爱人边缘的一种感情。比爱人多了一份浪漫，比朋友多了一份知己，比红颜知己多了一层身体上的信息。\n朋友是相互信任，爱人是相互包容，红颜知己是相互欣赏。朋友式的情人就是它们的总和。你成了他的朋友式情人，他会视你为一笔财富，他在你面前会轻松自在。快乐和烦心时都会想到你，他会欣赏你的思想，回味你的笑容，他愿意成为你永远的朋友，任何朋友都取代不了你的位置与感觉，因为你是他朋友式情人。\n做成功情人的秘诀 如果你爱上一个人，又被对方爱着，但又注定你们今后无法生活在一起，而你又不想失去他，那么，你应该懂得做情人的规则，给这个角色一个明确的定位，不该问的不要问，不该说的不要说，不该要求的不要要求，感情要专一、安分，不要有支解和破坏的心理，因为大家都有各自的生活，也不要为他昼夜难眠。分享他的快乐，分担他的痛苦，理解他，把他当作爱人、情人、朋友去疼他，不要给他压力，关心他，体贴他，为他着想。这样的情人才会相爱长久，乃至一生。\n","link":"https://cuile.github.io/posts/tips/tips10/","section":"posts","tags":null,"title":"情人"},{"body":"青春，是与七个自己相遇。一个明媚，一个忧伤，一个华丽，一个冒险，一个倔强，一个柔软，最后那个正在成长。\n不要轻易对别人好，因为只会让别人觉得你的好很廉价。\n当你心情平白无故变得不好，那你肯定是在想某个人了。\n","link":"https://cuile.github.io/posts/tips/tips9/","section":"posts","tags":null,"title":"人生不能靠心情活着，而要靠心态去生活。"},{"body":"懂得，是一种难言的柔情，入心入肺,入骨入髓;懂得，即使不言不语，即使山高水远，彼此的心依然贴近，惺惺相惜没有离。懂得，是发自内心的声音！ 有些人，无需相识，却能通过一段话、一篇字明白彼此的心情。虽然隔着一张屏，一本书，一页纸，因为懂得，所以，她就是那个可以走进自己内心深处的人。\n有些情，无需轰轰烈烈，却能深深铭记在心底一辈子。虽然时光荏苒，青春不在，因为懂得，所以他（她）依然是那个不管是开心或是悲伤都可以在心底温情拥抱的人。\n然而，在我们漫长的一生里，又会遇见几个懂自己的人，就算是遇见了，又会有几个真正愿意懂自己的。这样的人，如果遇到了，或男或女，只需一人便足够了。真正的懂得，不是相邀，也不是牵引，更不是逼迫，而是实实在在自然而然的明白，这样的明白，无关风月，无关功利，甚至无关风雨也无关晴天。\n真正的懂得，不必言语，不必刻意，有时，只需浅浅一个微笑。真正的懂得，不必解释，不必逃避，有时，只需轻轻的一声呼唤。真正的懂得是一种心情，一种欣赏，更是一种心灵的默契。\n懂得，是无声的，也是有声的。每当你开心时，忧伤时，伪装时，失落时，流泪时，甚至你对生活不满抱怨时，无需多言，因为他(她)会说出那句足以让你感动流泪话语：“我知道，我懂得，我明白”。这是一句比爱和喜欢更深情的表白。\n","link":"https://cuile.github.io/posts/tips/tips8/","section":"posts","tags":null,"title":"＂懂你＂比喜欢你更重要"},{"body":"观物  以理观物，看到事物的本质 本性观物，知晓事物的表现 以命观物，知晓过去和未来  上好义则下好义，上好利则下必好利 ","link":"https://cuile.github.io/posts/tips/tips7/","section":"posts","tags":null,"title":"渔樵问对"},{"body":" 明拍马屁 - 先明夸 暗拍马屁 - 再谈一路走来的心得  ","link":"https://cuile.github.io/posts/tips/tips6/","section":"posts","tags":null,"title":"如何不尬聊"},{"body":"仁义礼智信，温良恭俭让，忠孝廉耻勇。 ","link":"https://cuile.github.io/posts/tips/tips5/","section":"posts","tags":null,"title":"传统美德"},{"body":"仗义每多屠狗辈，负心多是读书人。[1]\n参考 [1] 百度百科\n","link":"https://cuile.github.io/posts/tips/tips4/","section":"posts","tags":null,"title":"俗话说"},{"body":"","link":"https://cuile.github.io/tags/git/","section":"tags","tags":null,"title":"git"},{"body":"","link":"https://cuile.github.io/tags/github/","section":"tags","tags":null,"title":"github"},{"body":"","link":"https://cuile.github.io/tags/keychain/","section":"tags","tags":null,"title":"keychain"},{"body":"","link":"https://cuile.github.io/tags/ssh/","section":"tags","tags":null,"title":"ssh"},{"body":"生成新的 SSH Key 1ssh-keygen -t rsa -b 4096 -C \u0026#34;your_email@example.com\u0026#34; 2... 3Enter a file in which to save the key (/home/you/.ssh/algorithm): \u0026lt;key_name\u0026gt; 4Enter passphrase (empty for no passphrase): [输入密码] 5Enter same passphrase again: [再次输入密码] 将新的 SSH Key 添加到 Github  将公钥文件的内容COPY出来  1cat ~/.ssh/\u0026lt;key_name\u0026gt;.pub Github.com -\u0026gt; \u0026quot;Settings\u0026quot; -\u0026gt; \u0026quot;SSH and GPG keys\u0026quot; -\u0026gt; \u0026quot;New SSH key\u0026quot;   Title : 为新密钥添加描述性标签 Key : 粘贴COPY的公钥内容\n \u0026quot;Add SSH key\u0026quot;  使用 SSH 连接到 Github  ssh config  1cd ~/.ssh 2# 设置访问权限 3chmod 600 \u0026lt;key_name\u0026gt; 4# 生成SSH配置文件 5cat \u0026gt; config \u0026lt;\u0026lt; EOF 6Host github.com 7Hostname ssh.github.com 8Port 443 9IdentityFile ~/.ssh/\u0026lt;key_name\u0026gt; 10UpdateHostKeys yes 11Compression yes 12User git 13EOF  Improving Git protocol security on GitHub - The GitHub Blog  连接测试  1ssh -T git@github.com 2... 3Are you sure you want to continue connecting (yes/no)? \u0026lt;yes\u0026gt; 4... 5Hi \u0026lt;username\u0026gt;! You\u0026#39;ve successfully authenticated, but GitHub does not provide shell access. 自动验证 如果找不到软件，直接下载安装 或 更换软件源 Linux 版本库管理\n1# debian 2apt install -y keychain 3# centos 4yum install -y keychain 5# alpine linux 6apk add keychain 7 8# debian or centos in ~/.bashrc or ~/.bash_profile 9# alpine linux in /etc/profile.d/30user.sh 10echo \u0026#34;eval `keychain --eval ~/.ssh/\u0026lt;key_name\u0026gt;`\u0026#34; \u0026gt;\u0026gt; ~/.bashrc 11... 12 * Adding 1 ssh key(s): /home/\u0026lt;username\u0026gt;/.ssh/\u0026lt;key_name\u0026gt; 13 * ssh-add: Identities added: /home/\u0026lt;username\u0026gt;/.ssh/\u0026lt;key_name\u0026gt;  Generating a new SSH key and adding it to the ssh-agent Funtoo Keychain Project  ","link":"https://cuile.github.io/posts/git/connect_with_ssh/","section":"posts","tags":["git","ssh","keychain","github"],"title":"使用 SSH 连接 Github"},{"body":"在 Alpine 上安装 Docker 真是一件让人感觉非常愉快的事情，因为过程非常简单。\n修改 apk 源 1$ nano /etc/apk/repositories 因为 docker 在社区的库里，所以要打开 community 的源。\n1#/media/cdrom/apks 2http://mirrors.tuna.tsinghua.edu.cn/alpine/v3.16/main 3http://mirrors.tuna.tsinghua.edu.cn/alpine/v3.16/community 4#http://mirrors.tuna.tsinghua.edu.cn/alpine/edge/main 5#http://mirrors.tuna.tsinghua.edu.cn/alpine/edge/community 6#http://mirrors.tuna.tsinghua.edu.cn/alpine/edge/testing 安装 Docker 1$ apk update 2$ apk add docker docker-cli-compose 3# 这里要特别注意，docker compose 的包名在 Alpine 里是 docker-cli-compose，不是 docker-compose-plugin。 4# docker-compose 包是 compose 的独立安装包，官方已经不再支持这种安装方式。 5... 6$ docker -v 7Docker version 20.10.16, build aa7e414fdcb23a66e8fabbef0a560ef1769eace5 8$ docker compose version 9Docker Compose version v2.12.2 配置 Docker (CentOS 7 | Rocky 9) 安装 Docker\n启动 Docker 1# 引导时启动 2$ rc-update add docker boot 3# 启动服务 4$ rc-service docker start 测试 1$ docker run hello-world ","link":"https://cuile.github.io/posts/docker/docker_install_alpine_linux/","section":"posts","tags":["linux","Alpine linux","Docker"],"title":"Alpine Linux 安装 Docker"},{"body":"网卡静态地址 1~# nano /etc/network/interfaces 1auto lo 2iface lo inet loopback 3 4auto eth0 5iface eth0 inet static 6 address 192.168.10.16/24 7 gateway 192.168.10.10 8 hostname alpine 配置 DNS 1# nano /etc/resolv.conf 2nameserver 114.114.114.114 重启网络 1~# service networking restart ","link":"https://cuile.github.io/posts/alpine_linux/network/","section":"posts","tags":["linux","Alpine linux","network"],"title":"Alpine Linux 网络设置"},{"body":"","link":"https://cuile.github.io/tags/qmue%5Ckvm/","section":"tags","tags":null,"title":"qmue\\kvm"},{"body":"","link":"https://cuile.github.io/tags/vm/","section":"tags","tags":null,"title":"vm"},{"body":"特点：\n 小巧：基于musl libc 和 busybox，和 busybox一样小巧，最小的Docker镜像只有5MB。 安全：面向安全的轻量发行版 简单：提供APK包管理工具，软件的搜索、安装、删除、升级都非常方便。 适合容器使用：由于小巧、功能完备，非常适合作为容器的基础镜像。  不同版本：\n STANDARD：最小的可启动镜像，需要网络才能安装。带有Intel, AMD等CPU的微代码。 VIRTUAL：与STANDARD类似，但更小，更适合虚拟系统使用。 EXTENDED：包括最常用的软件包。适用于路由器和服务器。从RAM运行。扩展版本，带有更多软件包。 XEN：内置XEN Hypervisor支持。 NETBOOT：netboot的内核、initramfs和modloop。 RASPBERRY PI：带有树莓派内核的版本。 GENERIC ARM：带有ARM内核，带有uboot加载器。 MINI ROOT FILESYSTEM：最小系统版本，仅包含内核，只用于构建Docker镜像。  1. 准备系统 Alpine 有许多版本，其中 VIRTUAL 是专门针对虚拟环境优化过的，所以主要使用这个版本来安装。\nhttps://www.alpinelinux.org/downloads/\n2. 登录 1... 2# 使用启动盘启动后，直接使用 root 登录系统 3localhost login: root 3. 安装 1... 2localhost:~# setup-alpine 3 4# 选择键盘布局 5# 这里两个都选 cn 或都不选 6... 7Select keyboard layout: [none] cn 8... 9Select variant (or \u0026#39;abort\u0026#39;): cn 10 11# 设置主机名 12... 13Enter system hostname (fully qualified form, e.g. \u0026#39;foo.example.org\u0026#39;) [localhost] home 14 15# 设置网络 16... 17Which one do you want to initialize? (or \u0026#39;?\u0026#39; or \u0026#39;done\u0026#39;) [eth0] eth0 18 19Ip address for eth0? (or \u0026#39;dhcp\u0026#39;, \u0026#39;none\u0026#39;, \u0026#39;?\u0026#39;) [dhcp] dhcp 20Do you want to do any manual network configuration? (y/n) [n] n 21# or 手动输入IP地址 22Ip address for eth0? (or \u0026#39;dhcp\u0026#39;, \u0026#39;none\u0026#39;, \u0026#39;?\u0026#39;) [dhcp] 192.168.10.16/24 23Gateway? (or \u0026#39;none\u0026#39;) [none] 192.168.10.10 24Do you want to do any manual network configuration? (y/n) [n] n 25DNS domain name? (e.g \u0026#39;bar.com\u0026#39;) 26DNS nameserver(s)? 114.114.114.114 27 28# 设置密码 29... 30New password: 31... 32Retype password: 33 34# 设置时区 35# PRC 代理中国，也可以输入 Asia/，再输入 Shanghai 36... 37Which timezone are you in? (\u0026#39;?\u0026#39; for list) [UTC] PRC 38 39# 设备代理 40... 41HTTP/FTP proxy URL? (e.g. \u0026#39;http://proxy:8080\u0026#39;, or \u0026#39;none\u0026#39;) [none] none 42 43# 设置更新源 44# f 是自动测试并选择最快的源，建议使用 45... 46Enter mirror number (1-74) or URL to add (or r/f/e/done) [1] f 47 48#  49Setup a user? (enter a lower-case loginname, or \u0026#39;no\u0026#39;) [no] no 50 51# 设置ssh服务 52Which ssh server? (\u0026#39;openssh\u0026#39;, \u0026#39;dropbear\u0026#39;, or \u0026#39;none\u0026#39;) [openssh] openssh 53# 这里一定要输入 yes  54# 许多教程都说 Alpine 默认没有远程登录，都上手动修改，其实是可以在安装时就设备好的 55Allow root ssh login? (\u0026#39;?\u0026#39; for help) [prohibit-password] yes 56Enter ssh key or URL for root (or \u0026#39;none\u0026#39;) [none] none 57 58# 设置磁盘 59... 60Which disk(s) would you like to use? (or \u0026#39;?\u0026#39; for help or \u0026#39;none\u0026#39;) [none] sda 61... 62How would you like to use it? (\u0026#39;sys\u0026#39;, \u0026#39;data\u0026#39;, \u0026#39;crypt\u0026#39;, \u0026#39;lvm\u0026#39; or \u0026#39;?\u0026#39; for help) [?] sys 63... 64WARNING: Erase the aboue disk(s) and continue? (y/n) [n] y 65... 66Installation is complete. Please reboot. 67# 到这里安装全部完成 3.1. 自动安装 1# 准备应答文件  Answer Files  4. 命令重启电脑 1home:~# reboot 5. 关闭防火墙 1home:~# rc-service iptables stop 2home:~# rc-update del iptables ","link":"https://cuile.github.io/posts/alpine_linux/install/","section":"posts","tags":["linux","Alpine linux","proxmoxve","vm","qmue\\kvm"],"title":"虚拟机安装 Alpine Linux 3.16"},{"body":"","link":"https://cuile.github.io/tags/ups/","section":"tags","tags":null,"title":"UPS"},{"body":"为家里的微形PVE服务器买了山克的UPS，发现与 linux 连接使用还是需要安装一下的，而且市场上基本都是 OEM 的产品，所以操作过程通用\n 记录Gen8安装PVE+DSM+win10+UPS的一些过程 ViewPower中文使用手册  ","link":"https://cuile.github.io/posts/ups/ups_install/","section":"posts","tags":["UPS"],"title":"山克 UPS 安装手册"},{"body":"0、基础设置 1# 查看代理 2git config --global --get http.proxy 3git config --global --get https.proxy 4# 设置代理 5git config --global http.proxy http://[username:passwrod@]ip or URL:port 6git config --global https.proxy http://[username:passwrod@]ip or URL:port 7# 取消代理 8git config --global --unset http.proxy 9git config --global --unset https.proxy 10 11# 只代理github.com 12git config --global --get http.https://github.com.proxy 13git config --global --get https.https://github.com.proxy 14git config --global http.https://github.com.proxy http://[username:passwrod@]ip or URL:port 15git config --global https.https://github.com.proxy http://[username:passwrod@]ip or URL:port 16git config --global --unset http.https://github.com.proxy 17git config --global --unset https.https://github.com.proxy 18# push设置 19git config --global push.default simple  【Git】git push.default 简析 - 简书 Git忽略文件.gitignore详解   1、项目 1.1 克隆项目 1git clone https://xxxx@bitbucket.org/xxxx/xxxx.git 2# or  3git clone git@github.com:xxxxx/xxxxx.git 4# 克隆指定分支，到指定目录 5git clone -b branch-name repo path 6 7git config user.name \u0026#34;Your Name\u0026#34; 8git config user.email you@example.com 1.2 推送新项目到github 先在githubh上创建好项目\n1git init 2git add . 3git status -s 4git config user.name \u0026#34;Your Name\u0026#34; 5git config user.email you@example.com 6git commit --amend --reset-author 7git commit -m \u0026#34;first commit\u0026#34; 8git remote add origin git@github.com:Youname/repo_name.git 9git push -u origin master 1.3 导出 1git archive --format zip -0 \\  # 使用zip格式，不压缩 2 --output output.zip \\  # 输出的文件名 3 --remote git@github.com:Cuile/NMP.git \\  # 远程项目地址 4 master \\  # 分支名 5 ./ # 输出到当前目录 2、分支 2.1 本地分支操作 1# 拉取 2git fetch origin branch-name 3git pull origin branch-name 4 5# 强制覆盖本地分支 6git fetch --all 7git reset --hard origin/branch-name 8git pull 9 10# 查看分支 11git branch -a 12 13# 创建分支 14# 只创建一个分支 15git branch branch-name 16# 创建一个分支并切换到该分支 17git checkout -b branch-name 18 19# 切换分支 20git checkout branch-name 21 22# 删除分支 23git branch -d branch-name 24 25# 发布本地分支 26git push 远程主机名 本地分支名:远程分支名 27 28# 合并分支 29# 将 a 分支合并到 b 分支 30git checkout b 31git merge a 32git push 33 34# 推送 35# 查看本地项目状态 36git status -s 37# 添加文件 | 添加目录 | 添加所有内容 38git add file | dir | . 39# 删除 add 的文件 40git rm [-r] --cached file | . 41# 提交已修改的文件，但不提交未跟踪的文件 42git commit -m \u0026#34;message\u0026#34; --untracked-files=no 43# 提交已删除的文件 44git commit -m \u0026#34;message\u0026#34; -a 45# 推送到远程库 46git push 2.2 远程分支操作 1# 查看远程仓库地址 2git remote -v 3 4# 更新远程分支列表 5# 如果你的 remote branch 不是在 origin 下，把 origin 换成你的名字 6# --prune 删除远程已经删除的分支 7git remote update origin --prune 2.3 删除本地文件后，从远端重新拉取最新版本 git提示： up-to-date. 但未从远端得到文件\n1# 1 查看本地分支是否发生变化 2git branch -a 3 4# 2 如本地库处于另一个分支中，需将本地分支重置回原分支 5git checkout branch-name 6git reset --hard 7 8# 3 如本地分支没有变化，则强行 pull 覆盖本地文件 9git fetch --all 10git reset --hard origin/branch-name 11git pull 2.4 在本地修改分支名称 1# 查看本地分支 2git branch -a 3# 切换到要重命名的分支 4git checkout branch-name 5# 重命名分支 6git branch -m new-branch-name 7# 上传新分支 8git push origin -u new-branch-name 9# 删除原分支 10git push origin --delete old-branch-name 2.5 更改本地分支对应的远程分支 1# 拉取远程最新分支信息 2git fetch origin 3# 重命名本地分支 4git branch -m old-branch-name new-branch-name 5# 设置新的远程分支 6git branch -u origin/new-branch-name 7# or 8git branch --set-upstream-to=origin/new-branch-name old-branch-name 9# 验证配置结果 10git branch -vv 11# 删除旧的远程跟踪分支 12git branch -dr origin/old-branch-name  3、标签 1# 查看现有的标签 2git tag 3 4# 给最新的提交打标签 5git tag 1.0 6 7# 推送所有标签 8git push --tags  ","link":"https://cuile.github.io/posts/git/git_cli/","section":"posts","tags":["CLI","git"],"title":"Git 命令行"},{"body":"","link":"https://cuile.github.io/series/harmonyos/","section":"series","tags":null,"title":"HarmonyOS"},{"body":"保持后台进程运行  设置 \u0026gt; 应用启动管理 \u0026gt; 关闭该应用的自动管理开关，并在弹框中勾选允许后台活动。 设置 \u0026gt; 电池优化 \u0026gt; 点击不允许 \u0026gt; 选择所有应用 \u0026gt; 找到无法后台运行的应用 \u0026gt; 设置为不允许。 设置 \u0026gt; 电池，关闭省电模式开关。 设置 \u0026gt; 电池 \u0026gt; 更多电池设置，开启休眠时始终保持网络连接开关。 打开应用 \u0026gt; 进入多任务界面 \u0026gt; 下拉选中的应用卡片，左上角出现加锁图标 \u0026gt; 点击清理图标，清理其他不经常使用的应用。 手机管家 \u0026gt; 设置，打开智能维护开关以确保良好的应用使用体验。  ","link":"https://cuile.github.io/posts/harmonyos_optimization/","section":"posts","tags":null,"title":"鸿蒙系统优化"},{"body":"火炮  开局先找炮位，最好能把车头垫起来。 到达炮位后，预瞄全国点位。了解哪些点能打到，哪些打不到。 开局先瞄传统点位，收过路费。 不瞄与瞄准线垂直运动的车。 不瞄轻坦，视野跟着重坦走。 瞄准速度比装填速度重要。 用 Shift 瞄准后，按 G 切换到弹道视角，可提高命中率。 结合炮弹飞行时间，预留瞄准余量。 利用装填间隙转换炮位。 打击优先级：  火炮 \u0026gt; 反坦克炮 \u0026gt; 重坦 \u0026gt; 中坦 \u0026gt; 轻坦 远端 \u0026gt; 近端 血量少 \u0026gt; 血量多   敌方进入最大侦测范围，与你之间少于二辆已方车辆时，就应考虑转移。  战地升级  近战型选“瞄准圈缩小”，远程型选“减少瞄准时间”。 突击型选“维持速度”。  ","link":"https://cuile.github.io/posts/games/wot_tips/","section":"posts","tags":["心得体会"],"title":"坦克使用手册"},{"body":"","link":"https://cuile.github.io/tags/%E5%BF%83%E5%BE%97%E4%BD%93%E4%BC%9A/","section":"tags","tags":null,"title":"心得体会"},{"body":"","link":"https://cuile.github.io/series/%E7%81%AB%E7%82%AE/","section":"series","tags":null,"title":"火炮"},{"body":"尝试使用 Ubuntu 的 Snap 后，发现真的非常方便。\n看过Snap的介绍以后，发现Snap的沙盒理念非常先进，在存储基本不成问题背景下，会系统环境的影响更小。\n而且docker-compose命令也会一起安装，更是方便。\n1.安装 1$ sudo snap install docker 2.设置 1# 设置开机启动 2$ sudo snap start docker --enable 3# 确认服务状态 4$ sudo snap services docker 5# 查看服务详情 6$ service snap.docker.dockerd status 使用sudo安装后要注意以后调用时，都要使用sudo命令前缀。\n3.其它 1# 安装目录 2/snap/docker/current 3# 服务启动配置文件 4/etc/systemd/system/snap.docker.dockerd.service 5# 配套 AppArmor 配置文件 6/var/lib/snapd/apparmor/profiles/snap.docker.docker 7/var/lib/snapd/apparmor/profiles/snap.docker.dockerd 8# 默认 Unix Socket 文件路径 9unix:///var/snap/docker/current/run/docker/libcontainerd/docker-containerd.sock 4.参考文献 Docker 安装指南\n","link":"https://cuile.github.io/posts/snap/docker_install_snap/","section":"posts","tags":["Snap","Docker"],"title":"使用 Snap 安装 Docker"},{"body":"","link":"https://cuile.github.io/series/work-tips/","section":"series","tags":null,"title":"work tips"},{"body":"1 能力是否特殊？  经济制约性 因果含糊性 路径稀缺性  2 能力是否核心？  是否受到加持 是否适用环境  ","link":"https://cuile.github.io/posts/tips/tips3/","section":"posts","tags":null,"title":"能力的评价"},{"body":" 见微知著，是对事物发展规律的洞察。 触类旁通，是对事物内在逻辑的洞悉。  ","link":"https://cuile.github.io/posts/tips/tips2/","section":"posts","tags":null,"title":"小差别"},{"body":" 交浅语深，动机不良。 口说是非，心态不正。 刻薄挑剔，人际不和。 言高行低，品行不端。 至亲成仇，情感不真。 违规为乐，习惯不好。 酒后失控，心态不稳。  ","link":"https://cuile.github.io/posts/tips/tips1/","section":"posts","tags":null,"title":"七态为品"},{"body":"1 准备环境 开发环境还是建议使用 Docker 来搭建，方便快捷。 不过 Django 的官方镜像已经弃用了，官方建议新版本使用 Python 官方提供的镜像来构建。\n1Docker 2 ┗ Python == 3.9.12-buster 3 ┗ Django == 3.2.13 LTS 4 ┗ django-simpleui==2022.11.30 可以参考[https://github.com/Cuile/Docker-to-Python/tree/master/Django]，提供了 Dockerfil、yml 文件，还提供全套使用命令。\n2 创建项目 1# 创建项目 2$ django-admin startproject mysite 3$ cd mysite 4 5# 生成项目 6$ python manage.py startapp websrc 7# 运行项目测试 8$ python manage.py runserver 0.0.0.0:80 修改配置后，建议使用项目调试的方式启动，不要使用快捷命令，项目正常启动稳定运行后，再使用快捷命令。\n1# settings.py 2 3# 任意地址都可以访问 Django 4ALLOWED_HOSTS = [\u0026#39;*\u0026#39;] 5 6# 添加 simpleui 模板，和创建的项目 7INSTALLED_APPS = [ 8 \u0026#39;simpleui\u0026#39;, 9 \u0026#39;websrc\u0026#39;, 10 \u0026#39;......\u0026#39;, 11] 12 13# 这个与多语种有关，在项目初始阶段不要修改，后续添加了多语种支持再修改，否则会导致无法启动。 14# 具体参考(http://www.i18nguy.com/unicode/language-identifiers.html)，有个傻逼教程，上来就改成 zh-CN 果然导致项目无法正常启动。 15# 正确的简体中文代码如下： 16LANGUAGE_CODE = \u0026#39;zh-Hans\u0026#39; 17 18# 时区，上海就代表北京时间，这个不能写错，写错就启动不了 19# 具体参考(https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)，这里是标准的，有个傻逼教程非给写成 Asia/Beijing 导致怎么都起不来，太TMD的二逼了。 20# 正解的北京时间时区如下： 21TIME_ZONE = \u0026#39;Asia/Shanghai\u0026#39; 22 23# 启动翻译，与上面的 LANGUAGE_CODE 设置相对应 24USE_I18N = True 25# 启动格式控制 26USE_L10N = True 27# 启动时区 28USE_TZ = True 3 创建管理员账号 1$ python manage.py createsuperuser 2Username: admin 3Email address: admin@example.com 4Password: ********** 5Password (again): ********* 6Superuser created successfully. 访问项目链接，比如\u0026quot;http://127.0.0.1:8000/admin/\n4 创建数据模型 4.1 编辑 models.py 文件，改变模型 ......\n4.2 为模型的改变生成迁移文件 1$ python manage.py makemigrations websrc 2Migrations for \u0026#39;websrc\u0026#39;: 3 polls/migrations/0001_initial.py 4 - Create model Question 5 - Create model Choice 可以查看生成的SQL语句\n1$ python manage.py sqlmigrate websrc 0001 4.3 应用数据库迁移 1$ python manage.py migrate 2Operations to perform: 3 Apply all migrations: admin, auth, contenttypes, polls, sessions 4Running migrations: 5 Rendering model states... DONE 6 Applying websrc.0001_initial... OK 5 向管理页面加入数据模型 1# websrc/admin.py 2 3from django.contrib import admin 4 5from .models import Question 6 7admin.site.register(Question) 6 Gunicorn 托管 Django 6.1 安装 Gunicorn 参考文档\n Gunicorn-配置详解  6.2 收集静态文件 1$ python manage.py collectstatic 2# 如果报错 3django.core.exceptions.ImproperlyConfigured: You\u0026#39;re using the staticfiles app without having set the STATIC_ROOT setting to a filesystem path. 需要修改 settings.py ，添加 STATIC_ROOT\n1# \u0026lt;myproject\u0026gt;/settings.py 2 3# STATICFILES_DIRS = [os.path.join(BASE_DIR, \u0026#34;static\u0026#34;), ] 4STATIC_ROOT = os.path.join(BASE_DIR, \u0026#34;static\u0026#34;) 如果你从 INSTALLED_APPS 中删除一个应用程序，最好使用 collectstatic --clear 选项来删除过时的静态文件。\n参考文档\n Django - STATICFILES_DIRS - STATIC_ROOT 配置  6.3 设置静态文件路由 1# \u0026lt;myproject\u0026gt;/urls.py 2 3... 4urlpatterns = [ 5 ... 6] + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT) + static(settings.STATIC_URL, document_root=settings.STATIC_ROOT) 参考文档\n 开发时提供静态文件服务  7 Supervisor 启动 Gunicorn 注意：使用 docker 时，要确保 nodaemon 选项为 true，否则 docker 不能正常启动\n1[supervisord] 2nodaemon=true 参考文档\n Using Supervisor with Docker  ","link":"https://cuile.github.io/posts/django/django_development_introduction/","section":"posts","tags":["Python","docker","gunicorn","Supervisor"],"title":"Docker 环境 Django 开发简介"},{"body":"","link":"https://cuile.github.io/tags/gunicorn/","section":"tags","tags":null,"title":"gunicorn"},{"body":"","link":"https://cuile.github.io/tags/supervisor/","section":"tags","tags":null,"title":"Supervisor"},{"body":"1、查看已安装的Python 1# 查看已安装的信息 2$ yum info python3 3# 查看python安装位置 4$ whereis python3 2、卸载已安装的Python环境 1# 卸载已安装的程序 2$ yum erase python3 3# 删除所有残余文件 4$ whereis python3|xargs rm -frv 5# 查看现有的python 6$ whereis python3 3、yum安装依赖环境 1$ yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel 4、官网下载Python3.9.12 1$ yum -y install wget 2# 尽量使用国内镜像站点下载比较快 3$ wget https://mirrors.huaweicloud.com/python/3.9.12/Python-3.9.12.tgz 5、创建安装目录 1$ tar -zxvf Python-3.9.12.tgz -C ./ 2$ cd Python-3.9.12 3$ mkdir /usr/local/python3 4$ ./configure --prefix=/usr/local/python3.9.12 5$ make \u0026amp;\u0026amp; make install 6、创建软链接 1$ ln -s /usr/local/python3.9.12/bin/python3 /usr/bin/python3 2$ ln -s /usr/local/python3.9.12/bin/pip3 /usr/bin/pip3 7、测试 1$ python3 -V 2Python 3.9.12 3 4$ pip3 -V 5pip 22.0.4 from /usr/local/python3.9.12/lib/python3.9/site-packages/pip (python 3.9) 8、pip升级、换源 1# pip升级 2$ python3 -m pip install --upgrade pip 3# pip换源 4# 推荐使用清华的源，因为使用https协议 5$ pip3 config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple ","link":"https://cuile.github.io/posts/python/python3_install/","section":"posts","tags":["pip","CentOS 7"],"title":"CentOS 7 安装 Python3.9.12"},{"body":"","link":"https://cuile.github.io/tags/pip/","section":"tags","tags":null,"title":"pip"},{"body":"其实网上相关的文章已经非常多了，所以这篇文章的作用只是记录和明确一条确定可行的操作路径，为以后的操作节省时间，毕竟像我一样大部分人都不是专业的系统管理员，能够快速解决问题就可以了，并不想做过多的专业研究与探索。\n本操作手册是官方手册与网上手册的结合版本，集两家之所长，亲自操作可用。\n1. 系统准备 1# 查看系统版本 2$ cat /etc/redhat-release 3\u0026gt; CentOS Linux release 7.6.1810 (Core) // CentOs 7 以上版本 4 5# 查看系统内核版本 6$ uname -r 7\u0026gt; 4.10.4-1.el7.elrepo.x86_64 // 内核版本要\u0026gt;3.10 8 9# 卸载旧版本 10$ yum remove docker \\ 11 docker-client \\ 12 docker-client-latest \\ 13 docker-common \\ 14 docker-latest \\ 15 docker-latest-logrotate \\ 16 docker-logrotate \\ 17 docker-selinux \\ 18 docker-engine-selinux \\ 19 docker-engine 20 21# 安装依赖包 22$ yum install -y yum-utils lvm2 \\ 23 device-mapper-persistent-data \\ 2. 添加 Docker 软件源 1# 如果系统已切换到阿里云镜像源地址，可跳过此步。 2# 阿里云镜像自带docker源 3$ yum-config-manager \\ 4 --add-repo \\ 5 https://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo 6 7# 使用官方源 8$ yum-config-manager \\ 9 --add-repo \\ 10 https://download.docker.com/linux/centos/docker-ce.repo 11 12$ yum makecache fast 13# CentOS 8 or Rocky 9 使用timer替换fast 14$ yum makecache timer 3. 安装Docker 1# 如果在 Rocky 9 系统上，会提示containerd.io版本过低，或下载失败，需要独立安装containerd.io 2# 可以重试几次 3$ yum install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin 4. 配置 Docker 1// /etc/docker/daemon.json 2{ 3 // 添加官方仓库镜像地址，其实也没什么用很慢 4 \u0026#34;registry-mirrors\u0026#34;: [\u0026#34;https://registry.docker-cn.com\u0026#34;] 5}  Docker/DockerHub 国内镜像源/加速列表（长期维护） 其实使用中仓库镜像的速度并不理想，还是设置代理更加实用 如何优雅的给 Docker 配置网络代理  5. 启动 Docker 1# 设为开机启动 2$ systemctl enable docker.service 3# 启动服务 4$ systemctl start docker.service 6. 测试安装结果 1$ docker run hello-world 2 3Unable to find image \u0026#39;hello-world:latest\u0026#39; locally 4latest: Pulling from library/hello-world 51b930d010525: Pull complete 6Digest: sha256:6540fc08ee6e6b7b63468dc3317e3303aae178cb8a45ed3123180328bcc1d20f 7Status: Downloaded newer image for hello-world:latest 8 9Hello from Docker! 10This message shows that your installation appears to be working correctly. 11 12To generate this message, Docker took the following steps: 13 1. The Docker client contacted the Docker daemon. 14 2. The Docker daemon pulled the \u0026#34;hello-world\u0026#34; image from the Docker Hub. 15 (amd64) 16 3. The Docker daemon created a new container from that image which runs the 17 executable that produces the output you are currently reading. 18 4. The Docker daemon streamed that output to the Docker client, which sent it 19 to your terminal. 20 21To try something more ambitious, you can run an Ubuntu container with: 22 $ docker run -it ubuntu bash 23 24Share images, automate workflows, and more with a free Docker ID: 25 https://hub.docker.com/ 26 27For more examples and ideas, visit: 28 https://docs.docker.com/get-started/ 29 30$ docker compose version 31Docker Compose version vX.X.0 若能正常输出以上信息，则说明安装成功。\n","link":"https://cuile.github.io/posts/docker/docker_install_centos/","section":"posts","tags":["linux","CentOS","rocky","Docker"],"title":"(CentOS 7 | Rocky 9) 安装 Docker"},{"body":"","link":"https://cuile.github.io/tags/rocky/","section":"tags","tags":null,"title":"rocky"},{"body":"","link":"https://cuile.github.io/tags/rrd/","section":"tags","tags":null,"title":"rrd"},{"body":"Proxmox系统安装后，日志报错\n1rrdcached[4513]: handle_request_update: Could not read RRD file. 2pmxcfs[4527]: [status] notice: RRDC update error /var/lib/rrdcached/db/pve2-vm/85235: -1 3pmxcfs[4527]: [status] notice: RRD update error /var/lib/rrdcached/db/pve2-vm/85235: mmaping file \u0026#39;/var/lib/rrdcached/db/pve2-vm/85235\u0026#39;: Invalid argument 修复命令\n1$ rm -r /var/lib/rrdcached/db 2$ systemctl restart rrdcached.service 参考文档  Strange RRD error  ","link":"https://cuile.github.io/posts/proxmox/rrd_error/","section":"posts","tags":["proxmoxve","rrd"],"title":"修复 ProxmoxVE RRD 错误"},{"body":"","link":"https://cuile.github.io/tags/ffmpeg/","section":"tags","tags":null,"title":"FFmpeg"},{"body":"脚本基于Windows10系统设计\n查看软件版本 1D:\\ffmpeg\\bin\u0026gt;ver 2 3Microsoft Windows [版本 10.0.18362.356] 4 5D:\\ffmpeg\\bin\u0026gt;ffmpeg.exe -version 6 7ffmpeg version N-94600-g661a9b274b Copyright (c) 2000-2019 the FFmpeg developers 8built with gcc 9.1.1 (GCC) 20190807 9configuration: --enable-gpl --enable-version3 --enable-sdl2 --enable-fontconfig --enable-gnutls --enable-iconv --enable-libass --enable-libdav1d --enable-libbluray --enable-li 10bfreetype --enable-libmp3lame --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libopenjpeg --enable-libopus --enable-libshine --enable-libsnappy --enable-libsoxr 11 --enable-libtheora --enable-libtwolame --enable-libvpx --enable-libwavpack --enable-libwebp --enable-libx264 --enable-libx265 --enable-libxml2 --enable-libzimg --enable-lzma 12--enable-zlib --enable-gmp --enable-libvidstab --enable-libvorbis --enable-libvo-amrwbenc --enable-libmysofa --enable-libspeex --enable-libxvid --enable-libaom --enable-libmfx 13 --enable-amf --enable-ffnvcodec --enable-cuvid --enable-d3d11va --enable-nvenc --enable-nvdec --enable-dxva2 --enable-avisynth --enable-libopenmpt 14libavutil 56. 33.100 / 56. 33.100 15libavcodec 58. 55.100 / 58. 55.100 16libavformat 58. 31.101 / 58. 31.101 17libavdevice 58. 9.100 / 58. 9.100 18libavfilter 7. 58.100 / 7. 58.100 19libswscale 5. 6.100 / 5. 6.100 20libswresample 3. 6.100 / 3. 6.100 21libpostproc 55. 6.100 / 55. 6.100 添加LOGO 1D:\\ffmpeg\\bin\\ffmpeg^ 2 -c:v h264_qsv ^ 3 -i %1 ^ 4 -i F:\\\\电教馆\\\\logo.png ^ 5 -c:v h264_qsv ^ 6 -b:v 1894k ^ 7 -filter_complex [1:v]scale=125:125[logo];[0:v][logo]overlay=30:25 ^ 8 -c:a copy ^ 9 -y ^ 10 %2 去掉LOGO 1D:\\ffmpeg\\bin\\ffmpeg^ 2 -c:v h264_qsv ^ 3 -i %1 ^ 4 -c:v h264_qsv ^ 5 -b:v 1894k ^ 6 -filter_complex [0:v]split[split_main][split_delogo];[split_delogo]trim=start=1:end=5,delogo=x=270:y=820:w=1420:h=50:show=0[delogoed];[split_main][delogoed]overlay=eof_action=pass ^ 7 -c:a copy ^ 8 -y ^ 9 %2 合并操作 1D:\\ffmpeg\\bin\\ffmpeg^ 2 -c:v h264_qsv ^ 3 -i %1 ^ 4 -i F:\\\\电教馆\\\\logo.png ^ 5 -c:v h264_qsv ^ 6 -b:v 1894k ^ 7 -filter_complex [1:v]scale=125:125[logo];[0:v][logo]overlay=30:25[tmp_video];[tmp_video]split[main][delogo];[delogo]trim=start=1:end=5,delogo=x=270:y=820:w=1420:h=50:show=0[delogoed];[main][delogoed]overlay=eof_action=pass ^ 8 -c:a copy ^ 9 -y ^ 10 %2 遍历文件夹下的MP4文件，打水印、去字幕、截图验证效果 1@echo off \u0026amp; setlocal enabledelayedexpansion 2 3echo ################################################# 4echo 开始处理视频文件 5echo. 6:: 指定起始文件夹 7set DIR=\u0026#34;E:\\六年级\\\u0026#34; 8REM set DIR=\u0026#34;E:\\六年级\\第一学期\\sx6s01001\\\u0026#34; 9echo DIR=%DIR% 10 11REM 指定运行参数 12set scale=\u0026#34;scale=90:90\u0026#34; 13set overlay=\u0026#34;overlay=50:15\u0026#34; 14set trim=\u0026#34;trim=start=2:end=6\u0026#34; 15set delogo=\u0026#34;delogo=x=190:y=545:w=930:h=30:show=0\u0026#34; 16 17:: 参数 /R 表示需要遍历子文件夹,去掉表示不遍历子文件夹 18:: %%f 是一个变量,类似于迭代器,但是这个变量只能由一个字母组成,前面带上%% 19:: 括号中是通配符,可以指定后缀名,*.*表示所有文件 20for /R %DIR% %%f in (*.mp4) do ( 21\techo f=%%f 22\tcall :check_info \u0026#34;%%f\u0026#34; ^ 23\u0026amp;\u0026amp; echo ################################################# ^ 24\u0026amp;\u0026amp; echo bit_rate=!bit_rate! ^ 25\u0026amp;\u0026amp; call :process_mpeg4 \u0026#34;%%f\u0026#34;,\u0026#34;%%~df%%~pf%%~nf_out%%~xf\u0026#34;,!bit_rate!,%scale%,%overlay%,%trim%,%delogo% ^ 26\u0026amp;\u0026amp; call :screenshot \u0026#34;%%~df%%~pf%%~nf_out%%~xf\u0026#34;,\u0026#34;%%~df%%~pf%%~nf_out\u0026#34; 27) 28exit /b 29 30:check_info 31\techo ################################################# 32\techo check_info 33\tfor /F %%s in (\u0026#39;D:\\ffmpeg\\bin\\ffprobe -hide_banner ^ 34-unit -prefix -byte_binary_prefix ^ 35-print_format flat ^ 36-show_format -show_streams ^ 37-i %1^| find \u0026#34;streams.stream.0.bit_rate\u0026#34;\u0026#39;) do (set bit_rate=%%s) 38\tset bit_rate=%bit_rate:~27,5% 39\tset bit_rate=%bit_rate:.=% 40goto :eof 41 42:process_mpeg4 43\techo ################################################# 44\techo process_mpeg4 45\tD:\\ffmpeg\\bin\\ffmpeg -hide_banner ^ 46\t-vcodec mpeg4 ^ 47\t-i %1 -i F:\\\\电教馆\\\\logo.png ^ 48\t-vcodec h264_qsv -b:v %3k ^ 49\t-filter_complex [1:v]%4[logo];[0:v][logo]%5[tmp_video];[tmp_video]split[main][delogo];[delogo]%6,%7[delogoed];[main][delogoed]overlay=eof_action=pass ^ 50\t-acodec copy ^ 51\t-y %2 52goto :eof 53 54:process_h264_qsv 55\techo ################################################# 56\techo process_h264_qsv 57\tD:\\ffmpeg\\bin\\ffmpeg -hide_banner ^ 58\t-vcodec h264_qsv ^ 59\t-i %1 -i F:\\\\电教馆\\\\logo.png ^ 60\t-vcodec h264_qsv -b:v %3k ^ 61\t-filter_complex [1:v]%4[logo];[0:v][logo]%5[tmp_video];[tmp_video]split[main][delogo];[delogo]%6,%7[delogoed];[main][delogoed]overlay=eof_action=pass ^ 62\t-acodec copy ^ 63\t-y %2 64goto :eof 65 66:screenshot 67\techo ################################################# 68\techo screenshot 69\tfor /L %%i in (3,1,5) do ( 70\tD:\\ffmpeg\\bin\\ffmpeg -hide_banner ^ 71\t-ss 00:0%%i -vcodec h264_qsv ^ 72\t-i %1 ^ 73\t-vframes 1 -f image2 ^ 74\t-y %2_%%is_screenshot.jpg 75\t) 76goto :eof ","link":"https://cuile.github.io/posts/ffmpeg_manual/","section":"posts","tags":["FFmpeg","Windwos 10"],"title":"FFmpeg脚本"},{"body":"","link":"https://cuile.github.io/tags/windwos-10/","section":"tags","tags":null,"title":"Windwos 10"},{"body":"","link":"https://cuile.github.io/tags/repo/","section":"tags","tags":null,"title":"repo"},{"body":"","link":"https://cuile.github.io/tags/yum/","section":"tags","tags":null,"title":"yum"},{"body":"脚本基于Centos 7\n更换阿里云软件安装源 1# 备份原镜像文件，以免出错后可以恢复。 2$ mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup \\ 3\u0026amp;\u0026amp; mv /etc/yum.repos.d/epel.repo /etc/yum.repos.d/epel.repo.backup \\ 4\u0026amp;\u0026amp; mv /etc/yum.repos.d/epel-testing.repo /etc/yum.repos.d/epel-testing.repo.backup 5 6# 下载新的CentOS-Base.repo 到/etc/yum.repos.d/ 7$ curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo \\ 8\u0026amp;\u0026amp; curl -o /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo \\ 9\u0026amp;\u0026amp; curl -o /etc/yum.repos.d/epel-testing.repo http://mirrors.aliyun.com/repo/epel-testing.repo 10 11# 运行yum makecache生成缓存 12$ yum clean all \u0026amp;\u0026amp; yum makecache 查看已安装软件 1$ yum list installed 更新 1# 升级所有包同时也升级软件和系统内核 2$ yum -y update 3 4# 只升级所有包，不升级软件和系统内核 5$ yum -y upgrade 查询仓库 1$ yum repolist 2# 显示所有仓库 3$ yum repolist all 4# 显示所有启动的仓库 5$ yum repolist enabled 6# 显示所有禁用的仓库 7$ yum repolist disabled 修改仓库 最常用的修改操作就是启动和停用, 可以使用以下命令实现:\n1$ yum-config-manager --enable repository… 2$ yum-config-manager --disable repository… 参考文档  查RPM 找不到包的时候，可以在这上面查查，非常有帮助 阿里巴巴开源镜像站  centos epel    ","link":"https://cuile.github.io/posts/linux/repo_manual/","section":"posts","tags":["Linux","CentOS","repo","yum"],"title":"Yum 版本库管理"},{"body":"","link":"https://cuile.github.io/tags/kernel/","section":"tags","tags":null,"title":"kernel"},{"body":"脚本基于Centos 7\n1、查看系统内核版本 1$ uname -r 23.10.0-514.26.2.el7.x86_64 3$ cat /etc/redhat-release 4CentOS Linux release 7.6.1810 (Core) 2、升级内核 导入elrepo的key，然后安装elrepo的yum源\n1$ rpm -import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org 2$ rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm 查看可用的内核相关包\n1$ yum --disablerepo=\u0026#34;*\u0026#34; --enablerepo=\u0026#34;elrepo-kernel\u0026#34; list available 主分支ml(mainline)，稳定版(stable)，长期维护版lt(longterm) 安装内核\n1$ yum -y --enablerepo=elrepo-kernel install kernel-ml.x86_64 kernel-ml-devel.x86_64 3、修改grub 1# 查看系统内核列表 2$ awk -F\\\u0026#39; \u0026#39;$1==\u0026#34;menuentry \u0026#34; {print $2}\u0026#39; /etc/grub2.cfg 3CentOS Linux (5.2.11-1.el7.elrepo.x86_64) 7 (Core) # 新内核（5.2.11）在0的位置上 4CentOS Linux (3.10.0-957.27.2.el7.x86_64) 7 (Core) 5CentOS Linux (3.10.0-514.26.2.el7.x86_64) 7 (Core) 6CentOS Linux (3.10.0-514.el7.x86_64) 7 (Core) 7CentOS Linux (0-rescue-963c2c41b08343f7b063dddac6b2e486) 7 (Core) 8 9$ vim /etc/default/grub 10#将 GRUB_DEFAULT=saved 改为 GRUB_DEFAULT=0 11 12# 重建内核配置 13$ grub2-mkconfig -o /boot/grub2/grub.cfg 14 15# or 使用第二种命令行方式，减少操作复杂度，减少出错机率 16 17# 查看系统内核列表 18$ cat /boot/grub2/grub.cfg | grep menuentry 19if [ x\u0026#34;${feature_menuentry_id}\u0026#34; = xy ]; then 20 menuentry_id_option=\u0026#34;--id\u0026#34; 21 menuentry_id_option=\u0026#34;\u0026#34; 22export menuentry_id_option 23menuentry \u0026#39;CentOS Linux (6.2.2-1.el7.elrepo.x86_64) 7 (Core)\u0026#39; --class centos --class gnu-linux --class gnu --class os --unrestricted $menuentry_id_option \u0026#39;gnulinux-3.10.0-1160.81.1.el7.x86_64-advanced-fbc2582d-2e8a-4c41-8ba8-83656d8df89b\u0026#39; { 24menuentry \u0026#39;CentOS Linux (3.10.0-1160.83.1.el7.x86_64) 7 (Core)\u0026#39; --class centos --class gnu-linux --class gnu --class os --unrestricted $menuentry_id_option \u0026#39;gnulinux-3.10.0-1160.81.1.el7.x86_64-advanced-fbc2582d-2e8a-4c41-8ba8-83656d8df89b\u0026#39; { 25menuentry \u0026#39;CentOS Linux (3.10.0-1160.81.1.el7.x86_64) 7 (Core)\u0026#39; --class centos --class gnu-linux --class gnu --class os --unrestricted $menuentry_id_option \u0026#39;gnulinux-3.10.0-1160.81.1.el7.x86_64-advanced-fbc2582d-2e8a-4c41-8ba8-83656d8df89b\u0026#39; { 26menuentry \u0026#39;CentOS Linux (3.10.0-1160.el7.x86_64) 7 (Core)\u0026#39; --class centos --class gnu-linux --class gnu --class os --unrestricted $menuentry_id_option \u0026#39;gnulinux-3.10.0-1160.el7.x86_64-advanced-fbc2582d-2e8a-4c41-8ba8-83656d8df89b\u0026#39; { 27menuentry \u0026#39;CentOS Linux (0-rescue-9745ea2ecc634c89aef55f4dc21ee8fc) 7 (Core)\u0026#39; --class centos --class gnu-linux --class gnu --class os --unrestricted $menuentry_id_option \u0026#39;gnulinux-0-rescue-9745ea2ecc634c89aef55f4dc21ee8fc-advanced-fbc2582d-2e8a-4c41-8ba8-83656d8df89b\u0026#39; { 28# 配置默认内核 29$ grub2-set-default \u0026#34;CentOS Linux (6.2.2-1.el7.elrepo.x86_64) 7 (Core)\u0026#34; 30# 验证修改结果 31$ grub2-editenv list 32saved_entry=CentOS Linux (6.2.2-1.el7.elrepo.x86_64) 7 (Core) 4、重启系统 1$ reboot 2 3#查看内核版本 4$ uname -r 55.2.11-1.el7.elrepo.x86_64 ","link":"https://cuile.github.io/posts/linux/kernel_update/","section":"posts","tags":["Linux","kernel"],"title":"Linux系统内核升级"},{"body":"","link":"https://cuile.github.io/tags/iptables/","section":"tags","tags":null,"title":"iptables"},{"body":"基于Centos 7\n注意：CentOS 7默认的防火墙不是iptables,而是firewalld\n停止firewalld服务 1# 停止firewalld服务 2$ systemctl stop firewalld 3# 禁用firewalld服务 4# $ systemctl mask firewalld 5# 删除firewalld 6$ yum erase firewalld 安装 iptables 1# 先检查是否安装了iptables 2$ systemctl status iptables 3# 安装iptables 4$ yum install iptables iptables-services -y 启动 iptables 1# 注册iptables服务，相当于以前的chkconfig iptables on 2$ systemctl enable iptables 3# 开启服务 4$ systemctl start iptables 5# 查看状态 6$ systemctl status iptables 7# 重启防火墙 8$ systemctl restart iptables 9# 保存规则 10$ service iptables save 11# 如果报“-bash: service: command not found”，则需要安装initscripts 12$ yum install initscripts -y 基础规则 注意添加规则的先后顺序\n1# 允许本地回环接口(即运行本机访问本机) 2$ iptables -A INPUT -s 127.0.0.1 -d 127.0.0.1 -j ACCEPT 3# 允许已建立的或相关连的通行 4$ iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT 5# 允许ping 6# $ iptables -A INPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT 7# or 8$ iptables -A INPUT -p icmp -j ACCEPT 9# 添加SSH访问端口 10$ iptables -A INPUT -p tcp -m tcp --dport 28124 -j ACCEPT 11# 允许所有本机向外的访问 12$ iptables -P OUTPUT ACCEPT 13# 禁止其他未允许的规则访问 14$ iptables -P INPUT DROP // 默认入站规则为拒绝 15$ iptables -P FORWARD DROP // 默认转发规则为拒绝 其它规则 1# 允许访问指定端口 2$ iptables -A INPUT -p tcp -m tcp --dport 6443 -j ACCEPT 3# 允许访问连续端口 4$ iptables -A INPUT -p tcp -m tcp --dport 21:25 -j ACCEPT 5# 允许访问不连续端口 6$ iptables -A INPUT -p tcp -m multiport --dport 21:25,135:139 -j ACCEPT 7 8# 转发数据包 9# 将\u0026lt;本地端口\u0026gt;接收到的TCP数据包，直接转发到\u0026lt;目标IP\u0026gt;的\u0026lt;目标端口\u0026gt; 10$ iptables -t nat -A PREROUTING -p tcp --dport \u0026lt;本地端口\u0026gt; -j DNAT --to-destination \u0026lt;目标IP\u0026gt;:\u0026lt;目标端口\u0026gt; 11# 将\u0026lt;目标IP\u0026gt;的\u0026lt;目标端口\u0026gt;发来的TCP数据包，IP地址修改为\u0026lt;本地IP\u0026gt;后，原路转发回去 12$ iptables -t nat -A POSTROUTING -p tcp -d \u0026lt;目标IP\u0026gt; --dport \u0026lt;目标端口\u0026gt; -j SNAT --to \u0026lt;本地IP\u0026gt; 13# 如果要添加内网ip信任（接受其所有TCP请求） 14$ iptables -A INPUT -p tcp -s 45.96.174.68 -j ACCEPT 15# 封停一个IP 16$ iptables -I INPUT -s ***.***.***.*** -j DROP 17# 删除规则 18$ iptables -D INPUT #rulenum# 19# or 使用建立规则时条件，删除指定规则，这个方法比如适合代码使用 20$ iptables -D INPUT -p tcp -m tcp --dport 6443 -j ACCEPT 21# 解封一个IP 22$ iptables -D INPUT -s ***.***.***.*** -j DROP 查看规则 1$ iptables -L -n --line-numbers 重置规则 1# 使用这些命令刷新和重置 iptables 到默认状态 2 3# 清除已有iptables规则 4$ iptables -F 5 6$ iptables -X 7 8$ iptables -t nat -F 9 10$ iptables -t nat -X 11 12$ iptables -t mangle -F 13 14$ iptables -t mangle -X 15 16$ iptables -t raw -F 17 18$ iptables -t raw -X 19 20$ iptables -t security -F 21 22$ iptables -t security -X 23 24$ iptables -P INPUT ACCEPT 25 26$ iptables -P FORWARD ACCEPT 27 28$ iptables -P OUTPUT ACCEPT ","link":"https://cuile.github.io/posts/linux/iptables_manual/","section":"posts","tags":["linux","iptables","Firewall"],"title":"iptables 配置"},{"body":"","link":"https://cuile.github.io/tags/make/","section":"tags","tags":null,"title":"make"},{"body":"1、准备环境 建议使用纯linux系统进行编译，如 Ubuntu 20.04 LTS，这样环境比较简单，兼容问题也少。\n 用WSL环境编译，可参考\n 使用 Windows 子系统 ( WSL ) 编译 OpenWrt   为提高编译的成功率，采用国内大神Lean的版本。\n官方版本因编译过程中，下载、兼容等等太多问题，建议不要使用。\n1sudo apt-get update 2sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync 2、下载代码 国内用户请准备好梯子\n1git clone https://github.com/coolsnowwolf/lede 2cd lede 3./scripts/feeds update -a 4./scripts/feeds install -a 3、配置组件 1make menuconfig  Hyper-V平台配置，可参考\n 让OpenWRT完美适应Hyper-V   4、开始编译 1make -j8 download V=sc 2make -j1 V=sc 编译过程中下载库很难一次成功，如果编译报错，可多尝试几次，每次都可以补全几个文件\n 详细的命令说明，可参考\n OpenWrt 编译步骤与命令详解教程 如何编译一个属于自己的OpenWrt固件   编译完成无报错的情况下，最终文件在\n1cd ./bin/targets/x86/64/ 5、转成vhdx格式 vhdx格式，可以方便的在Hyper-V虚拟机中使用\n1qemu-img convert something.vmdk -O vhdx something.vhdx  如何使用，可参考\n 在 Windows 10 上使用 Hyper-V 安装 LEDE 软路由   参考文档  Lean Github openwrt.org Quickstart build images  ","link":"https://cuile.github.io/posts/openwrt/openwrt_make/","section":"posts","tags":["make"],"title":"编译x86_64版本的OpenWrt"},{"body":"","link":"https://cuile.github.io/tags/nat/","section":"tags","tags":null,"title":"NAT"},{"body":"1. 升级系统软件包 1$ apt-get update 2$ apt-get dist-upgrade 2. 安装 ifupdown2 使用 ifupdown2 网络管理软件包，还可以实时重新加载网络配置，而无需重新启动。\n1$ apt install ifupdown2 3. 配置物理网卡 使用 PVE 的 WEB 管理界面，设置物理网卡的配置。\n注意：一定要分配一个静态的IP地址，否则无法正常登录 PVE\n节点 \u0026gt; 系统 \u0026gt; 网络：\n address：192.168.10.66/24 gateway：192.168.10.1  保存后应用配置\n4. 配置虚拟网卡 4.1 修改虚拟网卡配置 使用 PVE 提供管理界面进行配置。 删除 vmbr0 设备的所有配置内容。\n编辑 /etc/network/interfaces\n1$ nano /etc/network/interfaces 加入\n1source /etc/network/interfaces.d/* 1# network interface settings; autogenerated 2# Please do NOT modify this file directly, unless you know what 3# you\u0026#39;re doing. 4# 5# If you want to manage parts of the network configuration manually, 6# please utilize the \u0026#39;source\u0026#39; or \u0026#39;source-directory\u0026#39; directives to do 7# so. 8# PVE will preserve these directives, but will NOT read its network 9# configuration from sourced files, so do not attempt to move any of 10# the PVE managed interfaces into external files! 11 12source /etc/network/interfaces.d/* 13 14auto lo 15iface lo inet loopback 16 17auto enp1s0 18iface enp1s0 inet static 19 address 192.168.10.66/24 20 gateway 192.168.10.1 21 22iface vmbr0 inet manual 23 bridge-ports none 24 bridge-stp off 25 brideg-fd 4.2 新建虚拟网卡配置 创建新的虚拟网卡配置\n注意：给虚拟网卡指定一个新的静态地址，是为下一级网络提供NAT服务\n1$ nano /etc/network/interfaces.d/vmbr0-nat 配置内容\n1auto vmbr0 2# private sub network 3iface vmbr0 inet static 4 address 192.168.100.1/24 5 bridge-ports none 6 bridge-stp off 7 bridge-fd 0 8 9 post-up echo 1 \u0026gt; /proc/sys/net/ipv4/ip_forward 10 post-down echo 0 \u0026gt; /proc/sys/net/ipv4/ip_forward 11 post-up iptables -t nat -A POSTROUTING -s \u0026#39;192.168.100.0/24\u0026#39; -o enp1s0 -j MASQUERADE 12 post-down iptables -t nat -D POSTROUTING -s \u0026#39;192.168.100.0/24\u0026#39; -o enp1s0 -j MASQUERADE 4.3 应用配置 1$ ifup -a ","link":"https://cuile.github.io/posts/proxmox/nat/","section":"posts","tags":["proxmoxve","NAT"],"title":"ProxmoxVE 配置 NAT 网络"},{"body":"本文记录OpenWrt设置透明代理的步骤及原理。\n1. 系统环境  硬件环境：Windows 10 Hyper-V虚拟机，单核处理器，256M内存 固件版本：OpenWrt 19.07.6 r11278-8055e38794 / LuCI openwrt-19.07 branch git-21.101.59933-c56d9f2 shadowsocks-libev：3.3.5 luci-app-shadowsocks：2.0.2 v2ray-plugin：4.37.3-20210413 ChinaDNS：1.3.3 luci-app-chinadns：1.6.2 https-dns-proxy：2021-01-17-5 luci-app-https-dns-proxy：git-21.062.76689-a607f9c-1 luci-i18n-https-dns-proxy-zh-cn：git-21.062.76689-a607f9c-1  2. 运行流程 透明代理的运行原理主要由DNS访问流程、IP访问流程两部分组成组成\n2.1 DNS访问流程 1flowchart LR 2 lh((localhost)); 3 dm(Dnsmasq); 4 cd(ChinaDNS); 5 hdp(https-dns-proxy); 6 ss(Shadowsocks); 7 fd(国外DNS); 8 dd(国内DNS); 9 10 lh -- 1 udp:53 --\u0026gt; dm; 11 dm -- 2 udp:5555 --\u0026gt; cd; 12 cd -- 3.1 udp:5353--\u0026gt; hdp; 13 cd -- 3.2 udp --\u0026gt; dd; 14 hdp -- 4 tcp --\u0026gt; ss; 15 ss -- 5 tcp --\u0026gt; fd; 16 17 fd -. 6 .-\u0026gt; ss; 18 ss -. 7 .-\u0026gt; hdp; 19 hdp -. 8.1 .-\u0026gt; cd; 20 dd -. 8.2 .-\u0026gt; cd; 21 cd -. 9 缓存 .-\u0026gt; dm; 22 dm -. 10 IP地址 .-\u0026gt; lh; 2.2 IP访问流程 1flowchart LR 2 fs(国外服务器); 3 ds(国内服务器); 4 lh((localhost)); 5 route{chinadns_chnroute.txt}; 6 ss(Shadowsocks); 7 8 lh -- 1 --\u0026gt; route; 9 route -- 2.1 国内IP --\u0026gt; ds; 10 route -- 2.2 国外IP --\u0026gt; ss; 11 ss -- 3 加密访问 --\u0026gt; fs; 12 13 fs -. 4 返回加密数据 .-\u0026gt; ss; 14 ds -. 5.1 返回数据 .-\u0026gt; lh; 15 ss -. 5.2 返回解密数据 .-\u0026gt; lh; 3. 配置 3.1 Shadowsocks-libev + v2ray-plugin  服务器管理-编辑服务器-插件参数：一定要加上\u0026quot;loglevel=none\u0026quot;，如果不加v2ray-plugin插件几分钟就会被系统杀死 访问控制-被忽略IP列表：/etc/chinadns_chnroute.txt  3.2 https-dns-proxy 由于使用了v2ray-plugin 插件，导致Shadowsocks不再支持UDP包，所以使用TCP的方式查询DNS\n 在开始/停止时更新DNSMASQ配置：不更新配置 如果自动更新配置，会影响到ChinaDNS的配置 Force Router DNS：Let local devices use their own DNS servers if set 实例  谷歌, 127.0.0.1, 5353 Cloudflare(安全防护), 127.0.0.1, 5454    3.3 ChinaDNS  启用双向过滤：勾选 监听端口：5555 上游服务器：114.114.114.114,127.0.0.1:5353,127.0.0.1:5454  3.4 DHCP/DNS 将OpenWrt的上游DNS指向ChinaDNS\n 常规设置-DNS转发：127.0.0.1#5555  关闭使用解析文件，指定上游DNS\n HOSTS和解析文件-忽略解析文件：勾选  3.5 计划任务 1## For ipip.net 2## 每周一12:30执行 330 12 * * 1 wget https://raw.githubusercontent.com/17mon/china_ip_list/master/china_ip_list.txt -O /tmp/china_ip_list.txt \u0026amp;\u0026amp; mv /tmp/china_ip_list.txt /etc/chinadns_chnroute.txt 45 * * * * /usr/bin/ss-subscribe auto \u0026gt;/dev/null 2\u0026gt;\u0026amp;1 3.6 防火墙  常规设置-区域-wan-IP动态伪装：一定要勾选！！！  参考文档  OpenWRT下安装和配置shadowsocks Shadowsocks + ChnRoute 实现 OpenWRT / LEDE 路由器自动科学上网 Shadowsocks for OpenWRT / LEDE 拾遗 ChinaDNS原理与源码分析  ","link":"https://cuile.github.io/posts/openwrt/openwrt_shadowsocks_proxy/","section":"posts","tags":["v2ray","proxy","ShadowSocks"],"title":"OpenWRT 配置透明代理"},{"body":"","link":"https://cuile.github.io/tags/shadowsocks/","section":"tags","tags":null,"title":"ShadowSocks"},{"body":"","link":"https://cuile.github.io/tags/v2ray/","section":"tags","tags":null,"title":"v2ray"},{"body":"","link":"https://cuile.github.io/tags/dns/","section":"tags","tags":null,"title":"DNS"},{"body":"1. 使用自定义域名访问WEB管理界面  网络-DHCP/DNS-常规设置-DNS转发：/openwrt.lan/192.168.xxx.xxx 网络-DHCP/DNS-常规设置-重绑定保护：不勾选 /etc/config/uhttpd-option redirect_https：'1' 不强制跳转https  ","link":"https://cuile.github.io/posts/openwrt/openwrt_dns/","section":"posts","tags":["DNS"],"title":"OpenWRT DNS设置"},{"body":"","link":"https://cuile.github.io/tags/alg/","section":"tags","tags":null,"title":"ALG"},{"body":"1. 安装软件包 1# opkg install kmod-nf-nathelper-extra 2# opkg install kmod-nf-ipvs-ftp 2. 添加配置 1# nano /etc/sysctl.d/11-nf-conntrack.conf 增加\u0026quot;net.netfilter.nf_conntrack_helper=1\u0026quot;\n在使用FTP的主动模式时，要注意关闭网关上的ALG功能（如Windows ALG服务），同时使用可能引起失败\n参考文档\n 原版OpenWRT启用FTP ALG功能 防火墙设置了NAT ALG功能导致FTP数据连接故障  ","link":"https://cuile.github.io/posts/openwrt/openwrt_ftp_alg/","section":"posts","tags":["FTP","ALG"],"title":"OpenWRT 启用 ALG 功能"},{"body":"","link":"https://cuile.github.io/tags/mysql/","section":"tags","tags":null,"title":"mysql"},{"body":"1. 复制  复制表数据，表结构的3种方法  2. 导入 2.1 使用 LOAD DATA   如果是导入有中文的数据，我的mysql 设置的utf8 字符集，所以你要导入的 文件也要保存utf-8的字符集，数据表列的顺序必须和excel的对应，否则导入的数据会有错误,\n  文件路径名要上的 \u0026quot; \\ \u0026quot;要变成 “ \\ ”或者 \u0026quot; / \u0026quot;,否则会报错\n  如果mysql用户没有读取本地文件的权限，那必须添加local参数，通过mysql client来读取文件\n  通过load data infile，20秒导入100W数据\n  LOAD DATA INFILE语句导入数据进入MySQL的一些注意事项\n  3. 删除  清空表(truncate)与删除表中数据(delete) 详解  ","link":"https://cuile.github.io/posts/database/mysql_manual/","section":"posts","tags":["mysql"],"title":"MySQL 数据操作"},{"body":" urllib.parse.urlencode(query, doseq=False, safe='', encoding=None, errors=None, quote_via=quote_plus) urllib.parse.urlencode 将对象或两元素序列转换为百分比编码的ASCII文本字符串，字符串是由'\u0026amp;'字符分隔的一系列 key=value 对，其中 key 和 value 都使用 quote_via 函数引用。\n GET 请求 1import urllib 2params = urllib.parse.urlencode({\u0026#39;spam\u0026#39;: 1, \u0026#39;eggs\u0026#39;: 2, \u0026#39;bacon\u0026#39;: 0}) 3url = \u0026#34;http://www.musi-cal.com/cgi-bin/query?%s\u0026#34; % params 4with urllib.request.urlopen(url) as f: 5 print(f.read().decode(\u0026#39;utf-8\u0026#39;)) POST 请求 1import urllib.request 2import urllib.parse 3data = urllib.parse.urlencode({\u0026#39;spam\u0026#39;: 1, \u0026#39;eggs\u0026#39;: 2, \u0026#39;bacon\u0026#39;: 0}) 4data = data.encode(\u0026#39;ascii\u0026#39;) 5with urllib.request.urlopen(\u0026#34;http://requestb.in/xrbl82xr\u0026#34;, data) as f: 6 print(f.read().decode(\u0026#39;utf-8\u0026#39;))  如果结果字符串要用作具有 urlopen() 函数的POST操作的 data，则它应该被编码为字节，否则将导致 TypeError。\n 默认情况下 urlencode 函数使用 quote_plus() 函数进行编码，也可以选用 quote() 函数进行编码，两者最大的不同在于对特定字符的处理。\n urllib.parse.quote_plus(string, safe='', encoding=None, errors=None) 默认情况下使用 quote_plus() 函数，它将空格被编码为 '+' 字符，而“/”字符被编码为 %2F，它遵循GET请求（application/x-www-form-urlencoded）的标准。 urllib.parse.quote(string, safe='/', encoding=None, errors=None) 可以作为备用的函数是 quote()，它将空格编码为 %20，字母，数字和 '_.-'字符不被编码，而“/”字符被默认为安全字符不被编码。\n 编码时会对所有字符进行编码处理，这会导致一些情况下编码后的参数不能被正确的识别，所以在使用时可根据编码的需求，指定一个编码函数。\n1urllib.parse.urlencode({\u0026#39;spam\u0026#39;: 1, \u0026#39;eggs\u0026#39;: 2, \u0026#39;bacon\u0026#39;: 0}, quote_via=urllib.parse.quote) 但即使指定函数，还会有一些特殊情况，需要保留一些特定的字符不被编码。 比如，我们想得到下面的参数\n1constraints[colors][0]=blue\u0026amp;amp;constraints[colors][1]=%E7%99%BD%20%E8%89%B2\u0026amp;amp;constraints[colors][2]=red\u0026amp;amp;order=newest 但无论使用 quote_plus() 或 quote()，“[” 和 “]” 字符一定会被编码。\n 要最大限度地控制编码的内容，请使用 quote() 并指定 safe 的值。\n 遇到这种情况，就需要根据手册的说明，指定 safe 的值来保证某字符不会被编码。\n1urllib.parse.urlencode(data, safe=\u0026#39;/[]\u0026#39;, quote_via=urllib.parse.quote)  safe，encoding 和 errors 参数被传递到 quote_via (encoding 和 errors 参数仅当查询元素是 str 时被传递)。\n 参考  urllib.parse.urlencode 手册 urllib.parse.quote 手册  ","link":"https://cuile.github.io/posts/python/urllib.parse.urlencode_manual/","section":"posts","tags":["url编码"],"title":"urllib.parse.urlencode 使用详解"},{"body":"","link":"https://cuile.github.io/tags/url%E7%BC%96%E7%A0%81/","section":"tags","tags":null,"title":"url编码"},{"body":"","link":"https://cuile.github.io/tags/nmcli/","section":"tags","tags":null,"title":"nmcli"},{"body":"基于Centos 7\n查看设备信息 1# 简单接口状态 2$ nmcli dev status 3# 详细的接口信息 4$ nmcli dev show 5# 接口的详细信息 6$ nmcli dev show \u0026lt;interface-name\u0026gt; 查看连接(connection)的信息 1# 简单信息 2$ nmcli conn show 3# 详细的连接信息 4$ nmcli conn show 5# 某个连接的详细信息 6$ nmcli conn show \u0026lt;conn-name\u0026gt; 创建连接 1nmcli conn add type \u0026lt;ethernet\u0026gt; con-name \u0026lt;conn-name\u0026gt; ifname \u0026lt;dev-name\u0026gt; ip4 \u0026lt;192.168.100.100/24\u0026gt; [gw4 \u0026lt;192.168.100.1\u0026gt;] 修改配置 静态IP改动态IP 1nmcli conn mod \u0026lt;conn-name\u0026gt; / 2 ipv4.method auto / 3 ipv4.address \u0026#34;\u0026#34; / 4 ipv4.gateway \u0026#34;\u0026#34; / 5 ipv4.dns \u0026#34;\u0026#34; 修改DNS 1$ nmcli conn mod \u0026lt;conn-name\u0026gt; ipv4.dns \u0026#34;1.2.4.8\u0026#34; 设置自动连接 1# 查询和显示所有网络连接的自动连接属性的当前值 2$ nmcli -f name,autoconnect connection 3# 更改网络连接的属性值 4$ nmcli conn mod \u0026lt;conn-name\u0026gt; connection.autoconnect yes 配置生效 1nmcli conn up \u0026lt;conn-name\u0026gt; 激活连接 1$ nmcli conn up \u0026lt;conn-name\u0026gt; 2$ nmcli conn down \u0026lt;conn-name\u0026gt; 3 4$ nmcli dev connect \u0026lt;dev-name\u0026gt; 5$ nmcli dev disconnect \u0026lt;dev-name\u0026gt;  建议使用 nmcli dev disconnect interface-name 命令，而不是 nmcli con down connection-name 命令，因为连接断开可将该接口放到“手动”模式，这样做用户让 NetworkManager 启动某个连接前，或发生外部事件（比如载波变化、休眠或睡眠）前，不会启动任何自动连接。\n 参考链接  nmcli 使用方法 在Linux系统上使用nmcli命令配置各种网络（有线、无线、vlan、vxlan、路由、网桥等） CentOS 7 下网络管理之命令行工具nmcli 修改 NetworkManager 配置文件的自动连接属性 在 Ubuntu/Debian 上安装和使用 NetworkManager (NMCLI)  ","link":"https://cuile.github.io/posts/linux/nmcli_manual/","section":"posts","tags":["Linux","CLI","nmcli","network"],"title":"使用 nmcli 配置网络"},{"body":"","link":"https://cuile.github.io/tags/sed/","section":"tags","tags":null,"title":"sed"},{"body":"删除冗余信息 1sed -i \u0026#39;s/.*a2p_replyclient_log.*[infoerror].[0-9].log.gz://\u0026#39; merge.log \\ 2\u0026amp;\u0026amp; sed -i \u0026#39;s/org.springframework.amqp.rabbit.RabbitListenerEndpointContainer.* - //\u0026#39; merge.log \\ 3\u0026amp;\u0026amp; sed -i \u0026#39;/.*send 1 time for the url is .*/d\u0026#39; merge.log \\ 4\u0026amp;\u0026amp; sed -i \u0026#39;/.*redis key:[0-9]*,value:.*/d\u0026#39; merge.log 5 6sed -i \u0026#39;/\u0026gt;\u0026gt;\u0026gt;\u0026gt;.* retry:2/d\u0026#39; 2021.8.log 7sed -i \u0026#39;s/the content of the url:.*receiveStatusReportResultChinaMobile.shtml //\u0026#39; 2021.8.log 统计 1sed -n \u0026#39;/ status:DELIVRD,/p\u0026#39; result.log | wc -l 2sed -n \u0026#39;/\u0026#34;originalStatus\u0026#34;:\u0026#34;DELIVRD\u0026#34;/p\u0026#39; merge.log | wc -l 删除毫秒 1sed -i \u0026#39;s/\\.[0-9]\\{0,3\\}\\( \\[\\)/\\1/\u0026#39; merge.log 删除时间 1sed -i \u0026#39;s/.*\\(\\[INFO\\]\\)/\\1/\u0026#39; 2021.8.log 2sed -i \u0026#39;s/.*\\(\\[ERROR\\]\\)/\\1/\u0026#39; 2021.8.log 3sed -i \u0026#39;s/time:.*,\\(is_china_mobile\\)/\\1/\u0026#39; 2021.8.log 删除冗余字符 1sed -i \u0026#39;s/error for the url//\u0026#39; merge.log 2sed -i \u0026#39;s/can not read content from the url//\u0026#39; merge.log 去重复 1$ awk \u0026#39;!x[$0]++\u0026#39; merge.log 2$ sort -n merge.log | uniq 删除空行 1$ sed -i \u0026#39;/^\\s*$/d\u0026#39; merge1.log 修改Ubuntu源地址 1$ sudo sed -i \u0026#39;s/\\(archive\\|security\\).ubuntu/mirrors.aliyun/\u0026#39; /etc/apt/sources.list SSH连接不自动断开 1$ sed -i \u0026#39;s|^#\\(ClientAliveInterval\\) 0$|\\1 60|g\u0026#39; /etc/ssh/sshd_config 2$ sed -i \u0026#39;s|^#\\(ClientAliveCountMax\\) 3$|\\1 5|g\u0026#39; /etc/ssh/sshd_config 3$ systemctl restart sshd /etc/hosts 1# sed 参考 http://man.linuxde.net/sed 2 # https://www.cnblogs.com/ggjucheng/archive/2013/01/13/2856901.html 3$ sed ...... 读取指定行 1$ sed -n \u0026#39;1,2p\u0026#39; file 参考文档  sed入门详解教程  ","link":"https://cuile.github.io/posts/linux/sed_manual/","section":"posts","tags":["Linux","sed","CLI"],"title":"使用 sed 命令操作"},{"body":"记录系统初始化应操作的一系统步骤，也可以直接下载初始化脚本。\n 1. 系统更新  Yum 版本库管理  2. 远程公私钥登录 1# 生成公钥、私钥 2ssh-keygen -t rsa -b 4096 -C \u0026#34;your_email@example.com\u0026#34; 3... 4Enter a file in which to save the key (/home/you/.ssh/algorithm): \u0026lt;key_name\u0026gt; 5Enter passphrase (empty for no passphrase): [输入密码] 6Enter same passphrase again: [再次输入密码] 7# 设置访问权限 8cd ~/.ssh 9chmod 600 \u0026lt;key_name\u0026gt; 10# 将公钥追加到 authorized_keys 文件，可追加多个公钥 11cat \u0026lt;key.pub\u0026gt; \u0026gt;\u0026gt; authorized_keys 12# 私钥在 SSH 登录时使用 3. 配置防火墙  iptables 配置    Ubuntu 22 环境初始化   4. 配置Samba 为使用机器名快速连接\n其它配置 网络端口操作 1# 查看端口占用 2# 查看所有端口占用情况 3netstat -tlunp 4# 查看指定端口占用情况 5netstat -tlunp | grep \u0026lt;port\u0026gt; 查看系统版本 1lsb_release -a 2cat /etc/redhat-release 3cat /etc/issue 系统进程操作 1# 定位高CPU占用 2ps H -eo user,pid,ppid,tid,time,%cpu,cmd --sort=%cpu 3# 可视化显示CPU的使用状况的工具 4yum install -y htop 5htop 6# 查看进程的启动目录 7ls -l /proc/\u0026lt;PID\u0026gt;/cwd  查看CPU和内存使用情况 查看运行进程的启动目录  磁盘操作 1# 修改硬盘挂载目录 2# 卸载硬盘 3umount -v /mnt/raid1-2disk-500G 4# 修改挂载目录 5mv /mnt/raid1-2disk-500G /mnt/raid1-250G-2disk 6# 修改/etc/fstab文件里的挂载目录 7nano /etc/fstab 8# 重装挂载 9mount -av /dev/md127 /mnt/raid1-250G-2disk  查询并筛选 磁盘空间 统计 排序  修改密码 1passwd \u0026lt;username\u0026gt; 查看文件夹大小 1du -h --max-depth=1 \u0026lt;path\u0026gt; ","link":"https://cuile.github.io/posts/linux/init_setup_manual/","section":"posts","tags":["linux","CLI","bash","ssh","top"],"title":"Linux 系统初始化配置"},{"body":"","link":"https://cuile.github.io/tags/top/","section":"tags","tags":null,"title":"top"},{"body":"","link":"https://cuile.github.io/tags/blog/","section":"tags","tags":null,"title":"Blog"},{"body":"设置流程 不过多说明了，网上教程非常多，可以找来看。\n参考文档\n 使用 Github Actions 自动发布 hugo 站点 Hugo的基本安装｜网站生成｜托管至Github Pages  各种坑位 1. 网页正常部署后，访问时页面却无法正常显示，部局完全是乱的。 这可能是https请求报\u0026quot;block:mixed-content\u0026quot;错误导致的，是浏览器不允许在https页面里嵌入http的请求，现在高版本的浏览器为了用户体验，都不会弹窗报错，只会在控制台上打印一条错误信息。\n解决这个问题，可以从以下2点入手：\n1.1. 在\u0026quot;theme/\u0026lt;YouThemeName\u0026gt;/layouts/partials/head.html\u0026quot;文件内，添加代码\n1\u0026lt;meta http-equiv=\u0026#34;Content-Security-Policy\u0026#34; content=\u0026#34;upgrade-insecure-requests\u0026#34;\u0026gt; ** 参考文档 **\n https请求报错block:mixed-content问题的解决办法  1.2. 确保config.toml文件内，\u0026quot;baseUrl\u0026quot;的值与实际地址一致。\n2. config.toml 里的 theme 值，要与主题文档夹名一致，不然可能会导致主题无法应用的问题。 3. Github Actions 设置里的 gh-pages.yml 写法要注意 \u0026quot;Setup Hugo\u0026quot;项目里，标准版本与扩展版本的参数写法不一样。\n1# 使用扩展版本2- name:Setup Hugo3uses:peaceiris/actions-hugo@v24with:5hugo-version:\u0026#39;0.91.2\u0026#39;6extended:true1# 使用标准版本2- name:Setup Hugo3uses:peaceiris/actions-hugo@v24with:5hugo-version:\u0026#39;latest\u0026#39;参考文档\n GitHub Actions for Hugo  ","link":"https://cuile.github.io/posts/hugo_setup_for_github/","section":"posts","tags":["Hugo","Github","Blog"],"title":"Github使用Hugo生成Blog"},{"body":"","link":"https://cuile.github.io/tags/hugo/","section":"tags","tags":null,"title":"Hugo"},{"body":"镜像列表 1$ docker image ls -a 2# or 3$ docker images 容器列表 1$ docker container ls -a 2# or 3$ docker ps 查看输出 1$ docker compose -f \u0026lt;yml file\u0026gt; logs [-f] [service name] 2# or 3$ docker logs [-f] [container id] 删除冗余镜像 1$ docker system prune 创建桥接网络 1$ docker network create [name] Docker快捷命令 1$ echo \u0026#34;alias d-ll=\u0026#39;docker image ls -a; echo; docker container ls -a\u0026#39;\u0026#34; \u0026gt;\u0026gt; ~/.bashrc \\ 2 \u0026amp;\u0026amp; echo \u0026#34;alias d-ps=\u0026#39;docker ps\u0026#39;\u0026#34; \u0026gt;\u0026gt; ~/.bashrc \\ 3 \u0026amp;\u0026amp; echo \u0026#34;alias d-clean=\u0026#39;docker system prune -f\u0026#39;\u0026#34; \u0026gt;\u0026gt; ~/.bashrc \\ 4 \u0026amp;\u0026amp; echo \u0026#34;alias d-rm=\u0026#39;_a(){ docker image rm $1; echo; docker container rm $1; }; _a\u0026#39;\u0026#34; \u0026gt;\u0026gt; ~/.bashrc \\ 5 \u0026amp;\u0026amp; echo \u0026#34;alias d-exec=\u0026#39;_a(){ docker exec -it $1/bin/bash; }; _a\u0026#39;\u0026#34; \u0026gt;\u0026gt; ~/.bashrc \\ 6 \u0026amp;\u0026amp; echo \u0026#34;alias d-stop=\u0026#39;_a(){ docker container stop $1; }; _a\u0026#39;\u0026#34; \u0026gt;\u0026gt; ~/.bashrc \\ 7 \u0026amp;\u0026amp; echo \u0026#34;alias d-kill=\u0026#39;_a(){ docker container kill $1; }; _a\u0026#39;\u0026#34; \u0026gt;\u0026gt; ~/.bashrc 8 9$ source ~/.bashrc 导入导出镜像 1# 导入 2$ docker load -i \u0026lt;image\u0026gt;.tar 3# 导出 4$ docker save -o \u0026lt;image\u0026gt;.tar \u0026lt;image_name:label\u0026gt; ","link":"https://cuile.github.io/posts/docker/docker_cli/","section":"posts","tags":["CLI","Docker"],"title":"Docker使用命令"},{"body":"","link":"https://cuile.github.io/archives/","section":"","tags":null,"title":""},{"body":"Written in Go, Hugo is an open source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.\nHugo makes use of a variety of open source projects including:\n https://github.com/yuin/goldmark https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper  Hugo is ideal for blogs, corporate websites, creative portfolios, online magazines, single page applications or even a website with thousands of pages.\nHugo is for people who want to hand code their own website without worrying about setting up complicated runtimes, dependencies and databases.\nWebsites built with Hugo are extremelly fast, secure and can be deployed anywhere including, AWS, GitHub Pages, Heroku, Netlify and any other hosting provider.\nLearn more and contribute on GitHub.\n","link":"https://cuile.github.io/about/","section":"","tags":null,"title":"About"},{"body":"","link":"https://cuile.github.io/tags/pypi/","section":"tags","tags":null,"title":"PyPi"},{"body":"Python 的 pypi.python.org 站点终于要退休了，而新的接任者 pypi.org 无论从美观、风格上都让人大大的喜欢，终于在审美一这项上及格了。\n而且新的 pypi.org 能够正确的渲染 Markdown 格式的描述，实在是让人欣慰，终于可以和 Github 同步了，不用在麻烦的转换一次了。\n下面就来聊聊，如何正确的把库发布到 pypi.org 上：\n1. 注册 pypi.org 账号 嗯，这是正确的废话！\n2. 编写 setup.py setup.py 的内容比较重要，但其它的细节不谈，主要聊聊 long_description 部分，这部分是对库能力的详细描述。\n 如果说 keywords 和 description 能提高别人搜索到项目的概率的话，那 long_description 就在很大程度上决定别人对你对项目有没有进一步的想法了。\n 在针对 long_description 的网上介绍中，对具体使用方法明确写出的是少之又少，所以我今天就特别举例说明一下。\n2.1 setup.py 1#!/usr/bin/env python 2# coding: utf-8 3 4from setuptools import setup 5 6setup( 7name=\u0026#39;sequence2hash\u0026#39;, 8version=\u0026#39;1.1.2\u0026#39;, 9keywords=\u0026#39;tuple dict list sequence hash key/value\u0026#39;, 10packages=[\u0026#39;sequence2hash\u0026#39;], 11 12url=\u0026#39;https://github.com/Cuile/sequence2hash\u0026#39;, 13description=\u0026#39;This tool converts a valid value in a sequence to a hash and contains a path to a valid value in the key field\u0026#39;, 14long_description_content_type=\u0026#39;text/markdown\u0026#39;, 15long_description=open(\u0026#39;README.md\u0026#39;, encoding=\u0026#39;utf8\u0026#39;).read(), 16 17author=\u0026#39;cuile\u0026#39;, 18author_email=\u0026#39;i@cuile.com\u0026#39; 19) 2.2 读取 readme.md 文件 1long_description=open(\u0026#39;README.md\u0026#39;, encoding=\u0026#39;utf8\u0026#39;).read() 这句代码是较少明确说明的，可以不引用 io 库，而直接使用 open 函数读取文件内容，由于 pypi.org 支持 Markdown ，所以可以和 Github 使用同一份 README.md 文件。\n2.3 设置内容类型 1long_description_content_type=\u0026#39;text/markdown\u0026#39; 2 这句很重要，标明元数据字段中 long_description 的格式，支持 text/plain, text/x-rst, text/markdown 。\n A content type can be specified with the long_description_content_type argument, which can be one of text/plain, text/x-rst, or text/markdown, corresponding to no formatting, reStructuredText (reST), and the Github-flavored Markdown dialect of Markdown respectively.\n 3. 打包上传 先升级一下必要的打包工具，setuptools\u0026gt;= 38.6.0 才能使用新的元数据生成发布包， twine\u0026gt; = 1.11.0 才能将元数据正确发送到 PyPI 。\n1$ pip install -U setuptools twine 2 3# 打包 4$ python setup.py sdist 5 6# 上传 7$ twine upload dist/* twine 会依次上传 dist 文件夹下的所有内容，但 pypi.org 对已上传过的文件和版本是不允许再次上传的，所以每次更新内容时除了 version 字段递增外，还要在打包前删除 dist 文件夹，由打包命令重新生成，以防文件夹内有老版本的包，导致上传失败。\n参考  如何将自己的程序发布到 PyPI PyPI 终于支持 Markdown 了 打包 python package 到 pypi 在Pypi上发布自己的Python包 Packaging and distributing projects EMOJI CHEAT SHEET GitHub上README写法暨GFM语法解读  ","link":"https://cuile.github.io/posts/python/release_pypi_package/","section":"posts","tags":["PyPi"],"title":"在pypi上发布自己的Python库"}]