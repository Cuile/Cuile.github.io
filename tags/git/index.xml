<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>git on 瘦了就帅了</title><link>https://blog.cuile.com/tags/git/</link><description>Recent content in git on 瘦了就帅了</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 21 Jun 2022 19:20:04 +0800</lastBuildDate><atom:link href="https://blog.cuile.com/tags/git/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 SSH 连接 Github</title><link>https://blog.cuile.com/posts/git/connect_with_ssh/</link><pubDate>Tue, 21 Jun 2022 19:20:04 +0800</pubDate><guid>https://blog.cuile.com/posts/git/connect_with_ssh/</guid><description>
生成新的 SSH Key $ ssh-keygen -t rsa -b 4096 -C &amp;#34;your_email@example.com&amp;#34; ... Enter a file in which to save the key (/home/you/.ssh/algorithm): &amp;lt;密钥文件名&amp;gt; Enter passphrase (empty for no passphrase): [输入密码] Enter same passphrase again: [再次输入密码] 将新的 SSH Key 添加到 Github 将公钥文件的内容COPY出来 $ cat ~/.ssh/github.com.key.pub Github.com -&amp;gt; &amp;ldquo;Settings&amp;rdquo; -&amp;gt; &amp;ldquo;SSH and GPG keys&amp;rdquo; -&amp;gt; &amp;ldquo;New SSH key&amp;rdquo; Title : 为新密钥添加描述性标签
Key : 粘贴COPY的公钥内容
&amp;ldquo;Add SSH key&amp;rdquo; 使用 SSH 连接到 Github 安装keychain $ yum install -y keychain # or $ apk add keychain 使用 SSH key $ eval `keychain --eval ~/.</description></item><item><title>Git 命令行</title><link>https://blog.cuile.com/posts/git/git_cli/</link><pubDate>Mon, 16 May 2022 14:32:27 +0800</pubDate><guid>https://blog.cuile.com/posts/git/git_cli/</guid><description>
拉取 $ git pull 删除本地文件后，从远端重新拉取最新版本 git提示： up-to-date. 但未从远端得到文件
查看本地分支是否发生变化 $ git branch -a 如本地库处于另一个分支中，需将本地分支熏置回原分支 $ git checkout ***** $ git reset --hard 如本地分支没有变化，则强行 pull 覆盖本地文件 $ git fetch --all $ git reset --hard origin/***** $ git pull 分支 $ git branch -a 切换分支 $ git checkout &amp;lt;branch&amp;gt; 拉取远程分支 $ git fetch origin &amp;lt;branch&amp;gt; $ git checkout -b &amp;lt;branch&amp;gt; origin/&amp;lt;branch&amp;gt; $ git pull origin &amp;lt;branch&amp;gt; 更新远程分支列表 # 如果你的 remote branch 不是在 origin 下，把 origin 换成你的名字 # --prune 删除远程已经删除的分支 $ git remote update origin --prune 标签 # 查看现有的标签 $ git tag # 给最新的提交打标签 $ git tag 1.</description></item></channel></rss>