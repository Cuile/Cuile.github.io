<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Url编码 on 瘦了就帅了</title><link>https://blog.cuile.com/tags/url%E7%BC%96%E7%A0%81/</link><description>Recent content in Url编码 on 瘦了就帅了</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Sun, 05 Oct 2025 02:09:22 +0000</lastBuildDate><atom:link href="https://blog.cuile.com/tags/url%E7%BC%96%E7%A0%81/index.xml" rel="self" type="application/rss+xml"/><item><title>urllib.parse.urlencode 使用详解</title><link>https://blog.cuile.com/post/python/urllib.parse.urlencode_manual/</link><pubDate>Mon, 17 Jan 2022 15:24:58 +0800</pubDate><guid>https://blog.cuile.com/post/python/urllib.parse.urlencode_manual/</guid><description>&lt;blockquote>
&lt;p>urllib.parse.urlencode(query, doseq=False, safe=&amp;rsquo;&amp;rsquo;, encoding=None, errors=None, quote_via=quote_plus)
urllib.parse.urlencode 将对象或两元素序列转换为百分比编码的ASCII文本字符串，字符串是由&amp;rsquo;&amp;amp;&amp;lsquo;字符分隔的一系列 key=value 对，其中 key 和 value 都使用 quote_via 函数引用。&lt;/p>&lt;/blockquote>
&lt;h2 id="get-请求">GET 请求&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> urllib
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>params &lt;span style="color:#f92672">=&lt;/span> urllib&lt;span style="color:#f92672">.&lt;/span>parse&lt;span style="color:#f92672">.&lt;/span>urlencode({&lt;span style="color:#e6db74">&amp;#39;spam&amp;#39;&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;eggs&amp;#39;&lt;/span>: &lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;bacon&amp;#39;&lt;/span>: &lt;span style="color:#ae81ff">0&lt;/span>})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>url &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;http://www.musi-cal.com/cgi-bin/query?&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> params
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">with&lt;/span> urllib&lt;span style="color:#f92672">.&lt;/span>request&lt;span style="color:#f92672">.&lt;/span>urlopen(url) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(f&lt;span style="color:#f92672">.&lt;/span>read()&lt;span style="color:#f92672">.&lt;/span>decode(&lt;span style="color:#e6db74">&amp;#39;utf-8&amp;#39;&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="post-请求">POST 请求&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> urllib.request
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> urllib.parse
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>data &lt;span style="color:#f92672">=&lt;/span> urllib&lt;span style="color:#f92672">.&lt;/span>parse&lt;span style="color:#f92672">.&lt;/span>urlencode({&lt;span style="color:#e6db74">&amp;#39;spam&amp;#39;&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;eggs&amp;#39;&lt;/span>: &lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;bacon&amp;#39;&lt;/span>: &lt;span style="color:#ae81ff">0&lt;/span>})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>data &lt;span style="color:#f92672">=&lt;/span> data&lt;span style="color:#f92672">.&lt;/span>encode(&lt;span style="color:#e6db74">&amp;#39;ascii&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">with&lt;/span> urllib&lt;span style="color:#f92672">.&lt;/span>request&lt;span style="color:#f92672">.&lt;/span>urlopen(&lt;span style="color:#e6db74">&amp;#34;http://requestb.in/xrbl82xr&amp;#34;&lt;/span>, data) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(f&lt;span style="color:#f92672">.&lt;/span>read()&lt;span style="color:#f92672">.&lt;/span>decode(&lt;span style="color:#e6db74">&amp;#39;utf-8&amp;#39;&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>如果结果字符串要用作具有 urlopen() 函数的POST操作的 data，则它应该被编码为字节，否则将导致 TypeError。&lt;/p>&lt;/blockquote>
&lt;p>默认情况下 urlencode 函数使用 quote_plus() 函数进行编码，也可以选用 quote() 函数进行编码，两者最大的不同在于对特定字符的处理。&lt;/p>
&lt;blockquote>
&lt;p>urllib.parse.quote_plus(string, safe=&amp;rsquo;&amp;rsquo;, encoding=None, errors=None)
默认情况下使用 quote_plus() 函数，它将空格被编码为 &amp;lsquo;+&amp;rsquo; 字符，而“/”字符被编码为 %2F，它遵循GET请求（application/x-www-form-urlencoded）的标准。
urllib.parse.quote(string, safe=&amp;rsquo;/&amp;rsquo;, encoding=None, errors=None)
可以作为备用的函数是 quote()，它将空格编码为 %20，字母，数字和 &amp;lsquo;_.-&amp;lsquo;字符不被编码，而“/”字符被默认为安全字符不被编码。&lt;/p></description></item></channel></rss>