<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>docker on 瘦了就帅了</title><link>https://cuile.github.io/series/docker/</link><description>Recent content in docker on 瘦了就帅了</description><generator>Hugo -- gohugo.io</generator><copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright><lastBuildDate>Tue, 19 Jul 2022 11:31:21 +0800</lastBuildDate><atom:link href="https://cuile.github.io/series/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker Compose 指令</title><link>https://cuile.github.io/posts/docker/docker_compose_command/</link><pubDate>Tue, 19 Jul 2022 11:31:21 +0800</pubDate><guid>https://cuile.github.io/posts/docker/docker_compose_command/</guid><description>
command 指令 1# 字符串方式2command:/bin/bash -c &amp;#34;cp /app/dtest/config.default.yml /app/config.yml &amp;amp;&amp;amp; python -u /app/dtest/tcc.py&amp;#34;3# 另一种方式4command:[&amp;#34;/bin/bash&amp;#34;,</description></item><item><title>Alpine Linux 安装 Docker</title><link>https://cuile.github.io/posts/docker/docker_install_alpine_linux/</link><pubDate>Sun, 19 Jun 2022 16:08:06 +0800</pubDate><guid>https://cuile.github.io/posts/docker/docker_install_alpine_linux/</guid><description>
在 Alpine 上安装 Docker 真是一件让人感觉非常愉快的事情，因为过程非常简单。 修改 apk 源 1$ nano /etc/apk/repositories 因为 docker 在社区的库里，所以要打开 community 的源。 1#/media/cdrom/apks 2http://mirrors.tuna.tsinghua.edu.cn/alpine/v3.16/main 3http://mirrors.tuna.tsinghua.edu.cn/alpine/v3.16/community 4#http://mirrors.tuna.tsinghua.edu.cn/alpine/edge/main 5#http://mirrors.tuna.tsinghua.edu.cn/alpine/edge/community 6#http://mirrors.tuna.tsinghua.edu.cn/alpine/edge/testing 安装 Docker 1$ apk update 2$</description></item><item><title>使用 Snap 安装 Docker</title><link>https://cuile.github.io/posts/docker/docker_install_snap/</link><pubDate>Wed, 11 May 2022 18:41:48 +0800</pubDate><guid>https://cuile.github.io/posts/docker/docker_install_snap/</guid><description>
尝试使用 Ubuntu 的 Snap 后，发现真的非常方便。 看过Snap的介绍以后，发现Snap的沙盒理念非常先进，在存储基本不成问题背景下，会系统环境的影响更小。</description></item><item><title>Docker 环境 Django 开发简介</title><link>https://cuile.github.io/posts/django/django_development_introduction/</link><pubDate>Tue, 10 May 2022 16:30:13 +0800</pubDate><guid>https://cuile.github.io/posts/django/django_development_introduction/</guid><description>
1 准备环境 开发环境还是建议使用 Docker 来搭建，方便快捷。 不过 Django 的官方镜像已经弃用了，官方建议新版本使用 Python 官方提供的镜像来构建。 1Docker 2 ┗ Python == 3.9.12-buster 3 ┗ Django ==</description></item><item><title>(CentOS 7 | Rocky 9) 安装 Docker</title><link>https://cuile.github.io/posts/docker/docker_install_centos/</link><pubDate>Fri, 06 May 2022 11:05:23 +0800</pubDate><guid>https://cuile.github.io/posts/docker/docker_install_centos/</guid><description>
其实网上相关的文章已经非常多了，所以这篇文章的作用只是记录和明确一条确定可行的操作路径，为以后的操作节省时间，毕竟像我一样大部分人都不是专业</description></item><item><title>Docker 命令</title><link>https://cuile.github.io/posts/docker/docker_cli/</link><pubDate>Thu, 13 Jan 2022 22:20:52 +0800</pubDate><guid>https://cuile.github.io/posts/docker/docker_cli/</guid><description>
镜像列表 1docker image ls -a 2# or 3docker images 容器列表 1docker container ls -a 2# or 3docker ps 查看输出 1docker compose -f &amp;lt;yaml_file&amp;gt; logs [-f] [service name] 2# or 3docker logs [-f] [container id] 验证配置文件 1docker compose -f &amp;lt;yaml_file&amp;gt; config 删除冗余镜像 1echo &amp;#39;y&amp;#39; | docker system prune 导入导出</description></item></channel></rss>