<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 瘦了就帅了</title><link>https://blog.cuile.com/posts/</link><description>Recent content in Posts on 瘦了就帅了</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 17 Jan 2022 11:18:47 +0800</lastBuildDate><atom:link href="https://blog.cuile.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 sed 命令操作文本文件</title><link>https://blog.cuile.com/posts/sed_manual/</link><pubDate>Mon, 17 Jan 2022 11:18:47 +0800</pubDate><guid>https://blog.cuile.com/posts/sed_manual/</guid><description>
脚本基于Ubuntu 20.04
合并文件 cat info.log error.log &amp;gt; merge.log.bak cp merge.log.bak merge.log 删除冗余信息 sed -i &amp;#39;s/.*a2p_replyclient_log.*[infoerror].[0-9].log.gz://&amp;#39; merge.log \ &amp;amp;&amp;amp; sed -i &amp;#39;s/org.springframework.amqp.rabbit.RabbitListenerEndpointContainer.* - //&amp;#39; merge.log \ &amp;amp;&amp;amp; sed -i &amp;#39;/.*send 1 time for the url is .*/d&amp;#39; merge.log \ &amp;amp;&amp;amp; sed -i &amp;#39;/.*redis key:[0-9]*,value:.*/d&amp;#39; merge.log sed -i &amp;#39;/&amp;gt;&amp;gt;&amp;gt;&amp;gt;.* retry:2/d&amp;#39; 2021.8.log sed -i &amp;#39;s/the content of the url:.*receiveStatusReportResultChinaMobile.shtml //&amp;#39; 2021.8.log 统计 sed -n &amp;#39;/ status:DELIVRD,/p&amp;#39; result.log | wc -l sed -n &amp;#39;/&amp;#34;originalStatus&amp;#34;:&amp;#34;DELIVRD&amp;#34;/p&amp;#39; merge.</description></item><item><title>Linux系统命令</title><link>https://blog.cuile.com/posts/linux_cli/</link><pubDate>Mon, 17 Jan 2022 11:07:07 +0800</pubDate><guid>https://blog.cuile.com/posts/linux_cli/</guid><description>
脚本基于Centos7
系统进程操作 查看CPU和内存使用情况 # 定位高CPU占用 $ ps H -eo user,pid,ppid,tid,time,%cpu,cmd --sort=%cpu # 可视化显示CPU的使用状况的工具 $ yum install -y htop $ htop 磁盘操作 查询并筛选 磁盘空间 统计 排序 # 修改硬盘挂载目录 # 卸载硬盘 $ umount -v /mnt/raid1-2disk-500G # 修改挂载目录 $ mv /mnt/raid1-2disk-500G /mnt/raid1-250G-2disk # 修改/etc/fstab文件里的挂载目录 $ nano /etc/fstab # 重装挂载 $ mount -av /dev/md127 /mnt/raid1-250G-2disk 网络端口操作 # 查看端口占用 # 查看所有端口占用情况 $ netstat -tlunp # 查看指定端口占用情况 $ netstat -tlunp | grep &amp;lt;port&amp;gt; 文件操作 文件截取 系统设置操作 # systemctl命令 systemctl list-units ##列出当前系统服务的状态 systemctl list-unit-files ##列出服务的开机状态 systemctl status sshd ##查看指定服务的状态 systemctl stop sshd ##关闭指定服务 systemctl start sshd ##开启指定服务 systemctl restart sshd ##从新启动服务 systemctl enable sshd ##设定指定服务开机开启 systemctl disable sshd ##设定指定服务开机关闭 systemctl reload sshd ##使指定服务从新加载配置 systemctl list-dependencies sshd ##查看指定服务的倚赖关系 systemctl mask sshd ##冻结指定服务 systemctl unmask sshd ##启用服务 systemctl set-default multi-user.</description></item><item><title>Github使用Hugo生成Blog</title><link>https://blog.cuile.com/posts/hugo_setup_for_github/</link><pubDate>Fri, 14 Jan 2022 17:15:06 +0800</pubDate><guid>https://blog.cuile.com/posts/hugo_setup_for_github/</guid><description>
设置流程 不过多说明了，网上教程非常多，可以找来看。
参考文档
使用 Github Actions 自动发布 hugo 站点 Hugo的基本安装｜网站生成｜托管至Github Pages 各种坑位 1. 网页正常部署后，访问时页面却无法正常显示，部局完全是乱的。 这可能是https请求报&amp;quot;block:mixed-content&amp;quot;错误导致的，是浏览器不允许在https页面里嵌入http的请求，现在高版本的浏览器为了用户体验，都不会弹窗报错，只会在控制台上打印一条错误信息。
解决这个问题，可以从以下2点入手：
1.1. 在&amp;quot;theme/&amp;lt;YouThemeName&amp;gt;/layouts/partials/head.html&amp;quot;文件内，添加代码
&amp;lt;meta http-equiv=&amp;#34;Content-Security-Policy&amp;#34; content=&amp;#34;upgrade-insecure-requests&amp;#34;&amp;gt; 参考文档
https请求报错block:mixed-content问题的解决办法 1.2. 确保config.toml文件内，&amp;ldquo;baseUrl&amp;quot;的值与实际地址一致。
2. config.toml 里的 theme 值，要与主题文档夹名一致，不然可能会导致主题无法应用的问题。 3. Github Actions 设置里的 gh-pages.yml 写法要注意 &amp;ldquo;Setup Hugo&amp;quot;项目里，标准版本与扩展版本的参数写法不一样。
# 使用扩展版本 - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: &amp;#39;0.91.2&amp;#39; extended: true # 使用标准版本 - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: &amp;#39;latest&amp;#39; 参考文档
GitHub Actions for Hugo</description></item><item><title>Docker使用命令</title><link>https://blog.cuile.com/posts/docker_cli/</link><pubDate>Thu, 13 Jan 2022 22:20:52 +0800</pubDate><guid>https://blog.cuile.com/posts/docker_cli/</guid><description>
镜像列表 $ docker image ls -a # or $ docker images 容器列表 $ docker container ls -a # or $ docker ps 删除冗余镜像 $ docker system prune 创建桥接网络 $ docker network create [name] Docker快捷命令 $ echo &amp;#34;alias d-ll=&amp;#39;docker image ls -a; echo; docker container ls -a&amp;#39;&amp;#34; &amp;gt;&amp;gt; ~/.bashrc \ &amp;amp;&amp;amp; echo &amp;#34;alias d-ps=&amp;#39;docker ps&amp;#39;&amp;#34; &amp;gt;&amp;gt; ~/.bashrc \ &amp;amp;&amp;amp; echo &amp;#34;alias d-clean=&amp;#39;docker system prune -f&amp;#39;&amp;#34; &amp;gt;&amp;gt; ~/.bashrc \ &amp;amp;&amp;amp; echo &amp;#34;alias d-rm=&amp;#39;_a(){ docker image rm $1; echo; docker container rm $1; }; _a&amp;#39;&amp;#34; &amp;gt;&amp;gt; ~/.</description></item></channel></rss>